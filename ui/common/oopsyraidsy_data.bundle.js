"use strict";
(self["webpackChunkcactbot"] = self["webpackChunkcactbot"] || []).push([[727],{

/***/ 9156:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ oopsy_manifest)
});

// EXTERNAL MODULE: ./resources/netregexes.ts
var netregexes = __webpack_require__(622);
// EXTERNAL MODULE: ./resources/zone_id.ts
var zone_id = __webpack_require__(5588);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/00-misc/general.ts


// General mistakes; these apply everywhere.
const triggerSet = {
  zoneId: zone_id/* default.MatchAll */.Z.MatchAll,
  triggers: [{
    // Trigger id for internally generated early pull warning.
    id: 'General Early Pull'
  }, {
    id: 'General Food Buff',
    type: 'LosesEffect',
    // Well Fed
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '48'
    }),
    condition: (_data, matches) => {
      // Prevent "Eos loses the effect of Well Fed from Critlo Mcgee"
      return matches.target === matches.source;
    },
    mistake: (data, matches) => {
      var _data$lostFood;

      (_data$lostFood = data.lostFood) !== null && _data$lostFood !== void 0 ? _data$lostFood : data.lostFood = {}; // Well Fed buff happens repeatedly when it falls off (WHY),
      // so suppress multiple occurrences.

      if (!data.inCombat || data.lostFood[matches.target]) return;
      data.lostFood[matches.target] = true;
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'lost food buff',
          de: 'Nahrungsbuff verloren',
          fr: 'Buff nourriture terminée',
          ja: '飯効果が失った',
          cn: '失去食物BUFF',
          ko: '음식 버프 해제'
        }
      };
    }
  }, {
    id: 'General Well Fed',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '48'
    }),
    run: (data, matches) => {
      if (!data.lostFood) return;
      delete data.lostFood[matches.target];
    }
  }, {
    id: 'General Rabbit Medium',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '8E0'
    }),
    condition: (data, matches) => data.IsPlayerId(matches.sourceId),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.source,
        reportId: matches.sourceId,
        text: {
          en: 'bunny',
          de: 'Hase',
          fr: 'lapin',
          ja: 'うさぎ',
          cn: '兔子',
          ko: '토끼'
        }
      };
    }
  }]
};
/* harmony default export */ const general = (triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/00-misc/test.ts


// Test mistake triggers.
const test_triggerSet = {
  zoneId: zone_id/* default.MiddleLaNoscea */.Z.MiddleLaNoscea,
  triggers: [{
    id: 'Test Bow',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You bow courteously to the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous vous inclinez devant le mannequin d\'entraînement.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人にお辞儀した.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*恭敬地对木人行礼.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형에게 공손하게 인사합니다.*?'
    }),
    mistake: data => {
      return {
        type: 'pull',
        blame: data.me,
        text: {
          en: 'Bow',
          de: 'Bogen',
          fr: 'Saluer',
          ja: 'お辞儀',
          cn: '鞠躬',
          ko: '인사'
        }
      };
    }
  }, {
    id: 'Test Wipe',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You bid farewell to the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous faites vos adieux au mannequin d\'entraînement.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人に別れの挨拶をした.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*向木人告别.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형에게 작별 인사를 합니다.*?'
    }),
    mistake: data => {
      return {
        type: 'wipe',
        blame: data.me,
        text: {
          en: 'Party Wipe',
          de: 'Gruppenwipe',
          fr: 'Party Wipe',
          ja: 'ワイプ',
          cn: '团灭',
          ko: '파티 전멸'
        }
      };
    }
  }, {
    id: 'Test Bootshine',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '35'
    }),
    condition: (data, matches) => {
      if (matches.source !== data.me) return false;
      const strikingDummyByLocale = {
        en: 'Striking Dummy',
        de: 'Trainingspuppe',
        fr: 'Mannequin d\'entraînement',
        ja: '木人',
        cn: '木人',
        ko: '나무인형'
      };
      const strikingDummyNames = Object.values(strikingDummyByLocale);
      return strikingDummyNames.includes(matches.target);
    },
    mistake: (data, matches) => {
      var _data$bootCount;

      (_data$bootCount = data.bootCount) !== null && _data$bootCount !== void 0 ? _data$bootCount : data.bootCount = 0;
      data.bootCount++;
      const text = `${matches.ability} (${data.bootCount}): ${data.DamageFromMatches(matches)}`;
      return {
        type: 'warn',
        blame: data.me,
        reportId: matches.sourceId,
        text: text
      };
    }
  }, {
    id: 'Test Leaden Fist',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '745'
    }),
    condition: (data, matches) => matches.source === data.me,
    mistake: (data, matches) => {
      return {
        type: 'good',
        blame: data.me,
        reportId: matches.sourceId,
        text: matches.effect
      };
    }
  }, {
    id: 'Test Oops',
    type: 'GameLog',
    netRegex: netregexes/* default.echo */.Z.echo({
      line: '.*oops.*'
    }),
    suppressSeconds: 10,
    mistake: (data, matches) => {
      return {
        type: 'fail',
        blame: data.me,
        text: matches.line
      };
    }
  }, {
    id: 'Test Poke Collect',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You poke the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous touchez légèrement le mannequin d\'entraînement du doigt.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人をつついた.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*用手指戳向木人.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형을 쿡쿡 찌릅니다.*?'
    }),
    run: data => {
      var _data$pokeCount;

      data.pokeCount = ((_data$pokeCount = data.pokeCount) !== null && _data$pokeCount !== void 0 ? _data$pokeCount : 0) + 1;
    }
  }, {
    id: 'Test Poke',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You poke the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous touchez légèrement le mannequin d\'entraînement du doigt.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人をつついた.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*用手指戳向木人.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형을 쿡쿡 찌릅니다.*?'
    }),
    delaySeconds: 5,
    mistake: data => {
      // 1 poke at a time is fine, but more than one in 5 seconds is (OBVIOUSLY) a mistake.
      if (!data.pokeCount || data.pokeCount <= 1) return;
      return {
        type: 'fail',
        blame: data.me,
        text: {
          en: `Too many pokes (${data.pokeCount})`,
          de: `Zu viele Piekser (${data.pokeCount})`,
          fr: `Trop de touches (${data.pokeCount})`,
          ja: `いっぱいつついた (${data.pokeCount})`,
          cn: `戳太多下啦 (${data.pokeCount})`,
          ko: `너무 많이 찌름 (${data.pokeCount}번)`
        }
      };
    },
    run: data => delete data.pokeCount
  }]
};
/* harmony default export */ const test = (test_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/ifrit-nm.ts

// Ifrit Story Mode
const ifrit_nm_triggerSet = {
  zoneId: zone_id/* default.TheBowlOfEmbers */.Z.TheBowlOfEmbers,
  damageWarn: {
    'IfritNm Radiant Plume': '2DE'
  },
  shareWarn: {
    'IfritNm Incinerate': '1C5',
    'IfritNm Eruption': '2DD'
  }
};
/* harmony default export */ const ifrit_nm = (ifrit_nm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/levi-ex.ts


// It's hard to capture the reflection abilities from Leviathan's Head and Tail if you use
// ranged physical attacks / magic attacks respectively, as the ability names are the
// ability you used and don't appear to show up in the log as normal "ability" lines.
// That said, dots still tick independently on both so it's likely that people will atack
// them anyway.
// TODO: Figure out why Dread Tide / Waterspout appear like shares (i.e. 0x16 id).
// Dread Tide = 823/824/825, Waterspout = 829
// Leviathan Extreme
const levi_ex_triggerSet = {
  zoneId: zone_id/* default.TheWhorleaterExtreme */.Z.TheWhorleaterExtreme,
  damageWarn: {
    'LeviEx Grand Fall': '82F',
    // very large circular aoe before spinny dives, applies heavy
    'LeviEx Hydro Shot': '748',
    // Wavespine Sahagin aoe that gives Dropsy effect
    'LeviEx Dreadstorm': '749' // Wavetooth Sahagin aoe that gives Hysteria effect

  },
  damageFail: {
    'LeviEx Body Slam': '82A',
    // levi slam that tilts the boat
    'LeviEx Spinning Dive 1': '88A',
    // levi dash across the boat with knockback
    'LeviEx Spinning Dive 2': '88B',
    // levi dash across the boat with knockback
    'LeviEx Spinning Dive 3': '82C' // levi dash across the boat with knockback

  },
  gainsEffectWarn: {
    'LeviEx Dropsy': '110' // standing in the hydro shot from the Wavespine Sahagin

  },
  gainsEffectFail: {
    'LeviEx Hysteria': '128' // standing in the dreadstorm from the Wavetooth Sahagin

  },
  triggers: [{
    id: 'LeviEx Body Slam Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '82A'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const levi_ex = (levi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/shiva-ex.ts


// Shiva Extreme
const shiva_ex_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreExtreme */.Z.TheAkhAfahAmphitheatreExtreme,
  damageWarn: {
    // Large white circles.
    'ShivaEx Icicle Impact': 'BEB',
    // "get in" aoe
    'ShivaEx Whiteout': 'BEC',
    // Avoidable tank stun.
    'ShivaEx Glacier Bash': 'BE9'
  },
  damageFail: {
    // 270 degree attack.
    'ShivaEx Glass Dance': 'BDF'
  },
  shareWarn: {
    // Hailstorm spread marker.
    'ShivaEx Hailstorm': 'BE2'
  },
  shareFail: {
    // Laser.  TODO: maybe blame the person it's on??
    'ShivaEx Avalanche': 'BE0'
  },
  soloWarn: {
    // Party shared tankbuster
    'ShivaEx Icebrand': 'BE1'
  },
  triggers: [{
    id: 'ShivaEx Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability C8A on you, but it has the untranslated name
    // 透明：シヴァ：凍結レクト：ノックバック用/ヒロイック. So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: (_data, matches) => {
      // The intermission also gets this effect, but for a shorter duration.
      return parseFloat(matches.duration) > 20;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_ex = (shiva_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/shiva-hm.ts


// Shiva Hard
const shiva_hm_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreHard */.Z.TheAkhAfahAmphitheatreHard,
  damageWarn: {
    // Large white circles.
    'ShivaHm Icicle Impact': '993',
    // Avoidable tank stun.
    'ShivaHm Glacier Bash': '9A1'
  },
  shareWarn: {
    // Knockback tank cleave.
    'ShivaHm Heavenly Strike': '9A0',
    // Hailstorm spread marker.
    'ShivaHm Hailstorm': '998'
  },
  shareFail: {
    // Tankbuster.  This is Shiva Hard mode, not Shiva Extreme.  Please!
    'ShivaHm Icebrand': '996'
  },
  triggers: [{
    id: 'ShivaHm Diamond Dust',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '98A'
    }),
    run: data => {
      data.seenDiamondDust = true;
    }
  }, {
    id: 'ShivaHm Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability 9A3 on you, but it has the untranslated name
    // 透明：シヴァ：凍結レクト：ノックバック用. So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: data => {
      // The intermission also gets this effect, so only a mistake after that.
      // Unlike extreme, this has the same 20 second duration as the intermission.
      return data.seenDiamondDust;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_hm = (shiva_hm_triggerSet);
// EXTERNAL MODULE: ./ui/oopsyraidsy/oopsy_common.ts
var oopsy_common = __webpack_require__(4416);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-ex.ts



// Titan Extreme
const titan_ex_triggerSet = {
  zoneId: zone_id/* default.TheNavelExtreme */.Z.TheNavelExtreme,
  damageWarn: {
    'TitanEx Weight Of The Land': '5BE',
    'TitanEx Burst': '5BF'
  },
  damageFail: {
    'TitanEx Landslide': '5BB',
    'TitanEx Gaoler Landslide': '5C3'
  },
  shareWarn: {
    'TitanEx Rock Buster': '5B7'
  },
  shareFail: {
    'TitanEx Mountain Buster': '5B8'
  },
  triggers: [{
    id: 'TitanEx Landslide',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5BB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const titan_ex = (titan_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-hm.ts

// Titan Hard
const titan_hm_triggerSet = {
  zoneId: zone_id/* default.TheNavelHard */.Z.TheNavelHard,
  damageWarn: {
    'TitanHm Weight Of The Land': '553',
    'TitanHm Burst': '41C'
  },
  damageFail: {
    'TitanHm Landslide': '554'
  },
  shareWarn: {
    'TitanHm Rock Buster': '550'
  },
  shareFail: {
    'TitanHm Mountain Buster': '283'
  }
};
/* harmony default export */ const titan_hm = (titan_hm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-nm.ts

// Titan Story Mode
const titan_nm_triggerSet = {
  zoneId: zone_id/* default.TheNavel */.Z.TheNavel,
  damageWarn: {
    'TitanNm Weight Of The Land': '3CD'
  },
  damageFail: {
    'TitanNm Landslide': '28A'
  },
  shareWarn: {
    'TitanNm Rock Buster': '281'
  }
};
/* harmony default export */ const titan_nm = (titan_nm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/alliance/weeping_city.ts


const weeping_city_triggerSet = {
  zoneId: zone_id/* default.TheWeepingCityOfMhach */.Z.TheWeepingCityOfMhach,
  damageWarn: {
    'Weeping Critical Bite': '1848',
    // Sarsuchus cone aoe
    'Weeping Realm Shaker': '183E',
    // First Daughter circle aoe
    'Weeping Silkscreen': '183C',
    // First Daughter line aoe
    'Weeping Silken Spray': '1824',
    // Arachne Eve rear conal aoe
    'Weeping Tremblor 1': '1837',
    // Arachne Eve disappear circle aoe 1
    'Weeping Tremblor 2': '1836',
    // Arachne Eve disappear circle aoe 2
    'Weeping Tremblor 3': '1835',
    // Arachne Eve disappear circle aoe 3
    'Weeping Spider Thread': '1839',
    // Arachne Eve spider line aoe
    'Weeping Fire II': '184E',
    // Black Mage Corpse circle aoe
    'Weeping Necropurge': '17D7',
    // Forgall Shriveled Talon line aoe
    'Weeping Rotten Breath': '17D0',
    // Forgall Dahak cone aoe
    'Weeping Mow': '17D2',
    // Forgall Haagenti unmarked cleave
    'Weeping Dark Eruption': '17C3',
    // Forgall puddle marker
    // 1806 is also Flare Star, but if you get by 1805 you also get hit by 1806?
    'Weeping Flare Star': '1805',
    // Ozma cube phase donut
    'Weeping Execration': '1829',
    // Ozma triangle laser
    'Weeping Haircut 1': '180B',
    // Calofisteri 180 cleave 1
    'Weeping Haircut 2': '180F',
    // Calofisteri 180 cleave 2
    'Weeping Entanglement': '181D',
    // Calofisteri landmine puddle proc
    'Weeping Evil Curl': '1816',
    // Calofisteri axe
    'Weeping Evil Tress': '1817',
    // Calofisteri bulb
    'Weeping Depth Charge': '1820',
    // Calofisteri charge to edge
    'Weeping Feint Particle Beam': '1928',
    // Calofisteri sky laser
    'Weeping Evil Switch': '1815' // Calofisteri lasers

  },
  gainsEffectWarn: {
    'Weeping Hysteria': '128',
    // Arachne Eve Frond Affeard
    'Weeping Zombification': '173',
    // Forgall too many zombie puddles
    'Weeping Toad': '1B7',
    // Forgall Brand of the Fallen failure
    'Weeping Doom': '38E',
    // Forgall Haagenti Mortal Ray
    'Weeping Assimilation': '42C',
    // Ozmashade Assimilation look-away
    'Weeping Stun': '95' // Calofisteri Penetration look-away

  },
  shareWarn: {
    'Weeping Arachne Web': '185E',
    // Arachne Eve headmarker web aoe
    'Weeping Earth Aether': '1841',
    // Arachne Eve orbs
    'Weeping Epigraph': '1852',
    // Headstone untelegraphed laser line tank attack
    // This is too noisy.  Better to pop the balloons than worry about friends.
    // 'Weeping Explosion': '1807', // Ozmasphere Cube orb explosion
    'Weeping Split End 1': '180C',
    // Calofisteri tank cleave 1
    'Weeping Split End 2': '1810',
    // Calofisteri tank cleave 2
    'Weeping Bloodied Nail': '181F' // Calofisteri axe/bulb appearing

  },
  triggers: [{
    id: 'Weeping Forgall Gradual Zombification Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '415'
    }),
    run: (data, matches) => {
      var _data$zombie;

      (_data$zombie = data.zombie) !== null && _data$zombie !== void 0 ? _data$zombie : data.zombie = {};
      data.zombie[matches.target] = true;
    }
  }, {
    id: 'Weeping Forgall Gradual Zombification Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '415'
    }),
    run: (data, matches) => {
      data.zombie = data.zombie || {};
      data.zombie[matches.target] = false;
    }
  }, {
    id: 'Weeping Forgall Mega Death',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '17CA'
    }),
    condition: (data, matches) => data.zombie && !data.zombie[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'Weeping Headstone Shield Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '15E'
    }),
    run: (data, matches) => {
      var _data$shield;

      (_data$shield = data.shield) !== null && _data$shield !== void 0 ? _data$shield : data.shield = {};
      data.shield[matches.target] = true;
    }
  }, {
    id: 'Weeping Headstone Shield Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '15E'
    }),
    run: (data, matches) => {
      data.shield = data.shield || {};
      data.shield[matches.target] = false;
    }
  }, {
    id: 'Weeping Flaring Epigraph',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '1856'
    }),
    condition: (data, matches) => data.shield && !data.shield[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // This ability name is helpfully called "Attack" so name it something else.
    id: 'Weeping Ozma Tank Laser',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      type: '22',
      id: '1831'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: {
          en: 'Tank Laser',
          de: 'Tank Laser',
          fr: 'Tank Laser',
          ja: 'タンクレザー',
          cn: '坦克激光',
          ko: '탱커 레이저'
        }
      };
    }
  }, {
    id: 'Weeping Ozma Holy',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '182E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'ist runtergerutscht!',
          fr: 'A glissé(e) !',
          ja: 'ノックバック',
          cn: '击退！',
          ko: '넉백됨!'
        }
      };
    }
  }]
};
/* harmony default export */ const weeping_city = (weeping_city_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/aetherochemical_research_facility.ts


// Aetherochemical Research Facility
const aetherochemical_research_facility_triggerSet = {
  zoneId: zone_id/* default.TheAetherochemicalResearchFacility */.Z.TheAetherochemicalResearchFacility,
  damageWarn: {
    'ARF Grand Sword': '216',
    // Conal AoE, Scrambled Iron Giant trash
    'ARF Cermet Drill': '20E',
    // Line AoE, 6th Legion Magitek Vanguard trash
    'ARF Magitek Slug': '10DB',
    // Line AoE, boss 1
    'ARF Aetherochemical Grenado': '10E2',
    // Large targeted circle AoE, Magitek Turret II, boss 1
    'ARF Magitek Spread': '10DC',
    // 270-degree roomwide AoE, boss 1
    'ARF Eerie Soundwave': '1170',
    // Targeted circle AoE, Cultured Empusa trash, before boss 2
    'ARF Tail Slap': '125F',
    // Conal AoE, Cultured Dancer trash, before boss 2
    'ARF Calcifying Mist': '123A',
    // Conal AoE, Cultured Naga trash, before boss 2
    'ARF Puncture': '1171',
    // Short line AoE, Cultured Empusa trash, before boss 2
    'ARF Sideswipe': '11A7',
    // Conal AoE, Cultured Reptoid trash, before boss 2
    'ARF Gust': '395',
    // Targeted small circle AoE, Cultured Mirrorknight trash, before boss 2
    'ARF Marrow Drain': 'D0E',
    // Conal AoE, Cultured Chimera trash, before boss 2
    'ARF Riddle Of The Sphinx': '10E4',
    // Targeted circle AoE, boss 2
    'ARF Ka': '106E',
    // Conal AoE, boss 2
    'ARF Rotoswipe': '11CC',
    // Conal AoE, Facility Dreadnought trash, before boss 3
    'ARF Auto-cannons': '12D9',
    // Line AoE, Monitoring Drone trash, before boss 3
    'ARF Death\'s Door': '4EC',
    // Line AoE, Cultured Shabti trash, before boss 3
    'ARF Spellsword': '4EB',
    // Conal AoE, Cultured Shabti trash, before boss 3
    'ARF End Of Days': '10FD',
    // Line AoE, boss 3
    'ARF Blizzard Burst': '10FE',
    // Fixed circle AoEs, Igeyorhm, boss 3
    'ARF Fire Burst': '10FF',
    // Fixed circle AoEs, Lahabrea, boss 3
    'ARF Sea Of Pitch': '12DE',
    // Targeted persistent circle AoEs, boss 3
    'ARF Dark Blizzard II': '10F3',
    // Random circle AoEs, Igeyorhm, boss 3
    'ARF Dark Fire II': '10F8',
    // Random circle AoEs, Lahabrea, boss 3
    'ARF Ancient Eruption': '1104',
    // Self-targeted circle AoE, boss 4
    'ARF Entropic Flame': '1108' // Line AoEs,  boss 4

  },
  shareWarn: {
    'ARF Chthonic Hush': '10E7',
    // Instant tank cleave, boss 2
    'ARF Height Of Chaos': '1101',
    // Tank cleave, boss 4
    'ARF Ancient Circle': '1102' // Targeted donut AoEs, boss 4

  },
  triggers: [{
    id: 'ARF Petrifaction',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '01'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const aetherochemical_research_facility = (aetherochemical_research_facility_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/baelsars_wall.ts

// Baelsar's Wall
const baelsars_wall_triggerSet = {
  zoneId: zone_id/* default.BaelsarsWall */.Z.BaelsarsWall,
  damageWarn: {
    'Baelsar 3rd Cohort Laquerius Overpower': '2D0',
    // Conal AoE, before boss 1
    'Baelsar 3rd Cohort Canis Pugnax Bellowing Grunt': '150',
    // Targeted circle AoE, before boss 1
    'Baelsar 3rd Cohort Signifier Dark Fire III': '519',
    // Targeted circle AoE, before boss 1
    'Baelsar Magitek Predator Magitek Ray': '1CB3',
    // Line AoE, boss 1
    'Baelsar Adamantite Claw Shred': '1257',
    // Rectangle AoE, before boss 2
    'Baelsar Magitek Colossus Exhaust': '593',
    // Line AoE, before boss 2
    'Baelsar Magitek Colossus Grand Sword': '126A',
    // Conal AoE, before boss 2
    'Baelsar Armored Weapon Dynamic Sensory Jammer': '1CBA',
    // Extreme Caution failure, boss 2
    'Baelsar Armored Weapon Diffractive Laser': '1CBB',
    // Targeted circle AoE, boss 2
    'Baelsar Magitek Bit Assault Cannon': '1CC0',
    // Checkerboard line AoEs, boss 2
    'Baelsar Magitek Gunship Carpet Bomb': '1CCF',
    // Targeted circle AoE, after boss 2
    'Baelsar Lance-Wielding Loyalist Heartstopper': '362',
    // Rectangle AoE, after boss 2
    'Baelsar The Griffin Sanguine Blade': '1CC5',
    // Arena cleave, boss 3
    'Baelsar Blade Of The Griffin Corrosion': '1CCC' // Circle AoE, boss 3

  },
  gainsEffectWarn: {
    'Baelsar The Griffin Accuracy Down': '1C' // Flash Powder failure, boss 3

  }
};
/* harmony default export */ const baelsars_wall = (baelsars_wall_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/fractal_continuum.ts

// Fractal Continuum
const fractal_continuum_triggerSet = {
  zoneId: zone_id/* default.TheFractalContinuum */.Z.TheFractalContinuum,
  damageWarn: {
    'Fractal Double Sever': 'F7D',
    // Conals, boss 1
    'Fractal Aetheric Compression': 'F80',
    // Ground AoE circles, boss 1
    'Fractal 11-Tonze Swipe': 'F81',
    // Frontal cone, boss 2
    'Fractal 10-Tonze Slash': 'F83',
    // Frontal line, boss 2
    'Fractal 111-Tonze Swing': 'F87',
    // Get-out AoE, boss 2
    'Fractal Broken Glass': 'F8E',
    // Glowing panels, boss 3
    'Fractal Mines': 'F90',
    'Fractal Seed of the Rivers': 'F91' // Ground AoE circles, boss 3

  },
  shareWarn: {
    'Fractal Sanctification': 'F89' // Instant conal buster, boss 3

  }
};
/* harmony default export */ const fractal_continuum = (fractal_continuum_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/gubal_library_hard.ts



const gubal_library_hard_triggerSet = {
  zoneId: zone_id/* default.TheGreatGubalLibraryHard */.Z.TheGreatGubalLibraryHard,
  damageWarn: {
    'GubalHm Terror Eye': '930',
    // Circle AoE, Spine Breaker trash
    'GubalHm Batter': '198A',
    // Circle AoE, trash before boss 1
    'GubalHm Condemnation': '390',
    // Conal AoE, Bibliovore trash
    'GubalHm Discontinue 1': '1943',
    // Falling book shadow, boss 1
    'GubalHm Discontinue 2': '1940',
    // Rush AoE from ends, boss 1
    'GubalHm Discontinue 3': '1942',
    // Rush AoE across, boss 1
    'GubalHm Frightful Roar': '193B',
    // Get-Out AoE, boss 1
    'GubalHm Issue 1': '193D',
    // Initial end book warning AoE, boss 1
    'GubalHm Issue 2': '193F',
    // Initial end book warning AoE, boss 1
    'GubalHm Issue 3': '1941',
    // Initial side book warning AoE, boss 1
    'GubalHm Desolation': '198C',
    // Line AoE, Biblioclast trash
    'GubalHm Double Smash': '26A',
    // Conal AoE, Biblioclast trash
    'GubalHm Darkness': '3A0',
    // Conal AoE, Inkstain trash
    'GubalHm Firewater': '3BA',
    // Circle AoE, Biblioclast trash
    'GubalHm Elbow Drop': 'CBA',
    // Conal AoE, Biblioclast trash
    'GubalHm Dark': '19DF',
    // Large circle AoE, Inkstain trash
    'GubalHm Seals': '194A',
    // Sun/Moonseal failure, boss 2
    'GubalHm Water III': '1C67',
    // Large circle AoE, Porogo Pegist trash
    'GubalHm Raging Axe': '1703',
    // Small conal AoE, Mechanoservitor trash
    'GubalHm Magic Hammer': '1990',
    // Large circle AoE, Apanda mini-boss
    'GubalHm Properties Of Gravity': '1950',
    // Circle AoE from gravity puddles, boss 3
    'GubalHm Properties Of Levitation': '194F',
    // Circle AoE from levitation puddles, boss 3
    'GubalHm Comet': '1969' // Small circle AoE, intermission, boss 3

  },
  damageFail: {
    'GubalHm Ecliptic Meteor': '195C' // LoS mechanic, boss 3

  },
  shareWarn: {
    'GubalHm Searing Wind': '1944',
    // Tank cleave, boss 2
    'GubalHm Thunder': '19[AB]' // Spread marker, boss 3

  },
  triggers: [{
    // Fire gate in hallway to boss 2, magnet failure on boss 2
    id: 'GubalHm Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '10B'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Helper for Thunder 3 failures
    id: 'GubalHm Imp Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '46E'
    }),
    run: (data, matches) => {
      var _data$hasImp;

      (_data$hasImp = data.hasImp) !== null && _data$hasImp !== void 0 ? _data$hasImp : data.hasImp = {};
      data.hasImp[matches.target] = true;
    }
  }, {
    id: 'GubalHm Imp Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '46E'
    }),
    run: (data, matches) => {
      data.hasImp = data.hasImp || {};
      data.hasImp[matches.target] = false;
    }
  }, {
    // Targets with Imp when Thunder III resolves receive a vulnerability stack and brief stun
    id: 'GubalHm Imp Thunder',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '195[AB]',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasImp2;

      return (_data$hasImp2 = data.hasImp) === null || _data$hasImp2 === void 0 ? void 0 : _data$hasImp2[matches.target];
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Shocked Imp',
          de: 'Schockierter Imp',
          ja: 'カッパを解除しなかった',
          cn: '河童状态吃了暴雷',
          ko: '물요정 상태 해제하지 않음'
        }
      };
    }
  }, {
    id: 'GubalHm Quake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1956',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Always hits target, but if correctly resolved will deal 0 damage
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'GubalHm Tornado',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '195[78]',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Always hits target, but if correctly resolved will deal 0 damage
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const gubal_library_hard = (gubal_library_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/sohm_al_hard.ts


const sohm_al_hard_triggerSet = {
  zoneId: zone_id/* default.SohmAlHard */.Z.SohmAlHard,
  damageWarn: {
    'SohmAlHm Deadly Vapor': '1DC9',
    // Environmental circle AoEs
    'SohmAlHm Deeproot': '1CDA',
    // Targeted circle AoE, Blooming Chichu trash
    'SohmAlHm Odious Air': '1CDB',
    // Conal AoE, Blooming Chichu trash
    'SohmAlHm Glorious Blaze': '1C33',
    // Circle AoE, Small Spore Sac, boss 1
    'SohmAlHm Foul Waters': '118A',
    // Conal AoE, Mountaintop Opken trash
    'SohmAlHm Plain Pound': '1187',
    // Targeted circle AoE, Mountaintop Hropken trash
    'SohmAlHm Palsynyxis': '1161',
    // Conal AoE, Overgrown Difflugia trash
    'SohmAlHm Surface Breach': '1E80',
    // Circle AoE, Giant Netherworm trash
    'SohmAlHm Freshwater Cannon': '119F',
    // Line AoE, Giant Netherworm trash
    'SohmAlHm Tail Smash': '1C35',
    // Untelegraphed rear conal AoE, Gowrow, boss 2
    'SohmAlHm Tail Swing': '1C36',
    // Untelegraphed circle AoE, Gowrow, boss 2
    'SohmAlHm Ripper Claw': '1C37',
    // Untelegraphed frontal AoE, Gowrow, boss 2
    'SohmAlHm Wind Slash': '1C38',
    // Circle AoE, Gowrow, boss 2
    'SohmAlHm Wild Charge': '1C39',
    // Dash attack, Gowrow, boss 2
    'SohmAlHm Hot Charge': '1C3A',
    // Dash attack, Gowrow, boss 2
    'SohmAlHm Fireball': '1C3B',
    // Untelegraphed targeted circle AoE, Gowrow, boss 2
    'SohmAlHm Lava Flow': '1C3C',
    // Untelegraphed conal AoE, Gowrow, boss 2
    'SohmAlHm Wild Horn': '1507',
    // Conal AoE, Abalathian Clay Golem trash
    'SohmAlHm Lava Breath': '1C4D',
    // Conal AoE, Lava Crab trash
    'SohmAlHm Ring of Fire': '1C4C',
    // Targeted circle AoE, Volcano Anala trash
    'SohmAlHm Molten Silk 1': '1C43',
    // 270-degree frontal AoE, Lava Scorpion, boss 3
    'SohmAlHm Molten Silk 2': '1C44',
    // 270-degree rear AoE, Lava Scorpion, boss 3
    'SohmAlHm Molten Silk 3': '1C42',
    // Ring AoE, Lava Scorpion, boss 3
    'SohmAlHm Realm Shaker': '1C41' // Circle AoE, Lava Scorpion, boss 3

  },
  triggers: [{
    // Warns if players step into the lava puddles. There is unfortunately no direct damage event.
    id: 'SohmAlHm Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '11C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const sohm_al_hard = (sohm_al_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a12n.ts



const a12n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheSoulOfTheCreator */.Z.AlexanderTheSoulOfTheCreator,
  damageWarn: {
    'A12N Sacrament': '1AE6',
    // Cross Lasers
    'A12N Gravitational Anomaly': '1AEB' // Gravity Puddles

  },
  shareWarn: {
    'A12N Divine Spear': '1AE3',
    // Instant conal tank cleave
    'A12N Blazing Scourge': '1AE9',
    // Orange head marker splash damage
    'A12N Plaint Of Severity': '1AF1',
    // Aggravated Assault splash damage
    'A12N Communion': '1AFC' // Tether Puddles

  },
  triggers: [{
    id: 'A12N Assault Collect',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '461'
    }),
    run: (data, matches) => {
      var _data$assault;

      (_data$assault = data.assault) !== null && _data$assault !== void 0 ? _data$assault : data.assault = [];
      data.assault.push(matches.target);
    }
  }, {
    // It is a failure for a Severity marker to stack with the Solidarity group.
    id: 'A12N Assault Failure',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1AF2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$assault2;

      return (_data$assault2 = data.assault) === null || _data$assault2 === void 0 ? void 0 : _data$assault2.includes(matches.target);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Didn\'t Spread!',
          de: 'Nicht verteilt!',
          fr: 'Ne s\'est pas dispersé(e) !',
          ja: '散開しなかった!',
          cn: '没有散开!',
          ko: '산개하지 않았음!'
        }
      };
    }
  }, {
    id: 'A12N Assault Cleanup',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '461'
    }),
    delaySeconds: 20,
    suppressSeconds: 5,
    run: data => {
      delete data.assault;
    }
  }]
};
/* harmony default export */ const a12n = (a12n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a6n.ts

const a6n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheCuffOfTheSon */.Z.AlexanderTheCuffOfTheSon,
  damageWarn: {
    'Minefield': '170D',
    // Circle AoE, mines.
    'Mine': '170E',
    // Mine explosion.
    'Supercharge': '1713',
    // Mirage charge.
    'Height Error': '171D',
    // Incorrect panel for Height.
    'Earth Missile': '1726' // Circle AoE, fire puddles.

  },
  damageFail: {
    'Ultra Flash': '1722' // Room-wide death AoE, if not LoS'd.

  },
  shareWarn: {
    'Ice Missile': '1727' // Ice headmarker AoE circles.

  },
  shareFail: {
    'Single Buster': '1717' // Single laser Attachment. Non-tanks are *probably* dead.

  },
  soloWarn: {
    'Double Buster': '1718',
    // Twin laser Attachment.
    'Enumeration': '171E' // Enumeration circle.

  }
};
/* harmony default export */ const a6n = (a6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/orbonne_monastery.ts


 // Note: Mustadio Last Testament (3737) does damage whether you succeed or fail,
// but is lethal if you fail, so it should be obvious when failed.
// Note: Similarly skipping Agrias Duskblade (3761), which also ~wipes when towers are missed.
// Note: skipping Agrias Frostbite (11D), which many people get a tick of when add is nearly dead.
// Note: Ultima's Aspersory Pervailing Current (38CC) hits a lot for low damage, so skipping.
// TODO: Dark Crusader Dark Rite (377F) going off if towers aren't stepped in.
// TODO: Bleeding from Agrias Shadowblade orbs merging and exploding?
// TODO: Ultima Dark Cannonade dorito stack does damage on success and failure.

const orbonne_monastery_triggerSet = {
  zoneId: zone_id/* default.TheOrbonneMonastery */.Z.TheOrbonneMonastery,
  damageWarn: {
    'Orbonne Harpy Blasphemous Howl': '3779',
    // large targeted circle
    'Orbonne Monastic Ghost Dark Eruption': '3A15',
    // targeted circle
    'Orbonne Monastic Ghost Lingering Resenentment': '377C',
    // large targeted circle
    'Orbonne Mustadio Right Handgonne': '373E',
    // left/right haircut
    'Orbonne Mustadio Left Handgonne': '373F',
    // left/right haircut
    'Orbonne Mustadio Iron Giant Compress': '3740',
    // line aoe from tethered Iron Giant on outside
    'Orbonne Mustadio Ballistic Impact': '3743',
    // spread marker
    'Orbonne Mustadio Searchlight': '3744',
    // chasing red circle that locks in
    'Orbonne Mustadio Leg Shot': '3742',
    // mines
    'Orbonne Mustadio Early Turret Satellite Beam': '3741',
    // quadrant explosion from tethered Early Turret
    'Orbonne Agrias Northswain\'s Strike': '3853',
    // line aoes from outside adds during sword+crystals phase
    'Orbonne Agrias Hallowed Bolt Circle': '385B',
    // very large circle
    'Orbonne Agrias Hallowed Bolt Donut': '385C',
    // very large donut
    'Orbonne Dark Crusader Infernal Wave': '3781',
    // line aoe
    'Orbonne Cid Hallowed Bolt': '374B',
    // lightning platform hit from sword after T.G. Holy Sword (3749)
    'Orbonne Cid Northswain\'s Strike': '3AD3',
    // "get out" after T.G. Holy Sword (374F)
    'Orbonne Cid Judgment Blade': '3AD4',
    // "get in" after T.G. Holy Sword (374A)
    'Orbonne Cid Agrias Shadowblade Orbs': '375F',
    // followup hits from growing red/black orbs
    'Orbonne Cid Crush Weapon 1': '4756',
    // chasing circle initial hit
    'Orbonne Cid Crush Weapon 2': '4757',
    // chasing circle
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Donut': '3767',
    // initial donut from Ephemeral Knight headmarker
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Circle': '3766',
    // followup circle from Ephemeral Knight
    'Orbonne Cid Crush Accessory': '375B',
    // platform aoe with safe spot on Icewolf add
    'Orbonne Ultima Holy IV': '389A',
    // targeted circle
    'Orbonne Ultima Auralight Line': '3897',
    // 3x lines during Auralight (38EA) cast that turn into ice
    'Orbonne Ultima Auralight Circle': '3898',
    // centered circle during Auralight (38EA) cast
    'Orbonne Ultima Auracite Shard Plummet': '38AD',
    // 3x shards falling before Grand Cross (38AC)
    'Orbonne Ultima Auracite Shard Grand Cross': '38AE',
    // cross explosion from Auracite Shards
    'Orbonne Ultima Demi-Belias Time Eruption 1': '38D0',
    // fast/slow clocks
    'Orbonne Ultima Demi-Belias Time Eruption 2': '38D1',
    // fast/slow clocks
    'Orbonne Ultima Demi-Hashmal Towerfall': '38D7',
    // control tower falling over
    'Orbonna Ultima Demi-Hashmal Extreme Edge 1': '38DA',
    // left/right cleave dash
    'Orbonna Ultima Demi-Hashmal Extreme Edge 2': '38DB',
    // left/right cleave dash
    'Orbonne Ultima Demi-Belias Eruption': '37C8',
    // headmarker with chasing telegraphed circle aoes
    'Orbonne Ultima Dominion Ray Of Light': '38B7',
    // lingering line aoe with Eastward/Westward March
    'Orbonne Ultima Embrace Initial': '38B9',
    // hidden blue traps being placed
    'Orbonne Ultima Embrace Triggered': '38BA',
    // hidden blue traps being triggered
    'Orbonne Ultima Explosion': '38E9',
    // failing to stop for Acceleration Bomb
    'Orbonne Ultima Dominion Bombardment': '38BE',
    // circle during midphase ice maze
    'Orbonne Ultima Holy': '38AB' // circle during midphase ice maze

  },
  damageFail: {
    'Orbonne Cid Icewolf Burst': '375C' // not killing Icewolf add in time

  },
  gainsEffectFail: {
    'Orbonne Harpy Devitalize Doom': '38E' // Harpy lookaway mechanic

  },
  shareWarn: {
    'Orbonne Agrias Cleansing Flame': '3865',
    // spread marker
    'Orbonne Agrias Shadowblade Initial': '375E' // initial hit from giant red/black circle headmarker

  },
  shareFail: {
    'Orbonne Agrias Thunder Slash': '3866' // conal tank cleave with marker

  },
  soloFail: {
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Stack': '3768' // stack marker from Ephemeral Knight

  },
  triggers: [{
    // castbar that you need to have Heavenly Shield up for, or you get a vuln and knockback.
    id: 'Orbonne Agrias Judgment Blade',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3857',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // same as Judgment Blade, but from Sword Knight
    id: 'Orbonne Agrias Mortal Blow',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '385E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const orbonne_monastery = (orbonne_monastery_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/ridorana_lighthouse.ts


const ridorana_lighthouse_triggerSet = {
  zoneId: zone_id/* default.TheRidoranaLighthouse */.Z.TheRidoranaLighthouse,
  damageWarn: {
    'Ridorana Famfrit Tsunami 1': '2C51',
    // untelegraphed 90 degree conal from jug
    'Ridorana Famfrit Tsunami 2': '2C52',
    // untelegraphed 90 degree conal from jug
    'Ridorana Famfrit Dark Rain': '2C46',
    // targeted medium size circles
    'Ridorana Famfrit Darkening Deluge': '2C54',
    // rain puddles after Darkening Rainfull
    'Ridorana Bune Tri-Attack': '2CED',
    // conal
    'Ridorana Bune Pulsar Wave': '2CEE',
    // targeted circle
    'Ridorana Belias Time Eruption': '2CDF',
    // exploding clock
    'Ridorana Belias Crimson Cyclone 1': '2CE2',
    // clone dash
    'Ridorana Belias Crimson Cyclone 2': '2CE3',
    // clone dash
    'Ridorana Belias Crimson Cyclone 3': '2CE4',
    // clone dash
    'Ridorana Belias Crimson Cyclone 4': '2D5F',
    // clone dash
    'Ridorana Belias Eruption': '2CDD',
    // series of targeted circles
    'Ridorana Belias Time Bomb': '2CE7',
    // stoppable clock with time conal attack
    'Ridorana Construct Pulverize Close': '2C61',
    // untelegraphed centered circle close
    'Ridorana Construct Pulverize Far': '2C62',
    // targeted telegraphed circles far away
    'Ridorana Construct Compress': '2C5C',
    // long skinny line
    'Ridorana Construct Loose Cog Triboelectricity': '2C6D',
    // blue circle from cogs in air
    'Ridorana Construct Dispose': '2C60',
    // rotating fire conal
    'Ridorana Construct Dispose Annihilation': '2CEA',
    // rotating fire conal, Annihilation Mode
    'Ridorana Construct Acceleration Bomb': '2D27',
    // failing acceleration bomb in midphase
    'Ridorana Construct Ultramagnetism': '2CD6',
    // failing magnetic tethers in midphase
    'Ridorana Construct Missile Explosion': '2C6F',
    // running into a missile in midphase
    'Ridorana Yiazmat Gust Front': '2C24',
    // targeted black/yellow circles
    'Ridorana Yiazmat White Breath': '2C31',
    // get under donut
    'Ridorana Yiazmat Rake Charge 1': '2C3C',
    // like a knife through butter
    'Ridorana Yiazmat Rake Charge 2': '2E32',
    'Ridorana Yiazmat Rake Charge 3': '2C28',
    'Ridorana Yiazmat Rake Charge 4': '2D4F',
    'Ridorana Yiazmat Rake Charge 5': '2C27',
    'Ridorana Yiazmat Archaeodemon Unholy Darkness': '2673',
    // targeted circle
    'Ridorana Yiazmat Archaeodemon Karma': '2672' // conal

  },
  damageFail: {
    'Ridorana Yiazmat Stone Breath': '2C29' // petrifying conal breath

  },
  shareWarn: {
    'Ridorana Famfrit Briny Cannonade': '2C45',
    // spread marker
    'Ridorana Construct Ignite': '2C67',
    // spread marker
    'Ridorana Iron Golem Ovation': '2CF3',
    // untelegraphed instant line attack (for tank, ideally)
    'Ridorana Yiazmat Wind Azer Ancient Aero': '2C38' // targeted tether line aoe from Azer adds

  },
  shareFail: {
    'Ridorana Yiazmat Rake Buster 1': '2C26',
    // untelegraphed tankbuster cleave
    'Ridorana Yiazmat Rake Buster 2': '2DE4' // untelegraphed tankbuster cleave

  },
  soloFail: {
    'Ridorana Construct Accelerate': '2C65',
    // stack marker
    'Ridorana Yiazmat Death Strike': '2C33' // stack marker

  },
  triggers: [{
    // Computation Mode errors.
    id: 'Ridorana Construct Maths',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '0089'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `Maths`,
          de: `Mathe`,
          fr: `Maths`,
          ja: `算術`,
          cn: `算数`,
          ko: '산수오답'
        }
      };
    }
  }]
};
/* harmony default export */ const ridorana_lighthouse = (ridorana_lighthouse_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/royal_city_of_rabanastre.ts


 // TODO: is Mateus's Azure Guard Fin Rays (2642) a tankbuster without a castbar? a cleave?

const royal_city_of_rabanastre_triggerSet = {
  zoneId: zone_id/* default.TheRoyalCityOfRabanastre */.Z.TheRoyalCityOfRabanastre,
  damageWarn: {
    'Rabanastre Mateus Ice Azer Hypothermal Combustion': '2639',
    // large centered circle when Ice Azer dies
    'Rabanastre Mateus Blizzard Sphere Chill': '2646',
    // baited long skinny conal from tethered Blizzard Spheres
    'Rabanastre Sniffing Seeq Bandit Lunge': '2670',
    // line aoe
    'Rabanastre Rabanastran Mimic Deathtrap': '75E',
    // centered circle
    'Rabanastre Hashmal Jagged Edge': '25CD',
    // red purple ground circles
    'Rabanastre Hashmal Towerfall': '25CA',
    // control towers falling over
    'Rabanastre Hashmal Extreme Edge 1': '25D0',
    // left/right cleave
    'Rabanastre Hashmal Extreme Edge 2': '25CE',
    // left/right cleave
    'Rabanastre Hashmal Earth Shaker': '25C8',
    // 3x 1/6 pie slices that usually happen twice in a row
    'Rabanastre Archaedemon Unholy Darkness': '2673',
    // very large conal (also during Rofocale)
    'Rabanastre Archaedemon Karma': '2672',
    // targeted circle (also during Rofocale)
    'Rabanastre Archaeolion The Dragon\'s Breath': '273C',
    // conal
    'Rabanastre Archaeolion The Ram\'s Breath': '273B',
    // conal
    'Rabanastre Archaeolion The Dragon\'s Voice': 'D10',
    // interruptable centered circle
    'Rabanastre Archaeolion The Ram\'s Voice': 'D0F',
    // interruptable centered circle
    'Rabanastre Rofocale Crush Weapon': '2684',
    // targeted circles
    'Rabanastre Rofocale Maverick': '2689',
    // multiple telegraphed line charges when untargetable, and later targetable
    'Rabanastre Rofocale Trample 1': '2677',
    'Rabanastre Rofocale Trample 2': '2678',
    'Rabanastre Rofocale Trample 3': '2679',
    'Rabanastre Rofocale Trample 4': '267A',
    'Rabanastre Rofocale Trample 5': '267B',
    'Rabanastre Rofocale Trample 6': '267C',
    'Rabanastre Rofocale Trample 7': '267D',
    'Rabanastre Rofocale Trample 8': '267E',
    'Rabanastre Rofocale Trample 9': '267F',
    'Rabanastre Rofocale Cry of Victory': '2675',
    // 180 cleave
    'Rabanastre Rofocale Embrace Initial': '2686',
    // Embrace initial circles
    'Rabanastre Rofocale Embrace Triggered': '2687',
    // running into Embrace hidden traps
    'Rabanastre Argath Crush Weapon': '2713',
    // same as Rofocale Crush Weapon
    'Rabanastre Argath Unrelenting': '262C',
    // five fan aoes in a cone
    'Rabanastre Argath Heartless Heartless': '2632',
    // cross aoe from judgment blade markers
    'Rabanastre Argath Soulfix': '262A',
    // centered circle, often paired with misdirect
    'Rabanastre Argath Coldblood Putt Putt': '2626',
    // hole in one misdirect donut
    'Rabanastre Argath Rail Of The Rooster': '2623',
    // unnerved stack from messing up Rail Of The Rat towers
    'Rabanastre Argath Self-Destruct': '262F',
    // explosion from somebody who has hit the wall and turned into a zombie
    'Rabanastre Argath The Word': '24A0' // Failing Mask Of Truth / Mask Of Lies

  },
  damageFail: {
    'Rabanastre Hashmal To Dust': '25C9' // Failing to kill Sand Sphere adds

  },
  gainsEffectWarn: {
    'Rabanastre Argath Bleeding': '282' // standing in Judgement Blade squares (140 is infinite effect when in, 282 when out)

  },
  gainsEffectFail: {
    'Rabanastre Mateus Deep Freeze': '4E6',
    // Frozen by ice skating adds
    'Rabanastre Transfiguration': '5B3',
    // Mateus Blizzard III The White Whisper (272E) / Argath running into the wall and turning into a zombie
    'Rabanastre Argath Craven': '58D' // turning into a chicken from 3 Unnerved stacks

  },
  shareWarn: {
    'Rabanastre Mateus Flash Freeze': '2647',
    // untelegraphed tank conal cleave
    'Rabanastre Mateus Icicle Snowpierce': '2640',
    // targeted telegraphed skinny line aoe
    'Rabanastre Hashmal Rock Cutter': '25D7',
    // untelegraphed tank cleave
    'Rabanastre Hashmal Falling Rock': '25D3',
    // Sand Sphere spread
    'Rabanastre Rofocale Chariot': '2674' // targeted line aoe with marker before Cry of Victory

  },
  soloFail: {
    'Rabanastre Hashmal Falling Boulder': '25D2' // Sand Sphere stack

  },
  triggers: [{
    id: 'Rabanastre Mateus Breathless',
    type: 'GainsEffect',
    // Ten stacks of Breathless is death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '595',
      count: '10'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // unnamed damage from being hit by Rofocale driving in circles during add phase
    id: 'Rabanastre Rofocale Chariot Ring',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '268C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Chariot',
          de: 'Streitwagen',
          fr: 'Chariot',
          ja: '戦車',
          cn: `战车`,
          ko: '근접광역기'
        }
      };
    }
  }]
};
/* harmony default export */ const royal_city_of_rabanastre = (royal_city_of_rabanastre_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/ala_mhigo.ts


const ala_mhigo_triggerSet = {
  zoneId: zone_id/* default.AlaMhigo */.Z.AlaMhigo,
  damageWarn: {
    'Ala Mhigo Magitek Ray': '24CE',
    // Line AoE, Legion Predator trash, before boss 1
    'Ala Mhigo Lock On': '2047',
    // Homing circles, boss 1
    'Ala Mhigo Tail Laser 1': '2049',
    // Frontal line AoE, boss 1
    'Ala Mhigo Tail Laser 2': '204B',
    // Rear line AoE, boss 1
    'Ala Mhigo Tail Laser 3': '204C',
    // Rear line AoE, boss 1
    'Ala Mhigo Shoulder Cannon': '24D0',
    // Circle AoE, Legion Avenger trash, before boss 2
    'Ala Mhigo Cannonfire': '23ED',
    // Environmental circle AoE, path to boss 2
    'Ala Mhigo Aetherochemical Grenado': '205A',
    // Circle AoE, boss 2
    'Ala Mhigo Integrated Aetheromodulator': '205B',
    // Ring AoE, boss 2
    'Ala Mhigo Circle Of Death': '24D4',
    // Proximity circle AoE, Hexadrone trash, before boss 3
    'Ala Mhigo Exhaust': '24D3',
    // Line AoE, Legion Colossus trash, before boss 3
    'Ala Mhigo Grand Sword': '24D2',
    // Conal AoE, Legion Colossus trash, before boss 3
    'Ala Mhigo Art Of The Storm 1': '2066',
    // Proximity circle AoE, pre-intermission, boss 3
    'Ala Mhigo Art Of The Storm 2': '2587',
    // Proximity circle AoE, intermission, boss 3
    'Ala Mhigo Vein Splitter 1': '24B6',
    // Proximity circle AoE, primary entity, boss 3
    'Ala Mhigo Vein Splitter 2': '206C',
    // Proximity circle AoE, helper entity, boss 3
    'Ala Mhigo Lightless Spark': '206B' // Conal AoE, boss 3

  },
  shareWarn: {
    'Ala Mhigo Demimagicks': '205E',
    'Ala Mhigo Unmoving Troika': '2060',
    'Ala Mhigo Art Of The Sword 1': '2069',
    'Ala Mhigo Art Of The Sword 2': '2589'
  },
  triggers: [{
    // It's possible players might just wander into the bad on the outside,
    // but normally people get pushed into it.
    id: 'Ala Mhigo Art Of The Swell',
    type: 'GainsEffect',
    // Damage Down
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2B8'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const ala_mhigo = (ala_mhigo_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/bardams_mettle.ts



// For reasons not completely understood at the time this was merged,
// but likely related to the fact that no nameplates are visible during the encounter,
// and that nothing in the encounter actually does damage,
// we can't use damageWarn or gainsEffect helpers on the Bardam fight.
// Instead, we use this helper function to look for failure flags.
// If the flag is present,a full trigger object is returned that drops in seamlessly.
const abilityWarn = args => {
  if (!args.abilityId) console.error('Missing ability ' + JSON.stringify(args));
  const trigger = {
    id: args.id,
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: args.abilityId
    }),
    condition: (_data, matches) => matches.flags.substr(-2) === '0E',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  };
  return trigger;
};

const bardams_mettle_triggerSet = {
  zoneId: zone_id/* default.BardamsMettle */.Z.BardamsMettle,
  damageWarn: {
    'Bardam Dirty Claw': '21A8',
    // Frontal cleave, Gulo Gulo trash
    'Bardam Epigraph': '23AF',
    // Line AoE, Wall of Bardam trash
    'Bardam The Dusk Star': '2187',
    // Circle AoE, environment before first boss
    'Bardam The Dawn Star': '2186',
    // Circle AoE, environment before first boss
    'Bardam Crumbling Crust': '1F13',
    // Circle AoEs, Garula, first boss
    'Bardam Ram Rush': '1EFC',
    // Line AoEs, Steppe Yamaa, first boss.
    'Bardam Lullaby': '24B2',
    // Circle AoEs, Steppe Sheep, first boss.
    'Bardam Heave': '1EF7',
    // Frontal cleave, Garula, first boss
    'Bardam Wide Blaster': '24B3',
    // Enormous frontal cleave, Steppe Coeurl, first boss
    'Bardam Double Smash': '26A',
    // Circle AoE, Mettling Dhara trash
    'Bardam Transonic Blast': '1262',
    // Circle AoE, Steppe Eagle trash
    'Bardam Wild Horn': '2208',
    // Frontal cleave, Khun Gurvel trash
    'Bardam Heavy Strike 1': '2578',
    // 1 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Heavy Strike 2': '2579',
    // 2 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Heavy Strike 3': '257A',
    // 3 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Tremblor 1': '257B',
    // 1 of 2 concentric ring AoEs, Bardam, second boss
    'Bardam Tremblor 2': '257C',
    // 2 of 2 concentric ring AoEs, Bardam, second boss
    'Bardam Throwing Spear': '257F',
    // Checkerboard AoE, Throwing Spear, second boss
    'Bardam Bardam\'s Ring': '2581',
    // Donut AoE headmarkers, Bardam, second boss
    'Bardam Comet': '257D',
    // Targeted circle AoEs, Bardam, second boss
    'Bardam Comet Impact': '2580',
    // Circle AoEs, Star Shard, second boss
    'Bardam Iron Sphere Attack': '16B6',
    // Contact damage, Iron Sphere trash, before third boss
    'Bardam Tornado': '247E',
    // Circle AoE, Khun Shavara trash
    'Bardam Pinion': '1F11',
    // Line AoE, Yol Feather, third boss
    'Bardam Feather Squall': '1F0E',
    // Dash attack, Yol, third boss
    'Bardam Flutterfall Untargeted': '1F12' // Rotating circle AoEs, Yol, third boss

  },
  gainsEffectWarn: {
    'Bardam Confused': '0B' // Failed gaze attack, Yol, third boss

  },
  gainsEffectFail: {
    'Bardam Fetters': '56F' // Failing two mechanics in any one phase on Bardam, second boss.

  },
  shareWarn: {
    'Bardam Garula Rush': '1EF9',
    // Line AoE, Garula, first boss.
    'Bardam Flutterfall Targeted': '1F0C',
    // Circle AoE headmarker, Yol, third boss
    'Bardam Wingbeat': '1F0F' // Conal AoE headmarker, Yol, third boss

  },
  triggers: [// 1 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 1',
    abilityId: '2578'
  }), // 2 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 2',
    abilityId: '2579'
  }), // 3 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 3',
    abilityId: '257A'
  }), // 1 of 2 concentric ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Tremblor 1',
    abilityId: '257B'
  }), // 2 of 2 concentric ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Tremblor 2',
    abilityId: '257C'
  }), // Checkerboard AoE, Throwing Spear, second boss
  abilityWarn({
    id: 'Bardam Throwing Spear',
    abilityId: '257F'
  }), // Gaze attack, Warrior of Bardam, second boss
  abilityWarn({
    id: 'Bardam Empty Gaze',
    abilityId: '1F04'
  }), // Donut AoE headmarkers, Bardam, second boss
  abilityWarn({
    id: 'Bardam\'s Ring',
    abilityId: '2581'
  }), // Targeted circle AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Comet',
    abilityId: '257D'
  }), // Circle AoEs, Star Shard, second boss
  abilityWarn({
    id: 'Bardam Comet Impact',
    abilityId: '2580'
  })]
};
/* harmony default export */ const bardams_mettle = (bardams_mettle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/castrum_abania.ts

const castrum_abania_triggerSet = {
  zoneId: zone_id/* default.CastrumAbania */.Z.CastrumAbania,
  damageWarn: {
    'CastrumAbania 12th Legion Laquearius Overpower': '2D0',
    // conal
    'CastrumAbania 12th Legion Avenger Shoulder Cannon': '231C',
    // targeted circle
    'CastrumAbania 12th Legion Vanguard Cermet Drill': '20E',
    // line aoe
    'CastrumAbania 12th Legion Signifier Dark Fire III': '519',
    // targeted circle
    'CastrumAbania 12th Legion Canis Pugnax Recklass Charge': '14F',
    // line aoe
    'CastrumAbania Magna Roader Magitek Fire 2': '1F15',
    // targeted circle
    'CastrumAbania Magna Roader Wild Speed': '1FF8',
    // 4x line charges
    'CastrumAbania Magna Roader Magitek Pulse 1': '2090',
    // Mark XLIII Mini Cannon aoes
    'CastrumAbania Magna Roader Magitek Pulse 2': '1F19',
    // Mark XLIII Mini Cannon aoes
    'CastrumAbania Hypertuned Blast Wave': '42C',
    // line aoe
    'CastrumAbania 12th Legion Roader Rush': '208A',
    // long line aoe when Roaders enter
    'CastrumAbania Number XXIV Gale Cut': '2083',
    // targeted circle
    'CastrumAbania Number XXIV Overflow': '1F20',
    // failing to get a tower
    'CastrumAbania 12th Legion Rearguard Cermet Pile': '23AB',
    // line aoe
    'CastrumAbania 12th Legion Armored Weapon Diffractive Laser': '209C',
    // centered circle
    'CastrumAbania 12th Legion Colossus Grand Sword': '24A6',
    // large conal
    'CastrumAbania 12th Legion Colossus Exhaust': '24A8',
    // large line aoe
    'CastrumAbania Inferno Rahu Blaster 1': '1F29',
    // line aoe (at Rahu 0)
    'CastrumAbania Inferno Rahu Blaster 2': '208E',
    // line aoe (at Rahu 1)
    'CastrumAbania Inferno Rahu Blaster 3': '208F',
    // line aoe (at Rahu 2)
    'CastrumAbania Inferno Ketu Wave': '1F28',
    // large circle during Ketu & Rahu
    'CastrumAbania Inferno Ketu Cutter': '1F27' // 180/360 pinwheel during Ketu & Rahu

  },
  damageFail: {
    'CastrumAbania Number XXIV Counter': '1F24' // having the wrong element

  },
  gainsEffectWarn: {
    'CastrumAbania Inferno 12th Legion Death Claw Seized': '507' // getting grabbed by tethered Death Claw

  },
  shareWarn: {
    'CastrumAbania Inferno Rahu Ray': '1F2A' // red spread circle

  }
};
/* harmony default export */ const castrum_abania = (castrum_abania_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/doma_castle.ts

const doma_castle_triggerSet = {
  zoneId: zone_id/* default.DomaCastle */.Z.DomaCastle,
  damageWarn: {
    'Doma Castle Doman Colossus Grand Sword': '2179',
    // large wide conal
    'Doma Castle Doman Gunship Garlean Fire': '217C',
    // targeted circle (can happen out of combat)
    'Doma Castle Magitek Rearguard Garlean Fire': '209F',
    // line of targeted exaflare-y circles
    'Doma Castle Magitek Rearguard Magitek Ray': '20A1',
    // Rearguard Bit green line aoe
    'Doma Castle Magitek Rearguard Self-Detonate': '20A0',
    // running into a Rearguard Mine
    'Doma Castle Doman Vanguard Overcharge': '217E',
    // centered circle
    'Doma Castle Doman Vanguard Drill Cannons': '217D',
    // frontal line
    'Doma Castle Mark XLIII Field Cannon Magitek Cannon': '24E9',
    // line aoes from stationary cannons
    'Doma Castle Doman Reaper Magitek Cannon': '2181',
    // centered circle
    'Doma Castle Hexadrone Bit Chain Mine 1': '2447',
    // Destroyable laser that does knockback, both 2&3 boss
    'Doma Castle Hexadrone Bit Chain Mine 2': '20A7',
    // Destroyable laser that does knockback, both 2&3 boss
    'Doma Castle Magitek Hexadrone Circle Of Death': '20A2',
    // centered circle
    'Doma Castle Magitek Hexadrone Magitek Missiles': '20A6',
    // failing tower (20A5 is correct tower damage)
    'Doma Castle Doman Hastatus Tenka Goken': '2182',
    // wide conal
    'Doma Castle Doman Armored Weapon Diffractive Laser': '2184',
    // centered circle
    'Doma Castle Hypertuned Grynewaht Clean Cut': '20B1' // Magitek Chakram lines

  },
  shareWarn: {
    'Doma Castle Hypertuned Grynewaht Delay-Action Charge': '20AD' // spread marker

  },
  soloWarn: {
    'Doma Castle Magitek Hexadrone 2-Tonze Magitek Missile': '20A3' // stack marker

  }
};
/* harmony default export */ const doma_castle = (doma_castle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/drowned_city_of_skalla.ts

const drowned_city_of_skalla_triggerSet = {
  zoneId: zone_id/* default.TheDrownedCityOfSkalla */.Z.TheDrownedCityOfSkalla,
  damageWarn: {
    'Hydrocannon': '2697',
    // Line AoE, Salt Swallow trash, before boss 1
    'Stagnant Spray': '2699',
    // Conal AoE, Skalla Nanka trash, before boss 1
    'Bubble Burst': '261B',
    // Bubble explosion, Hydrosphere, boss 1
    'Plain Pound': '269A',
    // Large circle AoE, Dhara Sentinel trash, before boss 2
    'Boulder Toss': '269B',
    // Small circle AoE, Stone Phoebad trash, before boss 2
    'Landslip': '269C',
    // Conal AoE, Stone Phoebad trash, before boss 2
    'Mystic Light': '2657',
    // Conal AoE, The Old One, boss 2
    'Mystic Flame': '2659',
    // Large circle AoE, The Old One, boss 2. 2658 is the cast-time ability.
    'Dark II': '110E',
    // Thin cone AoE, Lightless Homunculus trash, after boss 2
    'Implosive Curse': '269E',
    // Conal AoE, Zangbeto trash, after boss 2
    'Undying FIre': '269F',
    // Circle AoE, Zangbeto trash, after boss 2
    'Fire II': '26A0',
    // Circle AoE, Accursed Idol trash, after boss 2
    'Rusting Claw': '2661',
    // Frontal cleave, Hrodric Poisontongue, boss 3
    'Words Of Woe': '2662',
    // Eye lasers, Hrodric Poisontongue, boss 3
    'Tail Drive': '2663',
    // Rear cleave, Hrodric Poisontongue, boss 3
    'Ring Of Chaos': '2667' // Ring headmarker, Hrodric Poisontongue, boss 3

  },
  damageFail: {
    'Self-Detonate': '265C' // Roomwide explosion, Subservient, boss 2

  },
  gainsEffectWarn: {
    'Dropsy': '11B',
    // Standing in Bloody Puddles, or being knocked outside the arena, boss 1
    'Confused': '0B' // Failing the gaze attack, boss 3

  },
  shareWarn: {
    'Bloody Puddle': '2655',
    // Large watery spread circles, Kelpie, boss 1
    'Cross Of Chaos': '2668',
    // Cross headmarker, Hrodric Poisontongue, boss 3
    'Circle Of Chaos': '2669' // Spread circle headmarker, Hrodric Poisontongue, boss 3

  }
};
/* harmony default export */ const drowned_city_of_skalla = (drowned_city_of_skalla_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/fractal_continuum_hard.ts

const fractal_continuum_hard_triggerSet = {
  zoneId: zone_id/* default.TheFractalContinuumHard */.Z.TheFractalContinuumHard,
  damageWarn: {
    'FractalHard Prototype Claw Shred': '1257',
    // line aoe
    'FractalHard Prototype Claw The Hand': '1258',
    // conal
    'FractalHard Servomechanical Minotaur 16-Tonze Swipe': '2AE5',
    // untelegraphed conal
    'FractalHard Servomechanical Minotaur 128-Tonze Swing': '2AE4',
    // telegraphed large circle
    // These apply to both Servomechanical Chimera and Proto-Chimera.
    'FractalHard Chimera The Ram\s Breath': '122A',
    // conal
    'FractalHard Chimera The Dragon\s Breath': '122B',
    // conal
    'FractalHard Chimera The Dragon\s Voice': '861',
    // untelegraphed donut
    'FractalHard Chimera The Ram\'s Voice': '860',
    // untelegraphed centered circle
    'FractalHard Chimera The Lion\'s Breath': '85F',
    // conal
    'FractalHard Motherbit Prototype Bit Diffractive Laser': '27A8',
    // line aoe
    'FractalHard Motherbit Prototype Bit Hypercurrent': '27AC',
    // hitting the bit line laser during Citadel Buster
    'FractalHard Motherbit Allagan Gravity': '27A6',
    // spread marker
    'FractalHard Motherbit Citadel Buster': '27A5',
    // front 180 laser
    'FractalHard Prototype Mirrorknight Gust': '865',
    // targeted circle
    'FractalHard Rinkhals Regorge': '25B8',
    // targeted circle
    'FractalHard Ultima Warrior Citadel Buster': '2792',
    // untelegraphed front line laser
    'FractalHard Ultima Warrior Ein Sof': '2798',
    // Sephirot phase being in the green growing bubble
    'FractalHard Biomanufactured Minotaur 11-Tonze Swipe': '29A2',
    // untelegraphed conal
    'FractalHard Biomanufactured Minotaur 111-Tonze Swing': '29A1',
    // telegraphed large circle
    'Fractalhard Ultima Beast Death Spin': '27AD',
    // melee range untelegraphed circle
    'Fractalhard Ultima Beast Aether Bend': '27AF',
    // get under donut
    'Fractalhard Ultima Beast Light Pillar 1': '227BA',
    // initial point of light pillar circles
    'Fractalhard Ultima Beast Light Pillar 2': '27BB' // follow up light pillar hits

  },
  damageFail: {
    'FractalHard Motherbit False Gravity': '27A7' // standing in Allagan Gravity puddle, gives Heavy

  },
  gainsEffectWarn: {
    'FractalHard Ultima Warrior Infinite Anguish': '487',
    // Personally failing Zurvan towers
    'FractalHard Ultima Warrior Reduced Immunity': '143',
    // Failing Sophia Dischordant Cleansing
    'Fractalhard Ultima Beast Burns': '11C' // standing in fire from Flare Star

  },
  shareWarn: {
    'FractalHard Ultima Warrior Aetheroplasm': '2793',
    // tankbuster cleave
    'FractalHard Ultima Warrior Ratzon': '2797',
    // Sephirot phase bubble drop
    'Fractalhard Ultima Beast Allagan Gravity': '27B9' // spread

  },
  soloWarn: {
    'FractalHard Ultima Warrior Mass Aetheroplasm': '2795' // tankbuster cleave

  }
};
/* harmony default export */ const fractal_continuum_hard = (fractal_continuum_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/ghimlyt_dark.ts

const ghimlyt_dark_triggerSet = {
  zoneId: zone_id/* default.TheGhimlytDark */.Z.TheGhimlytDark,
  damageWarn: {
    'Ghimlyt Airborne Explosion': '3881',
    // semi-targeted red circle
    'Ghimlyt Schola Gunship Garlean Fire': '3A6C',
    // targeted circle
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 1': '3774',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 2': '3775',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 3': '394E',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 4': '394F',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Exhaust': '3770',
    // line
    'Ghimlyt Schola Armored Weapon Diffractive Laser': '3A74',
    // targeted circle
    'Ghimlyt Prometheus Needle Gun': '345A',
    // front 90 degree conal
    'Ghimlyt Prometheus Oil Shower': '3456',
    // back 270 degree
    'Ghimlyt Prometheus Heat': '3458',
    // wall laser
    'Ghimlyt Schola Colossus Grand Strike': '3A75',
    // thin line
    'Ghimlyt Schola Hexadrone Swoop': '3882',
    // line aoe entering arena
    'Ghimlyt Schola Hexadrone 2-Tonze Magitek Missile': '3A71',
    // targeted circle
    'Ghimlyt Schola Hexadrone Circle of Death': '3A70',
    // centered circle
    'Ghimlyt Schola Mark II Colossus Exhaust': '3A76',
    // line
    'Ghimlyt Schola Mark II Colossus Grand Sword': '3A77',
    // wide conal
    'Ghimlyt Soranus Duo Angry Salamander': '372C',
    // targeted line
    'Ghimlyt Soranus Duo Crossbones': '3C80',
    // targeted line with knockback
    'Ghimlyt Soranus Duo Bombardment': '3C71',
    // large circles during Order to Bombard
    'Ghimlyt Soranus Duo Stunning Sweep': '3C72',
    // centered circle
    'Ghimlyt Soranus Duo Crosshatch': '3722',
    // repeated X charges during intermissions
    'Ghimlyt Soranus Duo Ceruleum Tank Burst': '371A',
    // ceruleum tank circle explosions
    'Ghimlyt Soranus Duo Quaternity': '3733' // series of X line charges

  },
  gainsEffectWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Burns': '1F7',
    // standing in Magitek Slash fire pie slice
    'Ghimlyt Prometheus Burns': '11C' // standing in outside fire circle

  },
  shareWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Jarring Blow': '376E',
    // tank buster conal cleave
    'Ghimlyt Mark III-B Magitek Colossus Wild Fire Beam': '3772',
    // spread marker
    'Ghimlyt Schola Colossus Homing Laser': '3884' // spread marker

  },
  soloWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Magitek Ray': '376F' // stack marker

  }
};
/* harmony default export */ const ghimlyt_dark = (ghimlyt_dark_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/hells_lid.ts

const hells_lid_triggerSet = {
  zoneId: zone_id/* default.HellsLid */.Z.HellsLid,
  damageWarn: {
    'HellsLid Nurikabe Fire II': '299F',
    // targeted circle'
    'HellsLid Magma': '2882',
    // line attacks from wall
    'HellsLid Hellish Lion Howling Wail': '299D',
    // large centered circle
    'HellsLid Hellfire Shikigami Fluid Swing': '299E',
    // conal
    'HellsLid Otake-maru 100-tonze Swing': '27BE',
    // untelegraphed centered circle
    'HellsLid Otake-maru Volcanic Debris': '27C5',
    // ambient circles on floor
    'HellsLid Otake-maru 10-tonze Slash': '27BF',
    // telegraphed conal
    'HellsLid Otake-maru Disrobe': '27C2',
    // small circles appearing after prey marker
    'HellsLid Otake-maru Stone Cudgel': '27C3',
    // spin attack when touching sword/shield
    'HellsLid Otake-maru Liquid Carapace': '27C0',
    // being too close to boss during prey Disrobe phase
    'HellsLid Hellish Yumemi Blanket Thunder': '21B3',
    // centered circle
    'HellsLid Kaja Electrogenesis': '11C2',
    // targeted large circle, by both Kaja and Kaja of the Seven Flames
    'HellsLid Kamaitachi Circling Winds': '27C8',
    // wind donut
    'HellsLid Kamaitachi Rolling Winds': '27C9',
    // large back/front line
    'HellsLid Kamaitachi The Patient Blade': '27C7',
    // front 180 cleave
    'HellsLid Kamaitachi Northerly': '27CD',
    // untargetable triggered wind sprite knockback explosion
    'HellsLid Kamaitachi Tsumuji-Kaze Tornado': '247E',
    // large targeted circle
    'HellsLid Kamaitachi Late Harvest': '27CC',
    // dashes
    'HellsLid Kamaitachi Gale The Storm\'s Grip': '27CE',
    // standing in the tornado
    'HellsLid Shikigami of the Spring Brine Bomb': '29A0',
    // targeted circle
    'HellsLid Stillwind Nue Twister': '2965',
    // targeted circle
    'HellsLid Boltstorm Nue Scythe Tail': '2A08',
    // centered circle
    'HellsLid Boltstorm Nue Butcher': '2964',
    // large wide conal
    'HellsLid Boltstorm Nue Spark': '2964',
    // donut with a very large hole
    'HellsLid Genbu Sinister Tide': '27D5',
    // light up arrow hexes
    'HellsLid Genbu Hell of Water': '27D0',
    // cross aoe
    'HellsLid Genbu Shell Shower': '2850' // light up hex squares during Chelonian Gate midphase

  },
  shareWarn: {
    'HellsLid Genbu Hell of Waste': '27D2',
    // very large spread marker
    'HellsLid Reisen Tatsunoko Hydrate': '2134' // untelegraphed cleave from snake mob

  }
};
/* harmony default export */ const hells_lid = (hells_lid_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/kugane_castle.ts

const kugane_castle_triggerSet = {
  zoneId: zone_id/* default.KuganeCastle */.Z.KuganeCastle,
  damageWarn: {
    'Kugane Castle Tenka Gokken': '2329',
    // Frontal cone AoE,  Joi Blade trash, before boss 1
    'Kugane Castle Kenki Release Trash': '2330',
    // Chariot AoE, Joi Kiyofusa trash, before boss 1
    'Kugane Castle Clearout': '1E92',
    // Frontal cone AoE, Zuiko-Maru, boss 1
    'Kugane Castle Hara-Kiri 1': '1E96',
    // Giant circle AoE, Harakiri Kosho, boss 1
    'Kugane Castle Hara-Kiri 2': '24F9',
    // Giant circle AoE, Harakiri Kosho, boss 1
    'Kugane Castle Juji Shuriken 1': '232D',
    // Line AoE, Karakuri Onmitsu trash, before boss 2
    'Kugane Castle 1000 Barbs': '2198',
    // Line AoE, Joi Koja trash, before boss 2
    'Kugane Castle Juji Shuriken 2': '1E98',
    // Line AoE, Dojun Maru, boss 2
    'Kugane Castle Tatami-Gaeshi': '1E9D',
    // Floor tile line attack, Elkite Onmitsu, boss 2
    'Kugane Castle Juji Shuriken 3': '1EA0',
    // Line AoE, Elite Onmitsu, boss 2
    'Kugane Castle Auto Crossbow': '2333',
    // Frontal cone AoE, Karakuri Hanya trash, after boss 2
    'Kugane Castle Harakiri 3': '23C9',
    // Giant Circle AoE, Harakiri  Hanya trash, after boss 2
    'Kugane Castle Iai-Giri': '1EA2',
    // Chariot AoE, Yojimbo, boss 3
    'Kugane Castle Fragility': '1EAA',
    // Chariot AoE, Inoshikacho, boss 3
    'Kugane Castle Dragonfire': '1EAB' // Line AoE, Dragon Head, boss 3

  },
  shareWarn: {
    'Kugane Castle Issen': '1E97',
    // Instant frontal cleave, Dojun Maru, boss 2
    'Kugane Castle Clockwork Raiton': '1E9B' // Large lightning spread circles, Dojun Maru, boss 2

  },
  soloFail: {
    'Kugane Castle Helm Crack': '1E94' // Stack marker, Zuiko Maru, boss 1

  }
};
/* harmony default export */ const kugane_castle = (kugane_castle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/shisui_of_the_violet_tides.ts

const shisui_of_the_violet_tides_triggerSet = {
  zoneId: zone_id/* default.ShisuiOfTheVioletTides */.Z.ShisuiOfTheVioletTides,
  damageWarn: {
    'Shisui Violet Coralshell Bubble Shower': '236',
    // frontal conal
    'Shisui Hikagiri Defibrillate': '11C1',
    // centered circle
    'Shisui Buried Monkfish Fish Out Of Water': '1F88',
    // untelegraphed triggered monkfish mine
    'Shisui Ango Flounder': '91F',
    // line aoe
    'Shisui Hikagiri Electrogenesis': '11C2',
    // targeted circle
    'Shisui Amikiri Shuck': '1F75',
    // not killing Amikiri's leg
    'Shisui Palace Guard Heartstopper': '362',
    // dragoon guard line aoe
    'Shisui Palace Guard Fire Arrow': '1F89',
    // ambient untargeted circles
    'Shisui Captain Of The Guard Tenka Goken': '23B7',
    // wide conal
    'Shisui Ruby Princess Coriolis Kick': '1F7B',
    // large centered circle (seduce always paired with this)
    'Shisui Ruby Princess Abyssal Volcano': '1F7C',
    // centered circle paired with chase aoe
    'Shisui Ruby Princess Geothermal Flatulence 1': '24D7',
    // chase aoe initial
    'Shisui Ruby Princess Geothermal Flatulence 2': '1F7D',
    // chase aoe x10
    'Shisui Violet Bombfish 1000 Spines': '1FF7',
    // roaming bombfish triggered circle
    'Shisui Blue Unkiu Flush': '21A4',
    // interruptible centered circle
    'Shisui Shisui Yohi Black Tide': '1F81',
    // reappearance after thick fog
    'Shisui Shisui Yohi Churn Bubble Burst': '1F84',
    // not killing bubble during thick fog
    'Shisui Shisui Yohi Naishi-No-Kami Bite And Run': '1F85',
    // not killing shark add
    'Shisui Shisui Yohi Naishi-No-Jo Bite And Run': '1F86' // not killing small shark add

  },
  gainsEffectWarn: {
    // Note: Dropsy (213, with count field) is the effect during Shisui Yohi Thick Fog
    'Shisui Dropsy': '121',
    // standing in Kamikiri digestive fluid puddle
    'Shisui Hysteria': '128' // failing Shisui Yohi Mad Stare (1F82)

  },
  shareWarn: {
    'Shisui Amikiri Digest': '1F79' // Kamikiri digestive fluid puddle landing

  }
};
/* harmony default export */ const shisui_of_the_violet_tides = (shisui_of_the_violet_tides_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/sirensong_sea.ts

const sirensong_sea_triggerSet = {
  zoneId: zone_id/* default.TheSirensongSea */.Z.TheSirensongSea,
  damageWarn: {
    'Sirensong Ancient Ymir Head Snatch': '2353',
    // frontal conal
    'Sirensong Reflection of Karlabos Tail Screw': '12B7',
    // targeted circle
    'Sirensong Lugat Amorphous Applause': '1F56',
    // frontal 180 cleave
    'Sirensong Lugat Concussive Oscillation': '1F5B',
    // 5 or 7 circles
    'Sirensong The Jane Guy Ball of Malice': '1F6A',
    // ambient cannon circle
    'Sirensong Dark': '19DF',
    // Skinless Skipper / Fleshless Captive targeted circle
    'Sirensong The Governor Shadowstrike': '1F5D',
    // standing in shadows
    'Sirensong Undead Warden March of the Dead': '2351',
    // frontal conal
    'Sirensong Fleshless Captive Flood': '218B',
    // centered circle after seductive scream
    'Sirensong Lorelei Void Water III': '1F68' // large targeted circle

  }
};
/* harmony default export */ const sirensong_sea = (sirensong_sea_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/st_mocianne_hard.ts

const st_mocianne_hard_triggerSet = {
  zoneId: zone_id/* default.SaintMociannesArboretumHard */.Z.SaintMociannesArboretumHard,
  damageWarn: {
    'St Mocianne Hard Mudstream': '30D9',
    // Targeted circle AoE, Immaculate Apa trash, before boss 1
    'St Mocianne Hard Silken Spray': '3385',
    // Rear cone AoE, Withered Belladonna trash, before boss 1
    'St Mocianne Hard Muddy Puddles': '30DA',
    // Small targeted circle AoEs, Dorpokkur trash, before boss 1
    'St Mocianne Hard Odious Air': '2E49',
    // Frontal cone AoE, Nullchu, boss 1
    'St Mocianne Hard SLudge Bomb': '2E4E',
    // Targeted circle AoEs, Nullchu, boss 1
    'St Mocianne Hard Odious Atmosphere': '2E51',
    // Channeled 3/4 arena cleave, Nullchu, boss 1
    'St Mocianne Hard Creeping Ivy': '31A5',
    // Frontal cone AoE, Withered Kulak trash, before boss 2
    'St Mocianne Hard Rockslide': '3134',
    // Line AoE, Silt Golem, boss 2
    'St Mocianne Hard Earthquake Inner': '312E',
    // Chariot AoE, Lakhamu, boss 2
    'St Mocianne Hard Earthquake Outer': '312F',
    // Dynamo AoE, Lakhamu, boss 2
    'St Mocianne Hard Embalming Earth': '31A6',
    // Large Chariot AoE, Muddy Mata, after boss 2
    'St Mocianne Hard Quickmire': '3136',
    // Sewage surge avoided on platforms, Tokkapchi, boss 3
    'St Mocianne Hard Quagmire Platforms': '3139',
    // Quagmire explosion on platforms, Tokkapchi, boss 3
    'St Mocianne Hard Feculent Flood': '313C',
    // Targeted thin cone AoE, Tokkapchi, boss 3
    'St Mocianne Hard Corrupture': '33A0' // Mud Slime explosion, boss 3. (No explosion if done correctly.)

  },
  gainsEffectWarn: {
    'St Mocianne Hard Seduced': '3DF',
    // Gaze failure, Withered Belladonna trash, before boss 1
    'St Mocianne Hard Pollen': '13',
    // Sludge puddles, Nullchu, boss 1
    'St Mocianne Hard Transfiguration': '648',
    // Roly-Poly AoE circle failure, BLooming Biloko trash, before boss 2
    'St Mocianne Hard Hysteria': '128',
    // Gaze failure, Lakhamu, boss 2
    'St Mocianne Hard Stab Wound': '45D' // Arena outer wall effect, boss 2

  },
  shareWarn: {
    'St Mocianne Hard Taproot': '2E4C',
    // Large orange spread circles, Nullchu, boss 1
    'St Mocianne Hard Earth Shaker': '3131' // Earth Shaker, Lakhamu, boss 2

  },
  soloFail: {
    'St Mocianne Hard Fault Warren': '2E4A' // Stack marker, Nullchu, boss 1

  }
};
/* harmony default export */ const st_mocianne_hard = (st_mocianne_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/swallows_compass.ts


const swallows_compass_triggerSet = {
  zoneId: zone_id/* default.TheSwallowsCompass */.Z.TheSwallowsCompass,
  damageWarn: {
    'Swallows Compass Ivy Fetters': '2C04',
    // Circle ground AoE, Sai Taisui trash, before boss 1
    'Swallows Compass Wildswind 1': '2C05',
    // Tornado ground AoE, placed by Sai Taisui trash, before boss 1
    'Swallows Compass Yama-Kagura': '2B96',
    // Frontal line AoE, Otengu, boss 1
    'Swallows Compass Flames Of Hate': '2B98',
    // Fire orb explosions, boss 1
    'Swallows Compass Conflagrate': '2B99',
    // Collision with fire orb, boss 1
    'Swallows Compass Upwell': '2C06',
    // Targeted circle ground AoE, Sai Taisui trash, before boss 2
    'Swallows Compass Bad Breath': '2C07',
    // Frontal cleave, Jinmenju trash, before boss 2
    'Swallows Compass Greater Palm 1': '2B9D',
    // Half arena right cleave, Daidarabotchi, boss 2
    'Swallows Compass Greater Palm 2': '2B9E',
    // Half arena left cleave, Daidarabotchi, boss 2
    'Swallows Compass Tributary': '2BA0',
    // Targeted thin conal ground AoEs, Daidarabotchi, boss 2
    'Swallows Compass Wildswind 2': '2C06',
    // Circle ground AoE, environment, after boss 2
    'Swallows Compass Wildswind 3': '2C07',
    // Circle ground AoE, placed by Sai Taisui trash, after boss 2
    'Swallows Compass Filoplumes': '2C76',
    // Frontal rectangle AoE, Dragon Bi Fang trash, after boss 2
    'Swallows Compass Both Ends 1': '2BA8',
    // Chariot AoE, Qitian Dasheng, boss 3
    'Swallows Compass Both Ends 2': '2BA9',
    // Dynamo AoE, Qitian Dasheng, boss 3
    'Swallows Compass Both Ends 3': '2BAE',
    // Chariot AoE, Shadow Of The Sage, boss 3
    'Swallows Compass Both Ends 4': '2BAF',
    // Dynamo AoE, Shadow Of The Sage, boss 3
    'Swallows Compass Equal Of Heaven': '2BB4' // Small circle ground AoEs, Qitian Dasheng, boss 3

  },
  gainsEffectWarn: {
    'Swallows Compass Hysteria': '128',
    // Gaze attack failure, Otengu, boss 1
    'Swallows Compass Bleeding': '112F' // Stepping outside the arena, boss 3

  },
  shareWarn: {
    'Swallows Compass Mirage': '2BA2',
    // Prey-chasing puddles, Daidarabotchi, boss 2
    'Swallows Compass Mountain Falls': '2BA5',
    // Circle spread markers, Daidarabotchi, boss 2
    'Swallows Compass The Long End': '2BA7',
    // Laser tether, Qitian Dasheng  boss 3
    'Swallows Compass The Long End 2': '2BAD' // Laser Tether, Shadows Of The Sage, boss 3

  },
  soloFail: {
    'Swallows Compass Five Fingered Punishment 1': '2BAB',
    // Stack marker, boss 3
    'Swallows Compass Five Fingered Punishment 2': '2BB0' // Stack marker, boss 3

  },
  triggers: [{
    // Standing in the lake, Diadarabotchi, boss 2
    id: 'Swallows Compass Six Fulms Under',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '237'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const swallows_compass = (swallows_compass_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/temple_of_the_fist.ts

const temple_of_the_fist_triggerSet = {
  zoneId: zone_id/* default.TheTempleOfTheFist */.Z.TheTempleOfTheFist,
  damageWarn: {
    'Temple Fire Break': '21ED',
    // Conal AoE, Bloodglider Monk trash
    'Temple Radial Blaster': '1FD3',
    // Circle AoE, boss 1
    'Temple Wide Blaster': '1FD4',
    // Conal AoE, boss 1
    'Temple Crippling Blow': '2016',
    // Line AoEs, environmental, before boss 2
    'Temple Broken Earth': '236E',
    // Circle AoE, Singha trash
    'Temple Shear': '1FDD',
    // Dual conal AoE, boss 2
    'Temple Counter Parry': '1FE0',
    // Retaliation for incorrect direction after Killer Instinct, boss 2
    'Temple Tapas': '',
    // Tracking circular ground AoEs, boss 2
    'Temple Hellseal': '200F',
    // Red/Blue symbol failure, boss 2
    'Temple Pure Will': '2017',
    // Circle AoE, Spirit Flame trash, before boss 3
    'Temple Megablaster': '163',
    // Conal AoE, Coeurl Prana trash, before boss 3
    'Temple Windburn': '1FE8',
    // Circle AoE, Twister wind, boss 3
    'Temple Hurricane Kick': '1FE5',
    // 270-degree frontal AoE, boss 3
    'Temple Silent Roar': '1FEB',
    // Frontal line AoE, boss 3
    'Temple Mighty Blow': '1FEA' // Contact with coeurl head, boss 3

  },
  shareWarn: {
    'Temple Heat Lightning': '1FD7' // Purple spread circles, boss 1

  }
};
/* harmony default export */ const temple_of_the_fist = (temple_of_the_fist_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/the_burn.ts

const the_burn_triggerSet = {
  zoneId: zone_id/* default.TheBurn */.Z.TheBurn,
  damageWarn: {
    'The Burn Falling Rock': '31A3',
    // Environmental line AoE
    'The Burn Aetherial Blast': '328B',
    // Line AoE, Kukulkan trash
    'The Burn Mole-a-whack': '328D',
    // Circle AoE, Desert Desman trash
    'The Burn Head Butt': '328E',
    // Small conal AoE, Desert Desman trash
    'The Burn Shardfall': '3191',
    // Roomwide AoE, LoS for safety, Hedetet, boss 1
    'The Burn Dissonance': '3192',
    // Donut AoE, Hedetet, boss 1
    'The Burn Crystalline Fracture': '3197',
    // Circle AoE, Dim Crystal, boss 1
    'The Burn Resonant Frequency': '3198',
    // Circle AoE, Dim Crystal, boss 1
    'The Burn Rotoswipe': '3291',
    // Frontal cone AoE, Charred Dreadnaught trash
    'The Burn Wrecking Ball': '3292',
    // Circle AoE, Charred Dreadnaught trash
    'The Burn Shatter': '3294',
    // Large circle AoE, Charred Doblyn trash
    'The Burn Auto-Cannons': '3295',
    // Line AoE, Charred Drone trash
    'The Burn Self-Detonate': '3296',
    // Circle AoE, Charred Drone trash
    'The Burn Full Throttle': '2D75',
    // Line AoE, Defective Drone, boss 2
    'The Burn Throttle': '2D76',
    // Line AoE, Mining Drone adds, boss 2
    'The Burn Adit Driver': '2D78',
    // Line AoE, Rock Biter adds, boss 2
    'The Burn Tremblor': '3297',
    // Large circle AoE, Veiled Gigaworm trash
    'The Burn Desert Spice': '3298',
    // The frontal cleaves must flow
    'The Burn Toxic Spray': '329A',
    // Frontal cone AoE, Gigaworm Stalker trash
    'The Burn Venom Spray': '329B',
    // Targeted circle AoE, Gigaworm Stalker trash
    'The Burn White Death': '3143',
    // Reactive during invulnerability, Mist Dragon, boss 3
    'The Burn Fog Plume 1': '3145',
    // Star AoE, Mist Dragon, boss 3
    'The Burn Fog Plume 2': '3146',
    // Line AoEs after stars, Mist Dragon, boss 3
    'The Burn Cauterize': '3148' // Line/Swoop AoE, Mist Dragon, boss 3

  },
  damageFail: {
    'The Burn Cold Fog': '3142' // Growing circle AoE, Mist Dragon, boss 3

  },
  gainsEffectWarn: {
    'The Burn Leaden': '43',
    // Puddle effect, boss 2. (Also inflicts 11F, Sludge.)
    'The Burn Puddle Frostbite': '11D' // Ice puddle effect, boss 3. (NOT the conal-inflicted one, 10C.)

  },
  shareWarn: {
    'The Burn Hailfire': '3194',
    // Head marker line AoE, Hedetet, boss 1
    'The Burn Shardstrike': '3195',
    // Orange spread head markers, Hedetet, boss 1
    'The Burn Chilling Aspiration': '314D',
    // Head marker cleave, Mist Dragon, boss 3
    'The Burn Frost Breath': '314C' // Tank cleave, Mist Dragon, boss 3

  }
};
/* harmony default export */ const the_burn = (the_burn_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o10n.ts

// TODO: Akh Rhai (3624) is not unusual to take ~1 hit from, so don't list.
// O10N - Alphascape 2.0 Normal
const o10n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV20 */.Z.AlphascapeV20,
  damageWarn: {
    'O10N Azure Wings': '31CD',
    // Out
    'O10N Stygian Maw': '31CF',
    // In
    'O10N Horrid Roar': '31D3',
    // targeted circles
    'O10N Bloodied Maw': '31D0',
    // Corners
    'O10N Cauterize': '3241',
    // divebomb attack
    'O10N Scarlet Thread': '362B',
    // orb waffle lines
    'O10N Exaflare 1': '362D',
    'O10N Exaflare 2': '362F'
  },
  shareWarn: {
    'O10N Earth Shaker': '31D1',
    // as it says on the tin
    'O10N Frost Breath': '33EE',
    // Ancient Dragon frontal conal
    'O10N Thunderstorm': '31D2' // purple spread marker

  }
};
/* harmony default export */ const o10n = (o10n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o10s.ts

const o10s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV20Savage */.Z.AlphascapeV20Savage,
  damageWarn: {
    'O10S Azure Wings': '31B2',
    // Out
    'O10S Stygian Maw': '31B0',
    // In
    'O10S Bloodied Maw': '31B5',
    // Corners
    'O10S Crimson Wings': '31B3',
    // Cardinals
    'O10S Horrid Roar': '31B9',
    // targeted circles
    'O10S Dark Wave': '341A',
    // Ancient Dragon circle upon death
    'O10S Cauterize': '3240',
    // divebomb attack
    'O10S Flame Blast': '31C1',
    // bombs
    'O10N Scarlet Thread': '362B',
    // orb waffle lines
    'O10N Exaflare 1': '362C',
    'O10N Exaflare 2': '362E'
  },
  shareWarn: {
    'O10S Earth Shaker': '31B6',
    // as it says on the tin
    'O10S Frost Breath': '33F1',
    // Ancient Dragon frontal conal
    'O10S Thunderstorm': '31B8' // purple spread marker

  },
  shareFail: {
    'O10S Crimson Breath': '31BC' // flame breath dodged with Ancient Bulwark

  }
};
/* harmony default export */ const o10s = (o10s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o11n.ts

// O11N - Alphascape 3.0 Normal
const o11n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV30 */.Z.AlphascapeV30,
  damageWarn: {
    'O11N Starboard Wave Cannon 1': '3281',
    // initial right cleave
    'O11N Starboard Wave Cannon 2': '3282',
    // follow-up right cleave
    'O11N Larboard Wave Cannon 1': '3283',
    // initial left cleave
    'O11N Larboard Wave Cannon 2': '3284',
    // follow-up left cleave
    'O11N Flame Thrower': '327D',
    // pinwheel conals
    'O11N Critical Storage Violation': '3279',
    // missing midphase towers
    'O11N Level Checker Reset': '35AA',
    // "get out" circle
    'O11N Level Checker Reformat': '35A9',
    // "get in" donut
    'O11N Rocket Punch Rush': '3606' // giant hand 1/3 arena line aoes

  },
  gainsEffectWarn: {
    'O11N Burns': 'FA' // standing in ballistic missile fire puddle

  },
  gainsEffectFail: {
    'O11N Memory Loss': '65A' // failing to cleanse Looper in a tower

  },
  shareWarn: {
    'O11N Ballistic Impact': '327F' // spread markers

  },
  shareFail: {
    'O11N Blaster': '3280' // tank tether

  },
  soloFail: {
    'O11N Electric Slide': '3285' // stack marker

  }
};
/* harmony default export */ const o11n = (o11n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o11s.ts

const o11s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV30Savage */.Z.AlphascapeV30Savage,
  damageWarn: {
    'O11S Afterburner': '325E',
    // followup to Flame Thrower
    'O11S Rocket Punch Iron Kiss 1': '3608',
    // Rocket Punch hand circle from Peripheral Synthesis #1
    'O11S Rocket Punch Iron Kiss 2': '36F4',
    // Rocket Punch hand circle from Peripheral Synthesis #3
    'O11S Starboard Wave Cannon 1': '3262',
    'O11S Starboard Wave Cannon 2': '3263',
    'O11S Larboard Wave Cannon 1': '3264',
    'O11S Larboard Wave Cannon 2': '3265',
    'O11S Starboard Wave Cannon Surge 1': '3266',
    'O11S Starboard Wave Cannon Surge 2': '3267',
    'O11S Larboard Wave Cannon Surge 1': '3268',
    'O11S Larboard Wave Cannon Surge 2': '3269',
    'O11S Critical Dual Storage Violation': '3258',
    // failing a tower
    'O11S Level Checker Reset': '3268',
    // "get out" circle
    'O11S Level Checker Reformat': '3267',
    // "get in" donut
    'O11S Ballistic Impact': '370B',
    // circles during Panto 1
    'O11S Flame Thrower Panto': '3707',
    // pinwheel during Panto 2
    'O11S Guided Missile Kyrios': '370A' // Panto 2 baited circle

  },
  gainsEffectWarn: {
    'O11S Burns': 'FA' // standing in ballistic missile fire puddle

  },
  gainsEffectFail: {
    'O11S Memory Loss': '65A' // failing to cleanse Looper in a tower

  },
  shareWarn: {
    'O11S Flame Thrower': '325D',
    // protean wave
    'O11S Rocket Punch Rush': '3250',
    // tethered Rocket Punch charge from Peripheral Synthesis #2
    'O11S Wave Cannon Kyrios': '3705' // Panto 2 distance baited lasers

  },
  shareFail: {
    'O11S Mustard Bomb': '326D',
    // tank buster
    'O11S Blaster': '3261',
    // tethered explosion
    'O11S Diffuse Wave Cannon Kyrios': '3705' // Panto 2 tank lasers

  }
};
/* harmony default export */ const o11s = (o11s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o12n.ts


// O12N - Alphascape 4.0 Normal
const o12n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV40 */.Z.AlphascapeV40,
  damageWarn: {
    'O12N Floodlight': '3309',
    // targeted circular aoes after Program Alpha
    'O12N Efficient Bladework': '32FF',
    // telegraphed centered circle
    'O12N Efficient Bladework Untelegraphed': '32F3',
    // centered circle after transformation
    'O12N Optimized Blizzard III': '3303',
    // cross aoe
    'O12N Superliminal Steel 1': '3306',
    // sides of the room
    'O12N Superliminal Steel 2': '3307',
    // sides of the room
    'O12N Beyond Strength': '3300',
    // donut
    'O12N Optical Laser': '3320',
    // line aoe from eye
    'O12N Optimized Sagittarius Arrow': '3323' // line aoe from Omega-M

  },
  shareWarn: {
    'O12N Solar Ray': '330F' // circular tankbuster

  },
  soloWarn: {
    'O12N Spotlight': '330A' // stack marker

  },
  triggers: [{
    id: 'O12N Discharger Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '32F6'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o12n = (o12n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o12s.ts



// TODO: could add Patch warnings for double/unbroken tethers
// TODO: Hello World could have any warnings (sorry)
const o12s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV40Savage */.Z.AlphascapeV40Savage,
  damageWarn: {
    'O12S1 Superliminal Motion 1': '3334',
    // 300+ degree cleave with back safe area
    'O12S1 Efficient Bladework 1': '3329',
    // Omega-M "get out" centered aoe after split
    'O12S1 Efficient Bladework 2': '332A',
    // Omega-M "get out" centered aoe during blades
    'O12S1 Beyond Strength': '3328',
    // Omega-M "get in" centered aoe during shield
    'O12S1 Superliminal Steel 1': '3330',
    // Omega-F "get front/back" blades phase
    'O12S1 Superliminal Steel 2': '3331',
    // Omega-F "get front/back" blades phase
    'O12S1 Optimized Blizzard III': '3332',
    // Omega-F giant cross
    'O12S2 Diffuse Wave Cannon': '3369',
    // back/sides lasers
    'O12S2 Right Arm Unit Hyper Pulse 1': '335A',
    // Rotating Archive Peripheral lasers
    'O12S2 Right Arm Unit Hyper Pulse 2': '335B',
    // Rotating Archive Peripheral lasers
    'O12S2 Right Arm Unit Colossal Blow': '335F',
    // Exploding Archive All hands
    'O12S2 Left Arm Unit Colossal Blow': '3360' // Exploding Archive All hands

  },
  damageFail: {
    'O12S1 Optical Laser': '3347',
    // middle laser from eye
    'O12S1 Advanced Optical Laser': '334A',
    // giant circle centered on eye
    'O12S2 Rear Power Unit Rear Lasers 1': '3361',
    // Archive All initial laser
    'O12S2 Rear Power Unit Rear Lasers 2': '3362' // Archive All rotating laser

  },
  shareWarn: {
    'O12S1 Optimized Fire III': '3337',
    // fire spread
    'O12S2 Hyper Pulse Tether': '335C',
    // Index And Archive Peripheral tethers
    'O12S2 Wave Cannon': '336B',
    // Index And Archive Peripheral baited lasers
    'O12S2 Optimized Fire III': '3379' // Archive All spread

  },
  shareFail: {
    'O12S1 Optimized Sagittarius Arrow': '334D',
    // Omega-M bard limit break
    'O12S2 Oversampled Wave Cannon': '3366',
    // Monitor tank busters
    'O12S2 Savage Wave Cannon': '336D' // Tank buster with the vuln first

  },
  triggers: [{
    id: 'O12S1 Discharger Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '3327'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O12S1 Magic Vulnerability Up Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '472'
    }),
    run: (data, matches) => {
      var _data$vuln;

      (_data$vuln = data.vuln) !== null && _data$vuln !== void 0 ? _data$vuln : data.vuln = {};
      data.vuln[matches.target] = true;
    }
  }, {
    id: 'O12S1 Magic Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '472'
    }),
    run: (data, matches) => {
      data.vuln = data.vuln || {};
      data.vuln[matches.target] = false;
    }
  }, {
    id: 'O12S1 Magic Vulnerability Damage',
    type: 'Ability',
    // 332E = Pile Pitch stack
    // 333E = Electric Slide (Omega-M square 1-4 dashes)
    // 333F = Electric Slide (Omega-F triangle 1-4 dashes)
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['332E', '333E', '333F'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.vuln && data.vuln[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (with vuln)`,
          de: `${matches.ability} (mit Verwundbarkeit)`,
          fr: `${matches.ability} (avec Vulnérabilité)`,
          ja: `${matches.ability} (被ダメージ上昇)`,
          cn: `${matches.ability} (带易伤)`,
          ko: `${matches.ability} (받피증 상태에서 피격)`
        }
      };
    }
  }]
};
/* harmony default export */ const o12s = (o12s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o1n.ts

// O1N - Deltascape 1.0 Normal
const o1n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV10 */.Z.DeltascapeV10,
  damageWarn: {
    'O1N Burn': '23D5',
    // Fireball explosion circle AoEs
    'O1N Clamp': '23E2' // Frontal rectangle knockback AoE, Alte Roite

  },
  shareWarn: {
    'O1N Levinbolt': '23DA' // small spread circles

  }
};
/* harmony default export */ const o1n = (o1n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o1s.ts

// O1S - Deltascape 1.0 Savage
const o1s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV10Savage */.Z.DeltascapeV10Savage,
  damageWarn: {
    'O1S Turbulence': '2584',
    // standing under the boss before downburst
    'O1S Ball Of Fire Burn': '1ECB' // fireball explosion

  },
  damageFail: {
    'O1S Clamp': '1EDE' // large frontal line aoe

  },
  shareWarn: {
    'O1S Levinbolt': '1ED2' // lightning spread

  }
};
/* harmony default export */ const o1s = (o1s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o2n.ts



// O2N - Deltascape 2.0 Normal
const o2n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV20 */.Z.DeltascapeV20,
  damageWarn: {
    'O2N Main Quake': '24A5',
    // Non-telegraphed circle AoE, Fleshy Member
    'O2N Erosion': '2590' // Small circle AoEs, Fleshy Member

  },
  shareWarn: {
    'O2N Paranormal Wave': '250E' // Instant tank cleave

  },
  triggers: [{
    // We could try to separate out the mistake that led to the player being petrified.
    // However, it's Normal mode, why overthink it?
    id: 'O2N Petrification',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '262'
    }),
    // The user might get hit by another petrifying ability before the effect ends.
    // There's no point in notifying for that.
    suppressSeconds: 10,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'O2N Earthquake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2515',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // This deals damage only to non-floating targets.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o2n = (o2n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o2s.ts



// O2S - Deltascape 2.0 Savage
const o2s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV20Savage */.Z.DeltascapeV20Savage,
  damageWarn: {
    'O2S Weighted Wing': '23EF',
    // Unstable Gravity explosions on players (after Long Drop)
    'O2S Gravitational Explosion 1': '2367',
    // failing Four Fold Sacrifice 4 person stack
    'O2S Gravitational Explosion 2': '2368',
    // failing Four Fold Sacrifice 4 person stack
    'O2S Main Quake': '2359' // untelegraphed explosions from epicenter tentacles

  },
  gainsEffectFail: {
    'O2S Stone Curse': '589' // failing Death's Gaze or taking too many tankbuster stacks

  },
  triggers: [{
    // ground blue arena circles; (probably?) only do damage if not floating
    // TODO: usually this just doesn't hit anybody at all, due to patterns.
    // Floating over one is untested.
    id: 'O2S Petrosphere Explosion',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '245D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // floating yellow arena circles; only do damage if floating
    id: 'O2S Potent Petrosphere Explosion',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2362',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Must be floating to survive; hits everyone but only does damage if not floating.
    id: 'O2S Earthquake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '247A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o2s = (o2s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o3n.ts


// O3N - Deltascape 3.0 Normal
const o3n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV30 */.Z.DeltascapeV30,
  damageWarn: {
    'O3N Spellblade Fire III': '2460',
    // Donut AoE, Halicarnassus
    'O3N Spellblade Blizzard III': '2461',
    // Circle AoE, Halicarnassus
    'O3N Spellblade Thunder III': '2462',
    // Line AoE, Halicarnassus
    'O3N Cross Reaper': '246B',
    // Circle AoE, Soul Reaper
    'O3N Gusting Gouge': '246C',
    // Green line AoE, Soul Reaper
    'O3N Sword Dance': '2470',
    // Targeted thin cone AoE, Halicarnassus
    'O3N Uplift': '2473' // Ground spears, Queen's Waltz effect, Halicarnassus

  },
  damageFail: {
    'O3N Ultimum': '2477' // Instant kill. Used if the player does not exit the sand maze fast enough.

  },
  shareWarn: {
    'O3N Holy Blur': '2463' // Spread circles.

  },
  triggers: [{
    id: 'O3N Phase Tracker',
    type: 'StartsUsing',
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halicarnassus',
      capture: false
    }),
    netRegexDe: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halikarnassos',
      capture: false
    }),
    netRegexFr: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halicarnasse',
      capture: false
    }),
    netRegexJa: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'ハリカルナッソス',
      capture: false
    }),
    netRegexCn: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: '哈利卡纳苏斯',
      capture: false
    }),
    netRegexKo: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: '할리카르나소스',
      capture: false
    }),
    run: data => {
      var _data$phaseNumber;

      return data.phaseNumber = ((_data$phaseNumber = data.phaseNumber) !== null && _data$phaseNumber !== void 0 ? _data$phaseNumber : 0) + 1;
    }
  }, {
    // There's a lot to track, and in order to make it all clean, it's safest just to
    // initialize it all up front instead of trying to guard against undefined comparisons.
    id: 'O3N Initializing',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halicarnassus',
      capture: false
    }),
    netRegexDe: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halikarnassos',
      capture: false
    }),
    netRegexFr: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halicarnasse',
      capture: false
    }),
    netRegexJa: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'ハリカルナッソス',
      capture: false
    }),
    netRegexCn: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: '哈利卡纳苏斯',
      capture: false
    }),
    netRegexKo: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: '할리카르나소스',
      capture: false
    }),
    condition: data => !data.initialized,
    run: data => {
      data.gameCount = 0; // Indexing phases at 1 so as to make phases match what humans expect.
      // 1: We start here.
      // 2: Cave phase with Uplifts.
      // 3: Post-intermission, with good and bad frogs.

      data.phaseNumber = 1;
      data.initialized = true;
    }
  }, {
    id: 'O3N Ribbit',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2466'
    }),
    condition: (data, matches) => {
      var _data$gameCount;

      // We DO want to be hit by Toad/Ribbit if the next cast of The Game
      // is 4x toad panels.
      const gameCount = (_data$gameCount = data.gameCount) !== null && _data$gameCount !== void 0 ? _data$gameCount : 0;
      return !(data.phaseNumber === 3 && gameCount % 2 === 0) && matches.targetId !== 'E0000000';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // There's a lot we could do to track exactly how the player failed The Game.
    // Why overthink Normal mode, however?
    id: 'O3N The Game',
    type: 'Ability',
    // Guess what you just lost?
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '246D'
    }),
    // If the player takes no damage, they did the mechanic correctly.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    },
    run: data => {
      var _data$gameCount2;

      return data.gameCount = ((_data$gameCount2 = data.gameCount) !== null && _data$gameCount2 !== void 0 ? _data$gameCount2 : 0) + 1;
    }
  }]
};
/* harmony default export */ const o3n = (o3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o3s.ts



// TODO: handle Ribbit (22F7), Oink (22F9, if damage), Squelch (22F8, if damage)
//       which is an error except during the second game
// O3S - Deltascape 3.0 Savage
const o3s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV30Savage */.Z.DeltascapeV30Savage,
  damageWarn: {
    'O3S Spellblade Fire III': '22EC',
    // donut
    'O3S Spellblade Thunder III': '22EE',
    // line
    'O3S Spellblade Blizzard III': '22ED',
    // circle
    'O3S Uplift': '230D',
    // not standing on blue square
    'O3S Soul Reaper Gusting Gouge': '22FF',
    // reaper line aoe during cave phase
    'O3S Soul Reaper Cross Reaper': '22FD',
    // middle reaper circle
    'O3S Soul Reaper Stench of Death': '22FE',
    // outside reapers (during final phase)
    'O3S Apanda Magic Hammer': '2315',
    // books phase magic hammer circle
    'O3S Briar Thorn': '2309' // not breaking tethers fast enough

  },
  shareWarn: {
    'O3S Holy Edge': '22F0',
    // Spellblade Holy spread
    'O3S Sword Dance': '2307',
    // protean wave
    'O3S Great Dragon Frost Breath': '2312',
    // tank cleave from Great Dragon
    'O3S Iron Giant Grand Sword': '2316' // tank cleave from Iron Giant

  },
  shareFail: {
    'O3S Folio': '230F' // books books books

  },
  soloWarn: {
    'O3S Holy Blur': '22F1' // Spellblade Holy stack

  },
  triggers: [{
    // Everybody gets hits by this, but it's only a failure if it does damage.
    id: 'O3S The Game',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2301',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o3s = (o3s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o4n.ts



// O4N - Deltascape 4.0 Normal
const o4n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV40 */.Z.DeltascapeV40,
  damageWarn: {
    'O4N Blizzard III': '24BC',
    // Targeted circle AoEs, Exdeath
    'O4N Empowered Thunder III': '24C1',
    // Untelegraphed large circle AoE, Exdeath
    'O4N Zombie Breath': '24CB',
    // Conal, tree head after Decisive Battle
    'O4N Clearout': '24CC',
    // Overlapping cone AoEs, Deathly Vine (tentacles alongside tree head)
    'O4N Black Spark': '24C9' // Exploding Black Hole

  },
  shareWarn: {
    // Empowered Fire III inflicts the Pyretic debuff, which deals damage if the player
    // moves or acts before the debuff falls. Unfortunately it doesn't look like there's
    // currently a log line for this, so the only way to check for this is to collect
    // the debuffs and then warn if a player takes an action during that time. Not worth it
    // for Normal.
    'O4N Standard Fire': '24BA',
    'O4N Buster Thunder': '24BE' // A cleaving tank buster

  },
  triggers: [{
    // Kills target if not cleansed
    id: 'O4N Doom',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Cleansers missed Doom!',
          de: 'Doom-Reinigung vergessen!',
          fr: 'N\'a pas été dissipé(e) du Glas !',
          ja: '死の宣告',
          cn: '没解死宣',
          ko: '죽음의 선고'
        }
      };
    }
  }, {
    // Short knockback from Exdeath
    id: 'O4N Vacuum Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '24B8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Room-wide AoE, freezes non-moving targets
    id: 'O4N Empowered Blizzard',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '4E6'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const o4n = (o4n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o4s.ts


 // TODO: taking the wrong color white/black antilight

// O4S - Deltascape 4.0 Savage
const o4s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV40Savage */.Z.DeltascapeV40Savage,
  damageWarn: {
    'O4S1 Vine Clearout': '240C',
    // circle of vines
    'O4S1 Zombie Breath': '240B',
    // tree exdeath conal
    'O4S1 Vacuum Wave': '23FE',
    // circle centered on exdeath
    'O4S2 Neo Vacuum Wave': '241D',
    // "out of melee"
    'O4S2 Death Bomb': '2431',
    // failed acceleration bomb
    'O4S2 Emptiness 1': '2421',
    // exaflares initial
    'O4S2 Emptiness 2': '2422' // exaflares moving

  },
  damageFail: {
    'O4S1 Black Hole Black Spark': '2407',
    // black hole catching you
    'O4S2 Edge Of Death': '2415',
    // standing between the two color lasers
    'O4S2 Inner Antilight': '244C',
    // inner laser
    'O4S2 Outer Antilight': '2410' // outer laser

  },
  shareWarn: {
    'O4S1 Fire III': '23F6' // spread explosion

  },
  shareFail: {
    'O4S1 Thunder III': '23FA' // tankbuster

  },
  triggers: [{
    id: 'O4S2 Decisive Battle',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2408',
      capture: false
    }),
    run: data => {
      data.isDecisiveBattleElement = true;
    }
  }, {
    id: 'O4S1 Vacuum Wave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '23FE',
      capture: false
    }),
    run: data => {
      data.isDecisiveBattleElement = false;
    }
  }, {
    id: 'O4S2 Almagest',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2417',
      capture: false
    }),
    run: data => {
      data.isNeoExdeath = true;
    }
  }, {
    id: 'O4S2 Blizzard III',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '23F8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Ignore unavoidable raid aoe Blizzard III.
    condition: data => !data.isDecisiveBattleElement,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Thunder III',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '23FD',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Only consider this during random mechanic after decisive battle.
    condition: data => data.isDecisiveBattleElement,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Petrified',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '262'
    }),
    mistake: (data, matches) => {
      // On Neo, being petrified is because you looked at Shriek, so your fault.
      if (data.isNeoExdeath) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      }; // On normal ExDeath, this is due to White Hole.

      return {
        type: 'warn',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'O4S2 Forked Lightning',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '242E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Beyond Death Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath;

      (_data$hasBeyondDeath = data.hasBeyondDeath) !== null && _data$hasBeyondDeath !== void 0 ? _data$hasBeyondDeath : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = true;
    }
  }, {
    id: 'O4S2 Beyond Death Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath2;

      (_data$hasBeyondDeath2 = data.hasBeyondDeath) !== null && _data$hasBeyondDeath2 !== void 0 ? _data$hasBeyondDeath2 : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = false;
    }
  }, {
    id: 'O4S2 Beyond Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasBeyondDeath) return;
      if (!data.hasBeyondDeath[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O4S2 Double Attack Collect',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '241C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    run: (data, matches) => {
      data.doubleAttackMatches = data.doubleAttackMatches || [];
      data.doubleAttackMatches.push(matches);
    }
  }, {
    id: 'O4S2 Double Attack',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '241C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: data => {
      var _arr$0$ability, _arr$;

      const arr = data.doubleAttackMatches;
      if (!arr) return;
      if (arr.length <= 2) return; // Hard to know who should be in this and who shouldn't, but
      // it should never hit 3 people.

      return {
        type: 'fail',
        text: `${(_arr$0$ability = (_arr$ = arr[0]) === null || _arr$ === void 0 ? void 0 : _arr$.ability) !== null && _arr$0$ability !== void 0 ? _arr$0$ability : ''} x ${arr.length}`
      };
    },
    run: data => delete data.doubleAttackMatches
  }]
};
/* harmony default export */ const o4s = (o4s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o5n.ts


 // TODO: Diabolic Wind (28B9) always seems to be 0x16 not 0x15.

// O5N - Sigmascape 1.0 Normal
const o5n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV10 */.Z.SigmascapeV10,
  damageWarn: {
    'O5N Wroth Ghost Encumber': '28AE',
    // squares that ghosts appear in
    'O5N Saintly Beam': '28AA' // chasing circles that destroy ghosts

  },
  triggers: [{
    id: 'O5N Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      ((_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {})[matches.target] = true;
      console.log(JSON.stringify(data.hasThrottle));
    }
  }, {
    id: 'O5N Throttle Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      var _data$hasThrottle2;

      if (!((_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 && _data$hasThrottle2[matches.target])) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O5N Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle3;

      ((_data$hasThrottle3 = data.hasThrottle) !== null && _data$hasThrottle3 !== void 0 ? _data$hasThrottle3 : data.hasThrottle = {})[matches.target] = false;
      console.log(JSON.stringify(data.hasThrottle));
    }
  }, {
    // Getting hit by a ghost without throttle (the mandatory post-chimney one).
    id: 'O5N Possess',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28AC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasThrottle4;

      return !((_data$hasThrottle4 = data.hasThrottle) !== null && _data$hasThrottle4 !== void 0 && _data$hasThrottle4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o5n = (o5n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o5s.ts


 // TODO: Diabolic Wind (28BD) always seems to be 0x16 not 0x15.

// O5S - Sigmascape 1.0 Savage
const o5s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV10Savage */.Z.SigmascapeV10Savage,
  damageWarn: {
    'O5S Wroth Ghost Encumber': '28B6',
    // squares appearing
    'O5S Saintly Bean': '28B4' // chasing lights

  },
  triggers: [{
    id: 'O5S Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      return ((_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {})[matches.target] = true;
    }
  }, {
    id: 'O5S Throttle Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      var _data$hasThrottle2;

      if (!((_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 && _data$hasThrottle2[matches.target])) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O5S Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle3;

      return ((_data$hasThrottle3 = data.hasThrottle) !== null && _data$hasThrottle3 !== void 0 ? _data$hasThrottle3 : data.hasThrottle = {})[matches.target] = false;
    }
  }, {
    // Getting hit by a ghost without throttle (the mandatory post-chimney one).
    id: 'O5S Possess',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28AC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasThrottle4;

      return !((_data$hasThrottle4 = data.hasThrottle) !== null && _data$hasThrottle4 !== void 0 && _data$hasThrottle4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o5s = (o5s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o6n.ts


// O6N - Sigmascape 2.0 Normal
const o6n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV20 */.Z.SigmascapeV20,
  damageWarn: {
    'O6N Earthquake': '2811',
    // failing to be in a plane
    'O6N Demonic Stone': '2847',
    // chasing circles
    'O6N Demonic Wave': '2831',
    // failing to be behind rock
    'O6N Demonic Spout 1': '2835',
    // pair of targeted circles (#1)
    'O6N Demonic Spout 2': '2837',
    // pair of targeted circles (#2)
    'O6N Featherlance': '2AE8',
    // blown away Easterly circles
    'O6N Intense Pain': '2AE7' // failing to spread for Demonic Pain tether

  },
  triggers: [{
    id: 'O6N Fire Resistance Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist;

      return ((_data$hasFireResist = data.hasFireResist) !== null && _data$hasFireResist !== void 0 ? _data$hasFireResist : data.hasFireResist = {})[matches.target] = true;
    }
  }, {
    id: 'O6N Fire Resistance Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist2;

      return ((_data$hasFireResist2 = data.hasFireResist) !== null && _data$hasFireResist2 !== void 0 ? _data$hasFireResist2 : data.hasFireResist = {})[matches.target] = false;
    }
  }, {
    // Flash Fire without Fire Resistance.
    id: 'O6N Flash Fire',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '280B'
    }),
    condition: (data, matches) => {
      var _data$hasFireResist3;

      return !((_data$hasFireResist3 = data.hasFireResist) !== null && _data$hasFireResist3 !== void 0 && _data$hasFireResist3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o6n = (o6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o6s.ts



// O6S - Sigmascape 2.0 Savage
const o6s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV20Savage */.Z.SigmascapeV20Savage,
  damageWarn: {
    'O6S Earthquake': '2810',
    // failing to be in a plane
    'O6S Rock Hard': '2812',
    // from portrayal of earth?
    'O6S Flash Torrent 1': '2AB9',
    // from portrayal of water??
    'O6S Flash Torrent 2': '280F',
    // from portrayal of water??
    'O6S Easterly Featherlance': '283E',
    // blown away Easterly circles
    'O6S Demonic Wave': '2830',
    // failing to be behind rock
    'O6S Demonic Spout': '2836',
    // pair of targeted circle'
    'O6S Demonic Stone 1': '2844',
    // chasing circle initial
    'O6S Demonic Stone 2': '2845',
    // chasing circle repeated
    'O6S Intense Pain': '283A' // failing to spread for Demonic Pain tether

  },
  shareWarn: {
    'O6S The Price': '2826' // exploding Last Kiss tankbuster debuff

  },
  triggers: [{
    id: 'O6S Fire Resistance Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist;

      return ((_data$hasFireResist = data.hasFireResist) !== null && _data$hasFireResist !== void 0 ? _data$hasFireResist : data.hasFireResist = {})[matches.target] = true;
    }
  }, {
    id: 'O6S Fire Resistance Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist2;

      return ((_data$hasFireResist2 = data.hasFireResist) !== null && _data$hasFireResist2 !== void 0 ? _data$hasFireResist2 : data.hasFireResist = {})[matches.target] = false;
    }
  }, {
    // Flash Fire without Fire Resistance.
    id: 'O6S Flash Fire',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '280A'
    }),
    condition: (data, matches) => {
      var _data$hasFireResist3;

      return !((_data$hasFireResist3 = data.hasFireResist) !== null && _data$hasFireResist3 !== void 0 && _data$hasFireResist3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look away; does damage if failed.
    id: 'O6S Divine Lure',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2822',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o6s = (o6s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o7n.ts

// O7N - Sigmascape 3.0 Normal
const o7n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV30 */.Z.SigmascapeV30,
  damageWarn: {
    'O7N Magitek Ray': '276B',
    // untelegraphed frontal line
    'O7N Ink': '275D',
    // Initial Ultros targeted circles
    'O7N Tentacle': '275F',
    // Tentacle simulation targeted circles
    'O7N Wallop': '2760',
    // Ultros tentacles attacking
    'O7N Chain Cannon': '2770',
    // baited airship add cannon
    'O7N Missile Explosion': '2765',
    // Hitting a missile
    'O7N Bibliotaph Deep Darkness': '29BF',
    // giant donut
    'O7N Dadaluma Aura Cannon': '2767',
    // large line aoe
    'O7N Guardian Diffractive Laser': '2761',
    // initial Air Force centered circle on Guardian
    'O7N Air Force Diffractive Laser': '273F',
    // Air Force add large conal
    'O7N Interdimensional Explosion': '2763' // Failed bomb (either wrong side or ignored)

  },
  damageFail: {
    'O7N Super Chakra Burst': '2769' // Missed Dadaluma tower (hits everybody)

  },
  gainsEffectFail: {
    'O7N Shocked': '5DA' // touching arena edge

  }
};
/* harmony default export */ const o7n = (o7n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o7s.ts


// TODO: Ink (277D) seems to always be 0x16
// TODO: Failing Virus?
// TODO: failing Interdimensional Bombs?
// O7S - Sigmascape 3.0 Savage
const o7s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV30Savage */.Z.SigmascapeV30Savage,
  damageWarn: {
    'O7S Magitek Ray': '2788',
    // front line laser
    'O7S Lightning Bomb Explosion': '278E',
    // baited orbs
    'O7S Chain Cannon': '278F',
    // damage from baited aerial attack
    'O7S Tentacle': '277E',
    // tentacles appearing
    'O7S Tentacle Wallop': '277F',
    // tentacles attacking
    'O7S Air Force Diffractive Laser': '2740',
    // Air Force adds conal
    'O7N Guardian Diffractive Laser': '2780',
    // initial Air Force centered circle on Guardian
    'O7S The Heat': '2777',
    // explosion from searing wind
    'O7S Super Chakra Burst': '2786' // failing Dadaluma towers

  },
  damageFail: {
    'O7S Missile': '2782'
  },
  gainsEffectFail: {
    'O7S Shocked': '5DA' // touching arena edge

  },
  shareWarn: {
    'O7S Aura Cannon': '2784' // Dadaluma line aoe

  },
  triggers: [{
    id: 'O7S Stoneskin',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2AB5'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.source,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o7s = (o7s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o8n.ts



// O8N - Sigmascape 4.0 Normal
const o8n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV40 */.Z.SigmascapeV40,
  damageWarn: {
    'O8N Blizzard Blitz 1': '2918',
    'O8N Blizzard Blitz 2': '2914',
    'O8N Thrumming Thunder 1': '291D',
    'O8N Thrumming Thunder 2': '291C',
    'O8N Thrumming Thunder 3': '291B',
    'O8N Wave Cannon': '2928',
    // telegraphed line aoes
    'O8N Revolting Ruin': '2923',
    // large 180 cleave after Timely Teleport
    'O8N Intemperate Will': '292A',
    // east 180 cleave
    'O8N Gravitational Wave': '292B' // west 180 cleave

  },
  shareWarn: {
    'O8N Flagrant Fire Spread': '291F' // true spread markers

  },
  soloWarn: {
    'O8N Flagrant Fire Stack': '2920' // fake spread marker

  },
  triggers: [{
    // Look away; does damage if failed.
    id: 'O8N Indolent Will',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '292C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look towards; does damage if failed.
    id: 'O8N Ave Maria',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '292B',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O8N Shockwave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2927'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O8N Aero Assault',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2924'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o8n = (o8n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o8s.ts



// TODO: failing meteor towers?
// O8S - Sigmascape 4.0 Savage
const o8s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV40Savage */.Z.SigmascapeV40Savage,
  damageWarn: {
    'O8S1 Thrumming Thunder 1': '28CB',
    'O8S1 Thrumming Thunder 2': '28CC',
    'O8S1 Thrumming Thunder 3': '28CD',
    'O8S1 Thrumming Thunder 4': '2B31',
    'O8S1 Thrumming Thunder 5': '2B2F',
    'O8S1 Thrumming Thunder 6': '2B30',
    'O8S1 Blizzard Blitz 1': '28C4',
    'O8S1 Blizzard Blitz 2': '2BCA',
    'O8S1 Inexorable Will': '28DA',
    // ground circles
    'O8S1 Revolting Ruin': '28D5',
    // large 180 cleave after Timely Teleport
    'O8S1 Intemperate Will': '28DF',
    // east 180 cleave
    'O8S1 Gravitational Wave': '28DE',
    // west 180 cleave
    'O8S2 Blizzard III 1': '2908',
    // celestriad center circle
    'O8S2 Blizzard III 2': '2909',
    // celestriad donut
    'O8S2 Thunder III': '290A',
    // celestriad cross lines
    'O8S2 Trine 1': '290E',
    // eating the golden dorito
    'O8S2 Trine 2': '290F',
    // eating the big golden dorito
    'O8S2 Meteor': '2903',
    // chasing puddles during 2nd forsaken (Meteor 2904 = tower)
    'O8S2 All Things Ending 1': '28F0',
    // Futures Numbered followup
    'O8S2 All Things Ending 2': '28F2',
    // Pasts Forgotten followup
    'O8S2 All Things Ending 3': '28F6',
    // Future's End followup
    'O8S2 All Things Ending 4': '28F9',
    // Past's End followup
    'O8S2 Wings Of Destruction 1': '28FF',
    // half cleave
    'O8S2 Wings Of Destruction 2': '28FE' // half cleave

  },
  damageFail: {
    'O8S2 The Mad Head Big Explosion': '28FD' // not touching skull

  },
  shareWarn: {
    'O8S1 Vitrophyre': '28E2',
    // yellow right tether that must be solo (or knockback)
    'O8S1 Flagrant Fire Spread': '28CF',
    'O8S2 Fire III Spread': '290B',
    // celestriad spread
    'O8S2 The Mad Head Explosion': '28FC' // skull tethers

  },
  shareFail: {
    'O8S1 Hyperdrive': '28E8',
    // phase 1 tankbuster
    'O8S2 Hyperdrive': '229128E8',
    // phase 2 tankbuster
    'O8S2 Wings Of Destruction': '2901' // close/far tank busters

  },
  soloWarn: {
    'O8S1 Flagrant Fire Stack': '28D0',
    'O8S1 Gravitas': '28E0',
    // purple left tether that must be shared, leaving a puddle
    'O8S1 Indomitable Will': '28D9',
    // 4x stack markers
    'O8S2 Fire III Stack': '290C' // celestriad stack

  },
  triggers: [{
    // Look away; does damage if failed.
    id: 'O8S Indolent Will',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28E4',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look towards; does damage if failed.
    id: 'O8S Ave Maria',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28E3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O8S Shockwave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '28DB'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O8S Aero Assault',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '28D6'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o8s = (o8s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o9n.ts

// O9N - Alphascape 1.0 Normal
const o9n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV10 */.Z.AlphascapeV10,
  damageWarn: {
    'O9N Damning Edict': '3150',
    // huge 180 frontal cleave
    'O9N Stray Spray': '316C',
    // Dynamic Fluid debuff donut explosion
    'O9N Stray Flames': '316B',
    // Entropy debuff circle explosion
    'O9N Knockdown Big Bang': '3160',
    // big circle where Knockdown marker dropped
    'O9N Fire Big Bang': '315F',
    // ground circles during fire phase
    'O9N Shockwave': '3153',
    // Longitudinal/Latiudinal Implosion
    'O9N Chaosphere Fiendish Orbs Orbshadow 1': '3162',
    // line aoes from Earth phase orbs
    'O9N Chaosphere Fiendish Orbs Orbshadow 2': '3163' // line aoes from Earth phase orbs

  }
};
/* harmony default export */ const o9n = (o9n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o9s.ts


const o9s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV10Savage */.Z.AlphascapeV10Savage,
  damageWarn: {
    'O9S Shockwave': '3174',
    // Longitudinal/Latiudinal Implosion
    'O9S Damning Edict': '3171',
    // huge 180 frontal cleave
    'O9S Knockdown Big Bang': '3181',
    // big circle where Knockdown marker dropped
    'O9S Fire Big Bang': '3180',
    // ground circles during fire phase
    'O9S Chaosphere Fiendish Orbs Orbshadow 1': '3183',
    // line aoes from Earth phase orbs
    'O9S Chaosphere Fiendish Orbs Orbshadow 2': '3184' // line aoes from Earth phase orbs

  },
  triggers: [{
    // Facing the wrong way for Headwind/Tailwaind
    id: 'O9S Cyclone Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O9S Headwind Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '642'
    }),
    run: (data, matches) => {
      var _data$hasHeadwind;

      return ((_data$hasHeadwind = data.hasHeadwind) !== null && _data$hasHeadwind !== void 0 ? _data$hasHeadwind : data.hasHeadwind = {})[matches.target] = true;
    }
  }, {
    id: 'O9S Headwind Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '642'
    }),
    run: (data, matches) => {
      var _data$hasHeadwind2;

      return ((_data$hasHeadwind2 = data.hasHeadwind) !== null && _data$hasHeadwind2 !== void 0 ? _data$hasHeadwind2 : data.hasHeadwind = {})[matches.target] = false;
    }
  }, {
    id: 'O9S Primordial Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '645'
    }),
    run: (data, matches) => {
      var _data$hasPrimordial;

      return ((_data$hasPrimordial = data.hasPrimordial) !== null && _data$hasPrimordial !== void 0 ? _data$hasPrimordial : data.hasPrimordial = {})[matches.target] = true;
    }
  }, {
    id: 'O9S Primordial Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '645'
    }),
    run: (data, matches) => {
      var _data$hasPrimordial2;

      return ((_data$hasPrimordial2 = data.hasPrimordial) !== null && _data$hasPrimordial2 !== void 0 ? _data$hasPrimordial2 : data.hasPrimordial = {})[matches.target] = false;
    }
  }, {
    // Entropy debuff circle explosion.
    // During the midphase, tanks/healers need to clear headwind with Entropy circle and
    // dps need to clear Primordial Crust with Dynamic Fluid donut.  In case there's
    // some other strategy, just check both debuffs.
    id: 'O9S Stray Flames',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318C'
    }),
    condition: (data, matches) => {
      var _data$hasHeadwind3, _data$hasPrimordial3;

      return !((_data$hasHeadwind3 = data.hasHeadwind) !== null && _data$hasHeadwind3 !== void 0 && _data$hasHeadwind3[matches.target]) && !((_data$hasPrimordial3 = data.hasPrimordial) !== null && _data$hasPrimordial3 !== void 0 && _data$hasPrimordial3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Dynamic Fluid debuff donut explosion.
    // See Stray Flames note above.
    id: 'O9S Stray Spray',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318D'
    }),
    condition: (data, matches) => {
      var _data$hasHeadwind4, _data$hasPrimordial4;

      return !((_data$hasHeadwind4 = data.hasHeadwind) !== null && _data$hasHeadwind4 !== void 0 && _data$hasHeadwind4[matches.target]) && !((_data$hasPrimordial4 = data.hasPrimordial) !== null && _data$hasPrimordial4 !== void 0 && _data$hasPrimordial4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o9s = (o9s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/byakko.ts

// Byakko Normal
const byakko_triggerSet = {
  zoneId: zone_id/* default.TheJadeStoa */.Z.TheJadeStoa,
  damageWarn: {
    'Byakko Sweep the Leg': '2A2E',
    // 270 degree get behind
    'Byakko Aratama Force Aratama': '2A48',
    // popping Unrelenting Anguish bubbles
    'Byakko Fire and Lightning': '2A2C',
    // large red/purple line aoe
    'Byakko Hakutei Aratama': '2A29',
    // targeted ground circle during tiger phase
    'Byakko Hundredfold Havoc 1': '2A38',
    // lightning puddles initial
    'Byakko Hundredfold Havoc 2': '2A39',
    // lightning puddles moving
    'Byakko Distant Clap': '2A30' // donut

  },
  damageFail: {
    'Byakko Aratama Midphase': '2A42',
    // popping a bubble during midphase
    'Byakko Sweep The Leg': '2A46',
    // donut during midphase
    'Byakko Imperial Guard': '2A43' // line aoe from tiger during midphase

  },
  gainsEffectWarn: {
    'Byakko Bleeding': '111' // standing in Hakutei's Aratama circle (2A29)

  },
  shareWarn: {
    'Byakko Bombogenesis': '2A3B' // red spread marker

  }
};
/* harmony default export */ const byakko = (byakko_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/byakko-ex.ts



// Byakko Extreme
const byakko_ex_triggerSet = {
  zoneId: zone_id/* default.TheJadeStoaExtreme */.Z.TheJadeStoaExtreme,
  damageWarn: {
    // Popping Unrelenting Anguish bubbles
    'ByaEx Aratama': '27F6',
    // Stepping in growing orb
    'ByaEx Vacuum Claw': '27E9',
    // Lightning Puddles
    'ByaEx Hunderfold Havoc 1': '27E5',
    'ByaEx Hunderfold Havoc 2': '27E6'
  },
  damageFail: {
    'ByaEx Sweep The Leg': '27DB',
    'ByaEx Fire and Lightning': '27DE',
    'ByaEx Distant Clap': '27DD',
    // Midphase line attack
    'ByaEx Imperial Guard': '27F1'
  },
  triggers: [{
    // Pink bubble collision
    id: 'ByaEx Ominous Wind',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '27EC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'bubble collision',
          de: 'Blasen sind zusammengestoßen',
          fr: 'Collision avec une bulle',
          ja: '衝突',
          cn: '相撞',
          ko: '장판 겹쳐서 터짐'
        }
      };
    }
  }]
};
/* harmony default export */ const byakko_ex = (byakko_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/lakshmi.ts



// Lakshmi Normal
const lakshmi_triggerSet = {
  zoneId: zone_id/* default.Emanation */.Z.Emanation,
  damageWarn: {
    'Lakshmi Blissful Spear Cross': '248B',
    // blissful arrow's cross lines (called Blissful Spear)
    'Lakshmi Blissful Spear Cross Chanchala': '248C' // blissful arrow's cross lines (called Blissful Spear)

  },
  gainsEffectWarn: {
    'Lakshmi Bleeding': '140' // standing in expanding blue flower circle

  },
  gainsEffectFail: {
    'Lakshmi Dreaming Kshatriya Terror': '42' // failing Inner Demons from initial add

  },
  shareWarn: {
    'Lakshmi Blissful Arrow': '2489',
    // cross marker dropping
    'Lakshmi Blissful Arrow Chanchala': '248A',
    // cross marker dropping
    'Lakshmi Blissful Spear': '2494',
    // flower circle dropping
    'Lakshmi Blissful Spear Chanchala': '2495',
    // flower circle dropping
    'Lakshmi The Path of Light': '24A1' // OT cleave

  },
  soloWarn: {
    'Lakshmi The Pall of Light': '2491' // stack

  },
  triggers: [{
    id: 'Lakshmi Divine Denial Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2485',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const lakshmi = (lakshmi_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/lakshmi-ex.ts


 // Note: flower circle in extreme is called Blissful Hammer, whereas in normal
// both the cross from the Blissful Arrow and the flower circle are both called
// Blissful Spear.

// Lakshmi Extreme
const lakshmi_ex_triggerSet = {
  zoneId: zone_id/* default.EmanationExtreme */.Z.EmanationExtreme,
  damageWarn: {
    'LakshmiEx Blissful Spear Cross': '2151',
    // blissful arrow's cross lines (called Blissful Spear)
    'LakshmiEx Blissful Spear Cross Chanchala': '2152' // blissful arrow's cross lines (called Blissful Spear)

  },
  gainsEffectWarn: {
    'LakshmiEx Bleeding': '140' // standing in expanding blue flower circle

  },
  gainsEffectFail: {
    'LakshmiEx Dreaming Kshatriya Terror': '42' // failing Inner Demons from initial add

  },
  shareWarn: {
    'LakshmiEx Dreaming Kshatriya Tail Slap': '258C',
    // untelegraphed no cast bar cleave
    'LakshmiEx Blissful Arrow': '214F',
    // cross marker dropping
    'LakshmiEx Blissful Arrow Chanchala': '2150',
    // cross marker dropping
    'LakshmiEx Blissful Hammer': '21DC',
    // flower circle dropping
    'LakshmiEx Blissful Hammer Chanchala': '21DD',
    // flower circle droping
    'LakshmiEx The Path of Light': '215A',
    // OT cleave
    'LakshmiEx The Path of Light Chanchala': '215B' // OT cleave

  },
  soloWarn: {
    'LakshmiEx The Pall of Light': '215C' // stack

  },
  triggers: [{
    id: 'LakshmiEx Divine Denial Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2149',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const lakshmi_ex = (lakshmi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/rathalos.ts

// Rathalos Normal
const rathalos_triggerSet = {
  zoneId: zone_id/* default.TheGreatHunt */.Z.TheGreatHunt,
  damageWarn: {
    'Rathalos Mangle 1': '2CB9',
    // first phase frontal conal
    'Rathalos Mangle 2': '2CC2',
    // second phase conal swipe
    'Rathalos Rush 1': '2CBC',
    // first phase charge attack
    'Rathalos Rush 2': '2CC0',
    // second phase charge attack, gives poison
    'Rathalos Tail Smash': '286B',
    // first phase left/rear conal, paired with Mangle (2CB9)
    'Rathalos Tail Swing': '2CBB',
    // first phase right side attack
    'Rathalos Flaming Recoil 1': '2CBE',
    // frontal conal + knockback
    'Rathalos Flaming Recoil 2': '2CBF',
    // frontal conal + knockback
    'Rathalos Steppe Sheep Lullaby': '287B',
    // centered circle
    'Rathalos Steppe Yamaa Head Butt': '287C',
    // line aoe
    'Rathalos Steppe Coeurl Wide Blaster': '287D',
    // very large conal
    'Rathalos Garula Rush': '287F',
    // line charge into the arena
    'Rathalos Sweeping Flames': '2CC1' // second phase frontal conal

  },
  shareFail: {
    'Rathalos Garula Heave': '287E' // untelegraphed conal cleave

  },
  soloWarn: {
    'Rathalos Fireball': '2CBA' // second phase stack that leaves a fire puddle

  }
};
/* harmony default export */ const rathalos = (rathalos_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/rathalos-ex.ts

// Rathalos Extreme
const rathalos_ex_triggerSet = {
  zoneId: zone_id/* default.TheGreatHuntExtreme */.Z.TheGreatHuntExtreme,
  damageWarn: {
    'RathalosEx Mangle 1': '285C',
    // first phase frontal 90 degree conal
    'RathalosEx Mangle 2': '2CB7',
    // second phase conal swipe
    'RathalosEx Rush 1': '2A3D',
    // first phase charge attack
    'RathalosEx Rush 2': '2CB5',
    // second phase charge attack, gives poison
    'RathalosEx Tail Smash': '2854',
    // first phase left/rear conal, paired with Mangle (285C)
    'RathalosEx Tail Swing': '2A3C',
    // first phase right side attack
    'RathalosEx Flaming Recoil 1': '2CB3',
    // frontal conal + knockback
    'RathalosEx Flaming Recoil 2': '2CB4',
    // frontal conal + knockback
    'RathalosEx Steppe Sheep Lullaby': '2864',
    // centered circle
    'RathalosEx Steppe Yamaa Head Butt': '2865',
    // line aoe
    'RathalosEx Steppe Coeurl Wide Blaster': '2866',
    // very large conal
    'RathalosEx Garula Rush': '2868',
    // line charge into the arena
    'RathalosEx Sweeping Flames': '2CB6' // second phase frontal conal

  },
  shareFail: {
    'RathalosEx Garula Heave': '2867' // untelegraphed conal cleave

  },
  soloWarn: {
    'RathalosEx Fireball 1': '2860',
    // second phase stack triple fireball initial
    'RathalosEx Fireball 2': '2D0B' // second phase stack triple fireball second and third

  }
};
/* harmony default export */ const rathalos_ex = (rathalos_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/seiryu.ts

// Seiryu Normal
const seiryu_triggerSet = {
  zoneId: zone_id/* default.TheWreathOfSnakes */.Z.TheWreathOfSnakes,
  damageWarn: {
    'Seiryu Onmyo Sigil': '3A07',
    // centered "get out" circle
    'Seiryu Serpent-Eye Sigil': '3A08',
    // donut
    'Seiryu Fortune-Blade Sigil': '3806',
    // Kuji-Kiri (37E1) lines
    'Seiryu Iwa-No-Shiki 100-Tonze Swing': '3C1E',
    // centered circles (tank tethers in extreme)
    'Seiryu Ten-No-Shiki Yama-Kagura': '3813',
    // blue lines during midphase / final phase adds
    'Seiryu Iwa-No-Shiki Kanabo': '3C20',
    // unpassable tether which targets a large conal cleave
    'Seiryu Great Typhoon 1': '3810',
    // outside ring of water during Coursing River
    'Seiryu Great Typhoon 2': '3811',
    // outside ring of water during Coursing River
    'Seiryu Great Typhoon 3': '3812',
    // outside ring of water during Coursing River
    'Seiryu Yama-No-Shiki Handprint 1': '3707',
    // half arena cleave
    'Seiryu Yama-No-Shiki Handprint 2': '3708',
    // half arena cleave
    'Seiryu Force Of Nature': '3809',
    // standing in the middle circle during knockback (380A)
    'Seiryu Serpent\'s Jaws': '3A8D' // failing towers

  },
  shareWarn: {
    'Seiryu Serpent Descending': '3804',
    // spread markers
    'Seiryu Aka-No-Shiki Red Rush': '3C1D' // tether charge

  },
  shareFail: {
    'Seiryu Infirm Soul': '37FD' // tank buster circular cleave

  },
  soloWarn: {
    'Seiryu Ao-No-Shiki Blue Bolt': '3C1C',
    // tether share
    'Seiryu Forbidden Arts 1': '3C82',
    // line stack share hit 1
    'Seiryu Forbidden Arts 2': '3C72' // line stack share hit 2

  }
};
/* harmony default export */ const seiryu = (seiryu_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/seiryu-ex.ts

// Seiryu Extreme
const seiryu_ex_triggerSet = {
  zoneId: zone_id/* default.TheWreathOfSnakesExtreme */.Z.TheWreathOfSnakesExtreme,
  damageWarn: {
    'SeiryuEx Onmyo Sigil 1': '3A01',
    // centered "get out" circle (phase 1)
    'SeiryuEx Onmyo Sigil 2': '3A03',
    // centered "get out" circle (phase 2 first)
    'SeiryuEx Onmyo Sigil 3': '3A06',
    // centered "get out" circle (phase 2 second)
    'SeiryuEx Serpent-Eye Sigil 1': '3A05',
    // donut (phase 2 first)
    'SeiryuEx Serpent-Eye Sigil 2': '3A04',
    // donut (phase 2 second)
    'SeiryuEx Fortune-Blade Sigil': '37E2',
    // Kuji-Kiri (37E1) lines
    'SeiryuEx Calamity-Blade Sigil': '37E3',
    // Kuji-Kiri (37E1) follow-up lines
    'SeiryuEx Iwa-No-Shiki 100-Tonze Swing': '37ED',
    // centered circles
    'SeiryuEx Ten-No-Shiki Yama-Kagura': '3C21',
    // blue lines during midphase / final phase adds
    'SeiryuEx Numa-No-Shiki Stoneskin': '37F4',
    // failing to silence add
    'SeiryuEx Great Typhoon 1': '37F8',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 2': '37F9',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 3': '37FA',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 4': '37FB',
    // outside ring of water during Coursing River
    'SeiryuEx Yama-No-Shiki Handprint 1': '3707',
    // half arena cleave
    'SeiryuEx Yama-No-Shiki Handprint 2': '3708',
    // half arena cleave
    'SeiryuEx Force Of Nature': '37EA',
    // standing in the middle circle during knockback (380A)
    'SeiryuEx Serpent Descending Circle': '37DE',
    // baited circles with towers
    'SeiryuEx Serpent\'s Jaws': '37E0' // failing towers

  },
  shareWarn: {
    'SeiryuEx Serpent Descending Spread': '37DD',
    // spread markers
    'SeiryuEx Aka-No-Shiki Red Rush': '37F1',
    // tether charge
    'SeiryuEx Iwa-No-Shiki Kanabo': '37EE' // tether which targets a large conal cleave

  },
  shareFail: {
    'SeiryuEx Infirm Soul': '37D4' // tank buster circular cleave

  },
  soloWarn: {
    'SeiryuEx Ao-No-Shiki Blue Bolt': '37F0',
    // tether share
    'SeiryuEx Forbidden Arts 1': '37C7',
    // line stack share hit 1
    'SeiryuEx Forbidden Arts 2': '37C8' // line stack share hit 2

  }
};
/* harmony default export */ const seiryu_ex = (seiryu_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/shinryu.ts



// Shinryu Normal
const shinryu_triggerSet = {
  zoneId: zone_id/* default.TheRoyalMenagerie */.Z.TheRoyalMenagerie,
  damageWarn: {
    'Shinryu Akh Rhai': '1FA6',
    // Sky lasers alongside Akh Morn.
    'Shinryu Blazing Trail': '221A',
    // Rectangle AoEs, intermission adds.
    'Shinryu Collapse': '2218',
    // Circle AoEs, intermission adds
    'Shinryu Dragonfist': '24F0',
    // Giant punchy circle in the center.
    'Shinryu Earth Breath': '1F9D',
    // Conal attacks that aren't actually Earth Shakers.
    'Shinryu Gyre Charge': '1FA8',
    // Green dive bomb attack.
    'Shinryu Spikesicle': '1FA`',
    // Blue-green line attacks from behind.
    'Shinryu Tail Slap': '1F93' // Red squares indicating the tail's landing spots.

  },
  shareWarn: {
    'Shinryu Levinbolt': '1F9C'
  },
  triggers: [{
    // Icy floor attack.
    id: 'Shinryu Diamond Dust',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'Runter gerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐'
        }
      };
    }
  }, {
    id: 'Shinryu Tidal Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1F8B',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Knockback from center.
    id: 'Shinryu Aerial Blast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1F90',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const shinryu = (shinryu_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/shinryu-ex.ts


 // TODO: Hellfire (25DB) without Fire Resistance Up (208).
// TODO: Levinbolt (25EB) while having Lightning Resistance Down II (4EC).
// TODO: Hypernova (25E9) while not having Deep Freeze (4E6) or Fire Resistance Up (208).
// TODO: Doom (D2) expiring.

// Shinryu Extreme
const shinryu_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladShinryusDomain */.Z.TheMinstrelsBalladShinryusDomain,
  damageWarn: {
    'ShinryuEx Burning Chains': '2602',
    // not breaking chains fast enough
    'ShinryuEx Icicle Icicle Impact': '25EF',
    // icicles landing
    'ShinryuEx Icicle Spikesicle': '25F0',
    // icicle dash
    'ShinryuEx Tail Slap': '25E2',
    // tail add appearing
    'ShinryuEx Dragonfist': '2611',
    // giant punchy circle in the center.
    'ShinryuEx Gyre Charge': '2603',
    // phase 1 large dive attack
    'ShinryuEx Ginryu Fireball': '260B',
    // targeted circle during add phase
    'ShinryuEx Hakkinryu Blazing Trail': '2609',
    // wide line during add phase
    'ShinryuEx Tail Spit': '1DD1',
    // blue puck during knockback
    'ShinryuEx Aetherial Ray': '2618',
    // lasers while running along the tail
    'ShinryuEx Levinbolt': '2725',
    // baited lightning during final phase
    'ShinryuEx Wormwail': '2648',
    // donut attack
    'ShinryuEx Benighting Breath': '264A' // 90 degree conal attack

  },
  shareWarn: {
    'ShinryuEx Levinbolt': '25EA',
    // untelegraphed lightning spread
    'ShinryuEx Earth Breath': '25ED' // earthshaker-esque conal attacks

  },
  soloWarn: {
    'ShinryuEx Hypernova': '25E9',
    // stack in puddle damage
    'ShinryuEx Atomic Ray': '264D' // pair stack markers in final phase

  },
  triggers: [{
    // Icy floor attack.
    id: 'ShinryuEx Diamond Dust',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'Runter gerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐'
        }
      };
    }
  }, {
    id: 'ShinryuEx Tidal Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '25DA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Knockback from center.
    id: 'Shinryu Aerial Blast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '25DF',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const shinryu_ex = (shinryu_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/susano.ts

// Susano Normal
const susano_triggerSet = {
  zoneId: zone_id/* default.ThePoolOfTribute */.Z.ThePoolOfTribute,
  damageWarn: {
    'Susano Rasen Kaikyo': '201E',
    // circles
    'Susano Seasplitter 1': '2028',
    // knockback + skinny line safe zone
    'Susano Seasplitter 2': '2029',
    // knockback + skinny line safe zone
    'Susano Seasplitter 3': '202A',
    // knockback + skinny line safe zone
    'Susano Seasplitter 4': '202B',
    // knockback + skinny line safe zone
    'Susano Dark Cloud The Parting Clouds': '259F' // purple line aoes from clouds

  },
  damageFail: {
    'Susano Ame-No-Murakumo': '218C',
    // standing in the red line after midphase
    'Susano Ama-No-Iwato The Sealed Gate': '2025' // not killing the rock jails in time

  },
  shareWarn: {
    'Susano Dark Levin Shock': '2043',
    // orbs during midphase
    'Susano Stormsplitter': '2023' // tank buster cleave

  },
  soloWarn: {
    'Susano Brightstorm': '2020' // stack marker

  }
};
/* harmony default export */ const susano = (susano_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/susano-ex.ts

// Susano Extreme
const susano_ex_triggerSet = {
  zoneId: zone_id/* default.ThePoolOfTributeExtreme */.Z.ThePoolOfTributeExtreme,
  damageWarn: {
    'SusanoEx Seasplitter 1': '2038',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 2': '2039',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 3': '203A',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 4': '203B',
    // knockback + skinny line safe zone
    'SusanoEx Rasen Kaikyo': '202E',
    // circles
    'SusanoEx Churning': '203F',
    // not stopping
    'SusanoEx Thunderhead The Parting Clouds': '2041' // purple lightning line

  },
  damageFail: {
    'SusanoEx Ame-No-Murakumo': '218C',
    // standing in red line after midphase
    'SusanoEx Ama-No-Iwato The Sealed Gate': '2035' // not killing the rock jails in time

  },
  shareWarn: {
    'SusanoEx Dark Levin Shock': '2044',
    // midphase orb
    'SusanoEx Stormsplitter': '2033' // tank buster lceave

  },
  soloWarn: {
    'SusanoEx Brightstorm': '2030' // stack marker

  }
};
/* harmony default export */ const susano_ex = (susano_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/suzaku.ts



// Suzaku Normal
const suzaku_triggerSet = {
  zoneId: zone_id/* default.HellsKier */.Z.HellsKier,
  damageWarn: {
    'Suzaku Normal Ashes To Ashes': '321F',
    // Scarlet Lady add, raidwide explosion if not killed in time
    'Suzaku Normal Fleeting Summer': '3223',
    // Cone AoE (randomly targeted)
    'Suzaku Normal Wing And A Prayer': '3225',
    // Circle AoEs from unkilled plumes
    'Suzaku Normal Phantom Half': '3233',
    // Giant half-arena AoE follow-up after tank buster
    'Suzaku Normal Well Of Flame': '3236',
    // Large rectangle AoE (randomly targeted)
    'Suzaku Normal Hotspot': '3238',
    // Platform fire when the runes are activated
    'Suzaku Normal Swoop': '323B',
    // Star cross line AoEs
    'Suzaku Normal Burn': '323D' // Tower mechanic failure on Incandescent Interlude (party failure, not personal)

  },
  shareWarn: {
    'Suzaku Normal Rekindle': '3235' // Purple spread circles

  },
  triggers: [{
    id: 'Suzaku Normal Ruthless Refrain',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3230',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '낙사'
        }
      };
    }
  }]
};
/* harmony default export */ const suzaku = (suzaku_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/suzaku-ex.ts


 // TODO: Rekindle (32E0) hitting multiple adds, any other players,
// or hitting adds before they've been killed once is a mistake.
// However, there is a point where it should hit one add in the
// beginning. This also happens later in the fight too, where it
// should not hit anybody else, but unfortunately also counts as
// hitting multiple people when it hits Suzaku.  So, there's really
// not any good way to write a mistake trigger for this ability.
// TODO: what is getting hit by an orb during Close-Quarter Crescendo?

// Suzaku Extreme
const suzaku_ex_triggerSet = {
  zoneId: zone_id/* default.HellsKierExtreme */.Z.HellsKierExtreme,
  damageWarn: {
    'SuzakuEx Rout': '32F0',
    // untargetable phase 1 charge across the arena
    'SuzakuEx Fleeting Summer': '32D3',
    // targeted conal
    'SuzakuEx Scarlet Tail Feather Wing And A Prayer': '32D4',
    // circle aoe from unkilled plume
    'SuzakuEx Scarlet Plume Wing And A Prayer': '3244',
    // circle aoe from unkilled plume
    'SuzakuEx Ashes To Ashes': '32D0',
    // Scarlet Lady add, raidwide explosion if not killed in time
    'SuzakuEx Well Of Flame': '32E1',
    // targeted wide line aoe
    'SuzakuEx Hotspot': '32E2' // platform fire when the runes are activated

  },
  damageFail: {
    'SuzakuEx Immolate': '32E6',
    // Tower mechanic failure on Incadescent Interlude (party failure, not personal)
    'SuzakuEx Phantom Flurry': '32DE' // "phantom half" final hit of Phantom Flurry

  },
  soloWarn: {
    'SuzakuEx Scathing Net': '3243' // stack marker

  },
  triggers: [{
    id: 'SuzakuEx Ruthless Refrain',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '32DB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'SuzakuEx Mesmerizing Melody',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '32DA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const suzaku_ex = (suzaku_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/tsukuyomi.ts


// Tsukuyomi Normal
const tsukuyomi_triggerSet = {
  zoneId: zone_id/* default.CastrumFluminis */.Z.CastrumFluminis,
  damageWarn: {
    'Tsukuyomi Steel Of The Underworld': '2BE7',
    // large targeted telegraph cleave during fans
    'Tsukuyomi Midnight Haze To Ashes': '2BEA',
    // not killing clouds in time
    'Tsukuyomi Dancing Fan Tsuki-No-Maiogi': '2BED',
    // fan circle aoe
    'Tsukuyomi Moonlight Lunar Halo': '2BE4',
    // donut from orbs during selenomancy
    'Tsukuyomi Dark Blade': '2BF9',
    // right-side cleave
    'Tsukuyomi Bright Blade': '2BFA' // left side cleave

  },
  shareFail: {
    'Tsukuyomi Torment Unto Death': '2BE3' // tank buster conal cleave

  },
  soloWarn: {
    'Tsukuyomi Lead Of The Underworld': '2BE6',
    // line stack marker
    'Tsukuyomi Lunacy 1': '2BFB',
    // 3-4x stack marker
    'Tsukuyomi Lunacy 2': '2BFC' // 3-4x stack marker

  },
  triggers: [{
    id: 'Tsukuyomi Moonlit',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '602',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Tsukuyomi Moonshadowed',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '603',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const tsukuyomi = (tsukuyomi_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/tsukuyomi-ex.ts


// Tsukuyomi Extreme
const tsukuyomi_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladTsukuyomisPain */.Z.TheMinstrelsBalladTsukuyomisPain,
  damageWarn: {
    'TsukuyomiEx Moonlight Lunar Halo': '2BD6',
    // donut from orbs in final phase
    'TsukuyomiEx Moonfall': '2BD1',
    // meteor drop big circles
    'TsukuyomiEx Moondust Crater': '2CD7',
    // meteor explosions later
    'TsukuyomiEx Dancing Fan Tsukui-No-Maiogi': '2BC6',
    // fan circle aoe
    'TsukuyomiEx Waxing Grudge': '2BDE',
    // melee range circle from Full Moon buff
    'TsukuyomiEx Waning Grudge': '2BDF',
    // donut from New Moon Buff
    'TsukuyomiEx Dark Blade': '2BDA',
    // right-side cleave
    'TsukuyomiEx Bright Blade': '2BDB' // left side cleave

  },
  shareFail: {
    'TsukuyomiEx Torment Unto Death': '2BBB' // tank buster conal cleave

  },
  soloWarn: {
    'TsukuyomiEx Lead Of The Underworld': '2BBE',
    // "Beg for Mercy!" stack
    'TsukuyomiEx Lunacy': '2BDD' // 4x stack marker

  },
  triggers: [{
    id: 'TsukuyomiEx Moonlit',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '602',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'TsukuyomiEx Moonshadowed',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '603',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const tsukuyomi_ex = (tsukuyomi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/yojimbo.ts

const yojimbo_triggerSet = {
  zoneId: zone_id/* default.KuganeOhashi */.Z.KuganeOhashi,
  damageWarn: {
    'Yojimbo Fragility': '382A',
    // circle aoes from butterflies after Inoshikacho
    'Yojimbo Yukikaze': '3832',
    // icy-looking waffle lines
    'Yojimbo Kasha': '3834',
    // donut that follows Gekko orb markers
    'Yojimbo Tiny Song': '3835',
    // dorito stack
    'Yojimbo Electrogenetic Force': '3840',
    // purple orb explosions
    'Yojimbo Masamune': '3843',
    // very long targeted line
    'Yojimbo Epic Stormsplitter': '3845',
    // single line down the middle
    'Yojimbo Seasplitter 1': '3846',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 2': '3847',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 3': '3848',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 4': '3849',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Dragon\'s Head Mighty Blow': '3839' // running into Dragon's Head untargetable add

  },
  damageFail: {
    'Yojimbo Hell\'s Gate': '3842' // failing to break Iron Chains

  },
  shareWarn: {
    'Yojimbo The Bitter End': '31DE' // frontal tank cleave, no cast bar

  }
};
/* harmony default export */ const yojimbo = (yojimbo_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/ultimate/ultima_weapon_ultimate.ts



// Ultima Weapon Ultimate
const ultima_weapon_ultimate_triggerSet = {
  zoneId: zone_id/* default.TheWeaponsRefrainUltimate */.Z.TheWeaponsRefrainUltimate,
  damageWarn: {
    'UWU Eye of the Storm': '2B52',
    // donut on the final
    'UWU Searing Wind': '2B5C',
    // healer explosions
    'UWU Eruption': '2B5A',
    // red baited ifrit circles
    'UWU Crimson Cyclone 1': '2B5F',
    // ifrit charge
    'UWU Crimson Cyclone 2': '2B60',
    // ifrit charge
    'UWU Radiant Plume': '2B61',
    // ifrit plumes
    'UWU Weight of the Land': '2B65',
    // titan puddles
    'UWU Bomb Boulder Bury': '2B69',
    // titan bombs dropping
    'UWU Bomb Boulder Freefire': '2B6E',
    // titan bombs awakening
    'UWU Bomb Boulder Burst': '2B6A' // titan bombs exploding

  },
  damageFail: {
    'UWU Great Whirlwind': '2B41',
    // large circle from blocking mistral song
    'UWU Slipstream': '2B53',
    // untelegraphed dodgeable frontal conal
    'UWU Wicked Wheel': '2B4E',
    // wicked wheel centered circle
    'UWU Wicked Tornado': '2B4F',
    // awoken wicked wheel donut
    'UWU Landslide 1': '2B70',
    // landslide
    'UWU Landslide 2': '2B6F',
    // landslide
    'UWU Landslide 3': '2B71',
    // landslide
    'UWU Landslide 4': '2C22',
    // landslide
    'UWU Landslide 5': '2B7F',
    // landslide from ultima
    'UWU Aetherochemical Laser 1': '2B84',
    // suppression yellow line laser from ultima
    'UWU Aetherochemical Laser 2': '2B85',
    // suppression yellow line laser from ultima
    'UWU Aetherochemical Laser 3': '2B86' // suppression yellow line laser from ultima

  },
  shareWarn: {
    'UWU Mesohigh': '2B49' // tether to garuda sister

  },
  shareFail: {
    'UWU Downburst': '2B50',
    // unawoken garuda tankbuster
    'UWU Incinerate': '2B56',
    // ifrit tankbuster
    'UWU Rock Buster': '2B62',
    // titan tankbuster 1
    'UWU Mountain Buster': '2B63',
    // titan tankbuster 2
    'UWU Viscous Aetheroplasm': '2B76',
    // tank debuff tankbuster
    'UWU Homing Laser': '2B7B',
    // second hate tankbuster
    'UWU Diffractive Laser': '2B78' // tank cleave

  },
  soloWarn: {
    'UWU Flaming Crush': '25BD' // ifrit stack marker

  },
  triggers: [{
    id: 'UWU Windburn',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'EB'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Featherlance explosion.  It seems like the person who pops it is the
    // first person listed damage-wise, so they are likely the culprit.
    id: 'UWU Featherlance',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2B43',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 5,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.source
      };
    }
  }]
};
/* harmony default export */ const ultima_weapon_ultimate = (ultima_weapon_ultimate_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/ultimate/unending_coil_ultimate.ts



// UCU - The Unending Coil Of Bahamut (Ultimate)
const unending_coil_ultimate_triggerSet = {
  zoneId: zone_id/* default.TheUnendingCoilOfBahamutUltimate */.Z.TheUnendingCoilOfBahamutUltimate,
  damageFail: {
    'UCU Lunar Dynamo': '26BC',
    'UCU Iron Chariot': '26BB',
    'UCU Exaflare': '26EF',
    'UCU Wings Of Salvation': '26CA'
  },
  triggers: [{
    id: 'UCU Twister Death',
    type: 'Ability',
    // Instant death has a special flag value, differentiating
    // from the explosion damage you take when somebody else
    // pops one.
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26AB',
      ...oopsy_common/* playerDamageFields */.np,
      flags: oopsy_common/* kFlagInstantDeath */.hm
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Twister Pop',
          de: 'Wirbelsturm berührt',
          fr: 'Apparition des tornades',
          ja: 'ツイスター',
          cn: '旋风',
          ko: '회오리 밟음'
        }
      };
    }
  }, {
    id: 'UCU Thermionic Burst',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26B9',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Pizza Slice',
          de: 'Pizzastück',
          fr: 'Part de pizza',
          ja: 'サーミオニックバースト',
          cn: '天崩地裂',
          ko: '장판에 맞음'
        }
      };
    }
  }, {
    id: 'UCU Chain Lightning',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26C8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      // It's hard to assign blame for lightning.  The debuffs
      // go out and then explode in order, but the attacker is
      // the dragon and not the player.
      return {
        type: 'warn',
        name: matches.target,
        text: {
          en: 'hit by lightning',
          de: 'vom Blitz getroffen',
          fr: 'frappé(e) par la foudre',
          ja: 'チェインライトニング',
          cn: '雷光链',
          ko: '번개 맞음'
        }
      };
    }
  }, {
    id: 'UCU Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'FA'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'UCU Sludge',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '11F'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'UCU Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'D2'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      (_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {};
      data.hasDoom[matches.target] = true;
    }
  }, {
    id: 'UCU Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'D2'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      (_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {};
      data.hasDoom[matches.target] = false;
    }
  }, {
    // There is no callout for "you forgot to clear doom".  The logs look
    // something like this:
    //   [20:02:30.564] 1A:Okonomi Yaki gains the effect of Doom from  for 6.00 Seconds.
    //   [20:02:36.443] 1E:Okonomi Yaki loses the effect of Protect from Tako Yaki.
    //   [20:02:36.443] 1E:Okonomi Yaki loses the effect of Doom from .
    //   [20:02:38.525] 19:Okonomi Yaki was defeated by Firehorn.
    // In other words, doom effect is removed +/- network latency, but can't
    // tell until later that it was a death.  Arguably, this could have been a
    // close-but-successful clearing of doom as well.  It looks the same.
    // Strategy: if you haven't cleared doom with 1 second to go then you probably
    // died to doom.  You can get non-fatally iceballed or auto'd in between,
    // but what can you do.
    id: 'UCU Doom Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'D2'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      if (!data.hasDoom || !data.hasDoom[matches.target]) return;
      let text;
      const duration = parseFloat(matches.duration);
      if (duration < 9) text = matches.effect + ' #1';else if (duration < 14) text = matches.effect + ' #2';else text = matches.effect + ' #3';
      return {
        id: matches.targetId,
        name: matches.target,
        text: text
      };
    }
  }]
};
/* harmony default export */ const unending_coil_ultimate = (unending_coil_ultimate_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_copied_factory.ts

// The Copied Factory
const the_copied_factory_triggerSet = {
  zoneId: zone_id/* default.TheCopiedFactory */.Z.TheCopiedFactory,
  damageWarn: {
    'Copied Serial Energy Bomb': '48B4',
    // Make sure enemies are ignored on these
    'Copied Serial Energy Bombardment': '48B8',
    'Copied Serial Energy Assault': '48B6',
    'Copied Serial High-Powered Laser': '48C5',
    'Copied Serial Sidestriking Spin Spin 1': '48CB',
    'Copied Serial Sidestriking Spin 2': '48CC',
    'Copied Serial Centrifugal Spin': '48C9',
    'Copied Serial Air-To-Surface Energy': '48BA',
    'Copied Serial High-Caliber Laser': '48FA',
    'Copied Serial Energy Ring 1': '48BC',
    'Copied Serial Energy Ring 2': '48BD',
    'Copied Serial Energy Ring 3': '48BE',
    'Copied Serial Energy Ring 4': '48C0',
    'Copied Serial Energy Ring 5': '48C1',
    'Copied Serial Energy Ring 6': '48C2',
    'Copied Trash Energy Bomb': '491D',
    'Copied Trash Frontal Somersault': '491B',
    'Copied Trash High-Frequency Laser': '491E',
    'Copied Hobbes Shocking Discharge': '480B',
    'Copied Hobbes Variable Combat Test 1': '49C5',
    'Copied Hobbes Variable Combat Test 2': '49C6',
    'Copied Hobbes Variable Combat Test 3': '49C7',
    'Copied Hobbes Variable Combat Test 4': '480F',
    'Copied Hobbes Variable Combat Test 5': '4810',
    'Copied Hobbes Variable Combat Test 6': '4811',
    'Copied Hobbes Ring Laser 1': '4802',
    'Copied Hobbes Ring Laser 2': '4803',
    'Copied Hobbes Ring Laser 3': '4804',
    'Copied Hobbes Towerfall': '4813',
    'Copied Hobbes Fire-Reistance Test 1': '4816',
    'Copied Hobbes Fire-Reistance Test 2': '4817',
    'Copied Hobbes Fire-Reistance Test 3': '4818',
    'Copied Hobbes Oil Well': '481B',
    'Copied Hobbes Electromagnetic Pulse': '4819',
    // TODO: what's the electrified floor with conveyor belts?
    'Copied Goliath Energy Ring 1': '4937',
    'Copied Goliath Energy Ring 2': '4938',
    'Copied Goliath Energy Ring 3': '4939',
    'Copied Goliath Energy Ring 4': '493A',
    'Copied Goliath Energy Ring 5': '4937',
    'Copied Goliath Laser Turret': '48E6',
    'Copied Flight Unit Area Bombing': '4943',
    'Copied Flight Unit Lightfast Blade': '4940',
    'Copied Engels Marx Smash 1': '4729',
    'Copied Engels Marx Smash 2': '4728',
    'Copied Engels Marx Smash 3': '472F',
    'Copied Engels Marx Smash 4': '4731',
    'Copied Engels Marx Smash 5': '472B',
    'Copied Engels Marx Smash 6': '472D',
    'Copied Engels Marx Smash 7': '4732',
    'Copied Engels Incendiary Bombing': '4739',
    'Copied Engels Guided Missile': '4736',
    'Copied Engels Surface Missile': '4734',
    'Copied Engels Laser Sight': '473B',
    'Copied Engels Frack': '474D',
    'Copied Engels Marx Crush': '48FC',
    'Copied Engels Crushing Wheel': '474B',
    'Copied Engels Marx Thrust': '48FC',
    'Copied 9S Laser Suppression': '48E0',
    // Cannons
    'Copied 9S Ballistic Impact 1': '4974',
    'Copied 9S Ballistic Impact 2': '48DC',
    'Copied 9S Ballistic Impact 3': '48E4',
    'Copied 9S Ballistic Impact 4': '48E0',
    'Copied 9S Marx Impact': '48D4',
    'Copied 9S Tank Destruction 1': '48E8',
    'Copied 9S Tank Destruction 2': '48E9',
    'Copied 9S Serial Spin 1': '48A5',
    'Copied 9S Serial Spin 2': '48A7'
  },
  shareWarn: {
    'Copied Hobbes Short-Range Missile': '4815'
  }
};
/* harmony default export */ const the_copied_factory = (the_copied_factory_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_puppets_bunker.ts

// TODO: 5093 taking High-Powered Laser with a vuln (because of taking two)
// TODO: 4FB5 taking High-Powered Laser with a vuln (because of taking two)
// TODO: 50D3 Aerial Support: Bombardment going off from add
// TODO: 5211 Maneuver: Volt Array not getting interrupted
// TODO: 4FF4/4FF5 One of these is failing chemical conflagration
// TODO: standing in wrong teleporter?? maybe 5363?
const the_puppets_bunker_triggerSet = {
  zoneId: zone_id/* default.ThePuppetsBunker */.Z.ThePuppetsBunker,
  damageWarn: {
    'Puppet Aegis Beam Cannons 1': '5074',
    // rotating separating white ground aoe
    'Puppet Aegis Beam Cannons 2': '5075',
    // rotating separating white ground aoe
    'Puppet Aegis Beam Cannons 3': '5076',
    // rotating separating white ground aoe
    'Puppet Aegis Collider Cannons': '507E',
    // rotating red ground aoe pinwheel
    'Puppet Aegis Surface Laser 1': '5091',
    // chasing laser initial
    'Puppet Aegis Surface Laser 2': '5092',
    // chasing laser chasing
    'Puppet Aegis Flight Path': '508C',
    // blue line aoe from flying untargetable adds
    'Puppet Aegis Refraction Cannons 1': '5081',
    // refraction cannons between wings
    'Puppet Aegis Life\'s Last Song': '53B3',
    // ring aoe with gap
    'Puppet Light Long-Barreled Laser': '5212',
    // line aoe from add
    'Puppet Light Surface Missile Impact': '520F',
    // untargeted ground aoe from No Restrictions
    'Puppet Superior Incendiary Bombing': '4FB9',
    // fire puddle initial
    'Puppet Superior Sharp Turn': '506D',
    // sharp turn dash
    'Puppet Superior Standard Surface Missile 1': '4FB1',
    // Lethal Revolution circles
    'Puppet Superior Standard Surface Missile 2': '4FB2',
    // Lethal Revolution circles
    'Puppet Superior Standard Surface Missile 3': '4FB3',
    // Lethal Revolution circles
    'Puppet Superior Sliding Swipe 1': '506F',
    // right-handed sliding swipe
    'Puppet Superior Sliding Swipe 2': '5070',
    // left-handed sliding swipe
    'Puppet Superior Guided Missile': '4FB8',
    // ground aoe during Area Bombardment
    'Puppet Superior High-Order Explosive Blast 1': '4FC0',
    // star aoe
    'Puppet Superior High-Order Explosive Blast 2': '4FC1',
    // star aoe
    'Puppet Heavy Energy Bombardment': '4FFC',
    // colored magic hammer-y ground aoe
    'Puppet Heavy Revolving Laser': '5000',
    // get under laser
    'Puppet Heavy Energy Bomb': '4FFA',
    // getting hit by ball during Active Suppressive Unit
    'Puppet Heavy R010 Laser': '4FF0',
    // laser pod
    'Puppet Heavy R030 Hammer': '4FF1',
    // circle aoe pod
    'Puppet Hallway High-Powered Laser': '50B1',
    // long aoe in the hallway section
    'Puppet Hallway Energy Bomb': '50B2',
    // running into a floating orb
    'Puppet Compound Mechanical Dissection': '51B3',
    // spinning vertical laser
    'Puppet Compound Mechanical Decapitation': '51B4',
    // get under laser
    'Puppet Compound Mechnical Contusion Untargeted': '51B7',
    // untargeted ground aoe
    'Puppet Compound 2P Relentless Spiral 1': '51AA',
    // triple untargeted ground aoes
    'Puppet Compound 2P Relentless Spiral 2': '51CB',
    // triple untargeted ground aoes
    'Puppet Compound 2P Prime Blade Out 1': '541F',
    // 2P prime blade get out
    'Puppet Compound 2P Prime Blade Out 2': '5198',
    // 2P/puppet teleporting/reproduce prime blade get out
    'Puppet Compound 2P Prime Blade Behind 1': '5420',
    // 2P prime blade get behind
    'Puppet Compound 2P Prime Blade Behind 2': '5199',
    // 2P teleporting prime blade get behind
    'Puppet Compound 2P Prime Blade In 1': '5421',
    // 2P prime blade get in
    'Puppet Compound 2P Prime Blade In 2': '519A',
    // 2P/puppet teleporting/reproduce prime blade get in
    'Puppet Compound 2P R012 Laser Ground': '51AE' // untargeted ground circle
    // This is... too noisy.
    // 'Puppet Compound 2P Four Parts Resolve 1': '51A0', // four parts resolve jump
    // 'Puppet Compound 2P Four Parts Resolve 2': '519F', // four parts resolve cleave

  },
  damageFail: {
    'Puppet Heavy Upper Laser 1': '5087',
    // upper laser initial
    'Puppet Heavy Upper Laser 2': '4FF7',
    // upper laser continuous
    'Puppet Heavy Lower Laser 1': '5086',
    // lower laser first section initial
    'Puppet Heavy Lower Laser 2': '4FF6',
    // lower laser first section continuous
    'Puppet Heavy Lower Laser 3': '5088',
    // lower laser second section initial
    'Puppet Heavy Lower Laser 4': '4FF8',
    // lower laser second section continuous
    'Puppet Heavy Lower Laser 5': '5089',
    // lower laser third section initial
    'Puppet Heavy Lower Laser 6': '4FF9',
    // lower laser third section continuous
    'Puppet Compound Incongruous Spin': '51B2' // find the safe spot double dash

  },
  gainsEffectWarn: {
    'Puppet Burns': '10B' // standing in many various fire aoes

  },
  shareWarn: {
    // This is pretty large and getting hit by initial without burns seems fine.
    // 'Puppet Light Homing Missile Impact': '5210', // targeted fire aoe from No Restrictions
    'Puppet Heavy Unconventional Voltage': '5004',
    // Pretty noisy.
    'Puppet Maneuver High-Powered Laser': '5002',
    // tank laser
    'Puppet Compound Mechnical Contusion Targeted': '51B6',
    // targeted spread marker
    'Puppet Compound 2P R012 Laser Tank': '51AE' // targeted spread pod laser on non-tank

  },
  shareFail: {
    'Puppet Aegis Anti-Personnel Laser': '5090',
    // tank buster marker
    'Puppet Superior Precision-Guided Missile': '4FC5',
    'Puppet Compound 2P R012 Laser Tank': '51AD' // targeted pod laser on tank

  }
};
/* harmony default export */ const the_puppets_bunker = (the_puppets_bunker_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_tower_at_paradigms_breach.ts


// TODO: missing Shock Black 2?
// TODO: White/Black Dissonance damage is maybe when flags end in 03?
const the_tower_at_paradigms_breach_triggerSet = {
  zoneId: zone_id/* default.TheTowerAtParadigmsBreach */.Z.TheTowerAtParadigmsBreach,
  damageWarn: {
    'Tower Knave Colossal Impact Center 1': '5EA7',
    // Center aoe from Knave and clones
    'Tower Knave Colossal Impact Center 2': '60C8',
    // Center aoe from Knave during lunge
    'Tower Knave Colossal Impact Side 1': '5EA5',
    // Side aoes from Knave and clones
    'Tower Knave Colossal Impact Side 2': '5EA6',
    // Side aoes from Knave and clones
    'Tower Knave Colossal Impact Side 3': '60C6',
    // Side aoes from Knave during lunge
    'Tower Knave Colossal Impact Side 4': '60C7',
    // Side aoes from Knave during lunge
    'Tower Knave Burst': '5ED4',
    // Spheroid Knavish Bullets collision
    'Tower Knave Magic Barrage': '5EAC',
    // Spheroid line aoes
    'Tower Hansel Repay': '5C70',
    // Shield damage
    'Tower Hansel Explosion': '5C67',
    // Being hit by Magic Bullet during Passing Lance
    'Tower Hansel Impact': '5C5C',
    // Being hit by Magical Confluence during Wandering Trail
    'Tower Hansel Bloody Sweep 1': '5C6C',
    // Dual cleaves without tether
    'Tower Hansel Bloody Sweep 2': '5C6D',
    // Dual cleaves without tether
    'Tower Hansel Bloody Sweep 3': '5C6E',
    // Dual cleaves with tether
    'Tower Hansel Bloody Sweep 4': '5C6F',
    // Dual cleaves with tether
    'Tower Hansel Passing Lance': '5C66',
    // The Passing Lance charge itself
    'Tower Hansel Breaththrough 1': '55B3',
    // half room cleave during Wandering Trail
    'Tower Hansel Breaththrough 2': '5C5D',
    // half room cleave during Wandering Trail
    'Tower Hansel Breaththrough 3': '5C5E',
    // half room cleave during Wandering Trail
    'Tower Hansel Hungry Lance 1': '5C71',
    // 2xlarge conal cleave during Wandering Trail
    'Tower Hansel Hungry Lance 2': '5C72',
    // 2xlarge conal cleave during Wandering Trail
    'Tower Flight Unit Lightfast Blade': '5BFE',
    // large room cleave
    'Tower Flight Unit Standard Laser': '5BFF',
    // tracking laser
    'Tower 2P Whirling Assault': '5BFB',
    // line aoe from 2P clones
    'Tower 2P Balanced Edge': '5BFA',
    // circular aoe on 2P clones
    'Tower Red Girl Generate Barrier 1': '6006',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 2': '6007',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 3': '6008',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 4': '6009',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 5': '6310',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 6': '6311',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 7': '6312',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 8': '6313',
    // being hit by barriers appearing
    'Tower Red Girl Shock White 1': '600F',
    // white shockwave circle not dropped on black
    'Tower Red Girl Shock White 2': '6010',
    // white shockwave circle not dropped on black
    'Tower Red Girl Shock Black 1': '6011',
    // black shockwave circle not dropped on white
    'Tower Red Girl Point White 1': '601F',
    // being hit by a white laser
    'Tower Red Girl Point White 2': '6021',
    // being hit by a white laser
    'Tower Red Girl Point Black 1': '6020',
    // being hit by a black laser
    'Tower Red Girl Point Black 2': '6022',
    // being hit by a black laser
    'Tower Red Girl Wipe White': '600C',
    // not line of sighting the white meteor
    'Tower Red Girl Wipe Black': '600D',
    // not line of sighting the black meteor
    'Tower Red Girl Diffuse Energy': '6056',
    // rotating clone bubble cleaves
    'Tower Red Girl Pylon Big Explosion': '6027',
    // not killing a pylon during hacking phase
    'Tower Red Girl Pylon Explosion': '6026',
    // pylon during Child's play
    'Tower Philosopher Deploy Armaments Middle': '5C02',
    // middle laser
    'Tower Philosopher Deploy Armaments Sides': '5C05',
    // sides laser
    'Tower Philosopher Deploy Armaments 3': '6078',
    // goes with 5C01
    'Tower Philosopher Deploy Armaments 4': '6079',
    // goes with 5C04
    'Tower Philosopher Energy Bomb': '5C05',
    // pink bubble
    'Tower False Idol Made Magic Right': '5BD7',
    // rotating wheel going right
    'Tower False Idol Made Magic Left': '5BD6',
    // rotating wheel going left
    'Tower False Idol Lighter Note': '5BDA',
    // lighter note moving aoes
    'Tower False Idol Magical Interference': '5BD5',
    // lasers during Rhythm Rings
    'Tower False Idol Scattered Magic': '5BDF',
    // circle aoes from Seed Of Magic
    'Tower Her Inflorescence Uneven Fotting': '5BE2',
    // building from Recreate Structure
    'Tower Her Inflorescence Crash': '5BE5',
    // trains from Mixed Signals
    'Tower Her Inflorescence Heavy Arms 1': '5BED',
    // heavy arms front/back attack
    'Tower Her Inflorescence Heavy Arms 2': '5BEF',
    // heavy arms sides attack
    'Tower Her Inflorescence Energy Scattered Magic': '5BE8' // orbs from Red Girl by train

  },
  damageFail: {
    'Tower Her Inflorescence Place Of Power': '5C0D' // instadeath middle circle before black/white rings

  },
  shareWarn: {
    'Tower Knave Magic Artillery Alpha': '5EAB',
    // Spread
    'Tower Hansel Seed Of Magic Alpha': '5C61' // Spread

  },
  shareFail: {
    'Tower Knave Magic Artillery Beta': '5EB3',
    // Tankbuster
    'Tower Red Girl Manipulate Energy': '601A',
    // Tankbuster
    'Tower False Idol Darker Note': '5BDC' // Tankbuster

  },
  triggers: [{
    id: 'Tower Knocked Off',
    type: 'Ability',
    // 5EB1 = Knave Lunge
    // 5BF2 = Her Infloresence Shockwave
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5EB1', '5BF2']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const the_tower_at_paradigms_breach = (the_tower_at_paradigms_breach_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/akadaemia_anyder.ts

const akadaemia_anyder_triggerSet = {
  zoneId: zone_id/* default.AkadaemiaAnyder */.Z.AkadaemiaAnyder,
  damageWarn: {
    'Anyder Acrid Stream': '4304',
    'Anyder Waterspout': '4306',
    'Anyder Raging Waters': '4302',
    'Anyder Violent Breach': '4305',
    'Anyder Tidal Guillotine 1': '3E08',
    'Anyder Tidal Guillotine 2': '3E0A',
    'Anyder Pelagic Cleaver 1': '3E09',
    'Anyder Pelagic Cleaver 2': '3E0B',
    'Anyder Aquatic Lance': '3E05',
    'Anyder Syrup Spout': '4308',
    'Anyder Needle Storm': '4309',
    'Anyder Extensible Tendrils 1': '3E10',
    'Anyder Extensible Tendrils 2': '3E11',
    'Anyder Putrid Breath': '3E12',
    'Anyder Detonator': '430F',
    'Anyder Dominion Slash': '430D',
    'Anyder Quasar': '430B',
    'Anyder Dark Arrivisme': '430E',
    'Anyder Thunderstorm': '3E1C',
    'Anyder Winding Current': '3E1F' // 3E20 is being hit by the growing orbs, maybe?

  }
};
/* harmony default export */ const akadaemia_anyder = (akadaemia_anyder_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/amaurot.ts

const amaurot_triggerSet = {
  zoneId: zone_id/* default.Amaurot */.Z.Amaurot,
  damageWarn: {
    'Amaurot Burning Sky': '354A',
    'Amaurot Whack': '353C',
    'Amaurot Aetherspike': '353B',
    'Amaurot Venemous Breath': '3CCE',
    'Amaurot Cosmic Shrapnel': '4D26',
    'Amaurot Earthquake': '3CCD',
    'Amaurot Meteor Rain': '3CC6',
    'Amaurot Final Sky': '3CCB',
    'Amaurot Malevolence': '3541',
    'Amaurot Turnabout': '3542',
    'Amaurot Sickly Inferno': '3DE3',
    'Amaurot Disquieting Gleam': '3546',
    'Amaurot Black Death': '3543',
    'Amaurot Force of Loathing': '3544',
    'Amaurot Damning Ray 1': '3E00',
    'Amaurot Damning Ray 2': '3E01',
    'Amaurot Deadly Tentacles': '3547',
    'Amaurot Misfortune': '3CE2'
  },
  damageFail: {
    'Amaurot Apokalypsis': '3CD7'
  }
};
/* harmony default export */ const amaurot = (amaurot_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/anamnesis_anyder.ts

const anamnesis_anyder_triggerSet = {
  zoneId: zone_id/* default.AnamnesisAnyder */.Z.AnamnesisAnyder,
  damageWarn: {
    'Anamnesis Trench Phuabo Spine Lash': '4D1A',
    // frontal conal
    'Anamnesis Trench Anemone Falling Rock': '4E37',
    // ground circle aoe from Trench Anemone showing up
    'Anamnesis Trench Dagonite Sewer Water': '4D1C',
    // frontal conal from Trench Anemone (?!)
    'Anamnesis Trench Yovra Rock Hard': '4D21',
    // targeted circle aoe
    'Anamnesis Trench Yovra Torrential Torment': '4D21',
    // frontal conal
    'Anamnesis Unknown Luminous Ray': '4E27',
    // Unknown line aoe
    'Anamnesis Unknown Sinster Bubble Explosion': '4B6E',
    // Unknown explosions during Scrutiny
    'Anamnesis Unknown Reflection': '4B6F',
    // Unknown conal attack during Scrutiny
    'Anamnesis Unknown Clearout 1': '4B74',
    // Unknown frontal cone
    'Anamnesis Unknown Clearout 2': '4B6B',
    // Unknown frontal cone
    'Anamnesis Unknown Setback 1': '4B75',
    // Unknown rear cone
    'Anamnesis Unknown Setback 2': '5B6C',
    // Unknown rear cone
    'Anamnesis Anyder Clionid Acrid Stream': '4D24',
    // targeted circle aoe
    'Anamnesis Anyder Diviner Dreadstorm': '4D28',
    // ground circle aoe
    'Anamnesis Kyklops 2000-Mina Swing': '4B55',
    // Kyklops get out mechanic
    'Anamnesis Kyklops Terrible Hammer': '4B5D',
    // Kyklops Hammer/Blade alternating squares
    'Anamnesis Kyklops Terrible Blade': '4B5E',
    // Kyklops Hammer/Blade alternating squares
    'Anamnesis Kyklops Raging Glower': '4B56',
    // Kyklops line aoe
    'Anamnesis Kyklops Eye Of The Cyclone': '4B57',
    // Kyklops donut
    'Anamnesis Anyder Harpooner Hydroball': '4D26',
    // frontal conal
    'Anamnesis Rukshs Swift Shift': '4B83',
    // Rukshs Deem teleport N/S
    'Anamnesis Rukshs Depth Grip Wavebreaker': '33D4',
    // Rukshs Deem hand attacks
    'Anamnesis Rukshs Rising Tide': '4B8B',
    // Rukshs Deem cross aoe
    'Anamnesis Rukshs Command Current': '4B82' // Rukshs Deem protean-ish ground aoes

  },
  shareWarn: {
    'Anamnesis Trench Xzomit Mantle Drill': '4D19',
    // charge attack
    'Anamnesis Io Ousia Barreling Smash': '4E24',
    // charge attack
    'Anamnesis Kyklops Wanderer\'s Pyre': '4B5F' // Kyklops spread attack

  }
};
/* harmony default export */ const anamnesis_anyder = (anamnesis_anyder_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/dohn_mheg.ts


// TODO: Missing Growing tethers on boss 2.
// (Maybe gather party member names on the previous TIIIIMBEEEEEER cast for comparison?)
// TODO: Failing to interrupt Dohnfaust Fuath on Watering Wheel casts?
// (15:........:Dohnfast Fuath:3DAA:Watering Wheel:........:(\y{Name}):)
const dohn_mheg_triggerSet = {
  zoneId: zone_id/* default.DohnMheg */.Z.DohnMheg,
  damageWarn: {
    'Dohn Mheg Geyser': '2260',
    // Water eruptions, boss 1
    'Dohn Mheg Hydrofall': '22BD',
    // Ground AoE marker, boss 1
    'Dohn Mheg Laughing Leap': '2294',
    // Ground AoE marker, boss 1
    'Dohn Mheg Swinge': '22CA',
    // Frontal cone, boss 2
    'Dohn Mheg Canopy': '3DB0',
    // Frontal cone, Dohnfaust Rowans throughout instance
    'Dohn Mheg Pinecone Bomb': '3DB1',
    // Circular ground AoE marker, Dohnfaust Rowans throughout instance
    'Dohn Mheg Bile Bombardment': '34EE',
    // Ground AoE marker, boss 3
    'Dohn Mheg Corrosive Bile': '34EC',
    // Frontal cone, boss 3
    'Dohn Mheg Flailing Tentacles': '3681'
  },
  triggers: [{
    id: 'Dohn Mheg Imp Choir',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '46E'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Dohn Mheg Toad Choir',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1B7'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Dohn Mheg Fool\'s Tumble',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '183'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const dohn_mheg = (dohn_mheg_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/heroes_gauntlet.ts



// TODO: Berserker 2nd/3rd wild anguish should be shared with just a rock
const heroes_gauntlet_triggerSet = {
  zoneId: zone_id/* default.TheHeroesGauntlet */.Z.TheHeroesGauntlet,
  damageWarn: {
    'THG Blade\'s Benison': '5228',
    // pld conal
    'THG Absolute Holy': '524B',
    // whm very large aoe
    'THG Hissatsu: Goka': '523D',
    // sam line aoe
    'THG Whole Self': '522D',
    // mnk wide line aoe
    'THG Randgrith': '5232',
    // drg very big line aoe
    'THG Vacuum Blade 1': '5061',
    // Spectral Thief circular ground aoe from marker
    'THG Vacuum Blade 2': '5062',
    // Spectral Thief circular ground aoe from marker
    'THG Coward\'s Cunning': '4FD7',
    // Spectral Thief Chicken Knife laser
    'THG Papercutter 1': '4FD1',
    // Spectral Thief line aoe from marker
    'THG Papercutter 2': '4FD2',
    // Spectral Thief line aoe from marker
    'THG Ring of Death': '5236',
    // drg circular aoe
    'THG Lunar Eclipse': '5227',
    // pld circular aoe
    'THG Absolute Gravity': '5248',
    // ink mage circular
    'THG Rain of Light': '5242',
    // bard large circule aoe
    'THG Dooming Force': '5239',
    // drg line aoe
    'THG Absolute Dark II': '4F61',
    // Necromancer 120 degree conal
    'THG Burst': '53B7',
    // Necromancer necroburst small zombie explosion
    'THG Pain Mire': '4FA4',
    // Necromancer very large green bleed puddle
    'THG Dark Deluge': '4F5D',
    // Necromancer ground aoe
    'THG Tekka Gojin': '523E',
    // sam 90 degree conal
    'THG Raging Slice 1': '520A',
    // Berserker line cleave
    'THG Raging Slice 2': '520B',
    // Berserker line cleave
    'THG Wild Rage': '5203' // Berserker blue knockback puck

  },
  gainsEffectWarn: {
    'THG Bleeding': '828' // Standing in the Necromancer puddle or outside the Berserker arena

  },
  gainsEffectFail: {
    'THG Truly Berserk': '906' // Standing in the crater too long

  },
  shareWarn: {
    'THG Absolute Thunder IV': '5245',
    // headmarker aoe from blm
    'THG Moondiver': '5233',
    // headmarker aoe from drg
    'THG Spectral Gust': '53CF' // Spectral Thief headmarker aoe

  },
  shareFail: {
    'THG Falling Rock': '5205' // Berserker headmarker aoe that creates rubble

  },
  soloWarn: {
    // This should always be shared.  On all times but the 2nd and 3rd, it's a party share.
    // TODO: on the 2nd and 3rd time this should only be shared with a rock.
    // TODO: alternatively warn on taking one of these with a 472 Magic Vulnerability Up effect
    'THG Wild Anguish': '5209'
  },
  triggers: [{
    id: 'THG Wild Rampage',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5207',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // This is zero damage if you are in the crater.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const heroes_gauntlet = (heroes_gauntlet_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/holminster_switch.ts

const holminster_switch_triggerSet = {
  zoneId: zone_id/* default.HolminsterSwitch */.Z.HolminsterSwitch,
  damageWarn: {
    'Holminster Thumbscrew': '3DC6',
    'Holminster Wooden horse': '3DC7',
    'Holminster Light Shot': '3DC8',
    'Holminster Heretic\'s Fork': '3DCE',
    'Holminster Holy Water': '3DD4',
    'Holminster Fierce Beating 1': '3DDD',
    'Holminster Fierce Beating 2': '3DDE',
    'Holminster Fierce Beating 3': '3DDF',
    'Holminster Cat O\' Nine Tails': '3DE1',
    'Holminster Right Knout': '3DE6',
    'Holminster Left Knout': '3DE7'
  },
  damageFail: {
    'Holminster Aethersup': '3DE9'
  },
  shareWarn: {
    'Holminster Flagellation': '3DD6'
  },
  shareFail: {
    'Holminster Taphephobia': '4181'
  }
};
/* harmony default export */ const holminster_switch = (holminster_switch_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/malikahs_well.ts

const malikahs_well_triggerSet = {
  zoneId: zone_id/* default.MalikahsWell */.Z.MalikahsWell,
  damageWarn: {
    'Malikah Falling Rock': '3CEA',
    'Malikah Wellbore': '3CED',
    'Malikah Geyser Eruption': '3CEE',
    'Malikah Swift Spill': '3CF0',
    'Malikah Breaking Wheel 1': '3CF5',
    'Malikah Crystal Nail': '3CF7',
    'Malikah Heretic\'s Fork 1': '3CF9',
    'Malikah Breaking Wheel 2': '3CFA',
    'Malikah Heretic\'s Fork 2': '3E0E',
    'Malikah Earthshake': '3E39'
  }
};
/* harmony default export */ const malikahs_well = (malikahs_well_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/matoyas_relict.ts

// TODO: could include 5484 Mudman Rocky Roll as a shareWarn, but it's low damage and common.
const matoyas_relict_triggerSet = {
  zoneId: zone_id/* default.MatoyasRelict */.Z.MatoyasRelict,
  damageWarn: {
    'Matoya Relict Werewood Ovation': '5518',
    // line aoe
    'Matoya Cave Tarantula Hawk Apitoxin': '5519',
    // big circle aoe
    'Matoya Spriggan Stonebearer Romp': '551A',
    // conal aoe
    'Matoya Sonny Of Ziggy Jittering Glare': '551C',
    // long narrow conal aoe
    'Matoya Mudman Quagmire': '5481',
    // Mudman aoe puddles
    'Matoya Mudman Brittle Breccia 1': '548E',
    // expanding circle aoe
    'Matoya Mudman Brittle Breccia 2': '548F',
    // expanding circle aoe
    'Matoya Mudman Brittle Breccia 3': '5490',
    // expanding circle aoe
    'Matoya Mudman Mud Bubble': '5487',
    // standing in mud puddle?
    'Matoya Cave Pugil Screwdriver': '551E',
    // conal aoe
    'Matoya Nixie Gurgle': '5992',
    // Nixie wall flush
    'Matoya Relict Molten Phoebad Pyroclastic Shot': '57EB',
    // the line aoes as you run to trash
    'Matoya Relict Flan Flood': '5523',
    // big circle aoe
    'Matoya Pyroduct Eldthurs Mash': '5527',
    // line aoe
    'Matyoa Pyroduct Eldthurs Spin': '5528',
    // very large circle aoe
    'Matoya Relict Bavarois Thunder III': '5525',
    // circle aoe
    'Matoya Relict Marshmallow Ancient Aero': '5524',
    // very large line groaoe
    'Matoya Relict Pudding Fire II': '5522',
    // circle aoe
    'Matoya Relict Molten Phoebad Hot Lava': '57E9',
    // conal aoe
    'Matoya Relict Molten Phoebad Volcanic Drop': '57E8',
    // circle aoe
    'Matoya Mother Porxie Medium Rear': '591D',
    // knockback into safe circle aoe
    'Matoya Mother Porxie Barbeque Line': '5917',
    // line aoe during bbq
    'Matoya Mother Porxie Barbeque Circle': '5918',
    // circle aoe during bbq
    'Matoya Mother Porxie To A Crisp': '5925',
    // getting to close to boss during bbq
    'Matoya Mother Proxie Buffet': '5926' // Aeolian Cave Sprite line aoe (is this a pun?)

  },
  damageFail: {
    'Matoya Nixie Sea Shanty': '598C' // Not taking the puddle up to the top? Failing add enrage?

  },
  shareWarn: {
    'Matoya Nixie Crack': '5990',
    // Nixie Crash-Smash tank tethers
    'Matoya Nixie Sputter': '5993' // Nixie spread marker

  }
};
/* harmony default export */ const matoyas_relict = (matoyas_relict_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/mt_gulg.ts

const mt_gulg_triggerSet = {
  zoneId: zone_id/* default.MtGulg */.Z.MtGulg,
  damageWarn: {
    'Gulg Immolation': '41AA',
    'Gulg Tail Smash': '41AB',
    'Gulg Heavenslash': '41A9',
    'Gulg Typhoon Wing 1': '3D00',
    'Gulg Typhoon Wing 2': '3D01',
    'Gulg Hurricane Wing': '3D03',
    'Gulg Earth Shaker': '37F5',
    'Gulg Sanctification': '41AE',
    'Gulg Exegesis': '3D07',
    'Gulg Perfect Contrition': '3D0E',
    'Gulg Sanctified Aero': '41AD',
    'Gulg Divine Diminuendo 1': '3D16',
    'Gulg Divine Diminuendo 2': '3D18',
    'Gulg Divine Diminuendo 3': '4669',
    'Gulg Divine Diminuendo 4': '3D19',
    'Gulg Divine Diminuendo 5': '3D21',
    'Gulg Conviction Marcato 1': '3D1A',
    'Gulg Conviction Marcato 2': '3D1B',
    'Gulg Conviction Marcato 3': '3D20',
    'Gulg Vena Amoris': '3D27'
  },
  damageFail: {
    'Gulg Lumen Infinitum': '41B2',
    'Gulg Right Palm': '37F8',
    'Gulg Left Palm': '37FA'
  }
};
/* harmony default export */ const mt_gulg = (mt_gulg_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/paglthan.ts

// TODO: What to do about Kahn Rai 5B50?
// It seems impossible for the marked person to avoid entirely.
const paglthan_triggerSet = {
  zoneId: zone_id/* default.Paglthan */.Z.Paglthan,
  damageWarn: {
    'Paglthan Telovouivre Plague Swipe': '60FC',
    // frontal conal cleave
    'Paglthan Lesser Telodragon Engulfing Flames': '60F5',
    // frontal conal cleave
    'Paglthan Amhuluk Lightning Bolt': '5C4C',
    // circular lightning aoe (on self or post)
    'Paglthan Amhuluk Ball Of Levin Shock': '5C52',
    // pulsing small circular aoes
    'Paglthan Amhuluk Supercharged Ball Of Levin Shock': '5C53',
    // pulsing large circular aoe
    'Paglthan Amhuluk Wide Blaster': '60C5',
    // rear conal cleave
    'Paglthan Telobrobinyak Fall Of Man': '6148',
    // circular aoe
    'Paglthan Telotek Reaper Magitek Cannon': '6121',
    // circular aoe
    'Paglthan Telodragon Sheet of Ice': '60F8',
    // circular aoe
    'Paglthan Telodragon Frost Breath': '60F7',
    // very large conal cleave
    'Paglthan Magitek Core Stable Cannon': '5C94',
    // large line aoes
    'Paglthan Magitek Core 2-Tonze Magitek Missile': '5C95',
    // large circular aoe
    'Paglthan Telotek Sky Armor Aethershot': '5C9C',
    // circular aoe
    'Paglthan Mark II Telotek Colossus Exhaust': '5C99',
    // large line aoe
    'Paglthan Magitek Missile Explosive Force': '5C98',
    // slow moving horizontal missiles
    'Paglthan Tiamat Flamisphere': '610F',
    // very long line aoe
    'Paglthan Armored Telodragon Tortoise Stomp': '614B',
    // large circular aoe from turtle
    'Paglthan Telodragon Thunderous Breath': '6149',
    // large conal cleave
    'Paglthan Lunar Bahamut Lunar Nail Upburst': '605B',
    // small aoes before Big Burst
    'Paglthan Lunar Bahamut Lunar Nail Big Burst': '5B48',
    // large circular aoes from nails
    'Paglthan Lunar Bahamut Perigean Breath': '5B59',
    // large conal cleave
    'Paglthan Lunar Bahamut Megaflare': '5B4E',
    // megaflare pepperoni
    'Paglthan Lunar Bahamut Megaflare Dive': '5B52',
    // megaflare line aoe across the arena
    'Paglthan Lunar Bahamut Lunar Flare': '5B4A' // large purple shrinking circles

  },
  shareWarn: {
    'Paglthan Lunar Bahamut Megaflare': '5B4D' // megaflare spread markers

  }
};
/* harmony default export */ const paglthan = (paglthan_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/qitana_ravel.ts

const qitana_ravel_triggerSet = {
  zoneId: zone_id/* default.TheQitanaRavel */.Z.TheQitanaRavel,
  damageWarn: {
    'Qitana Sun Toss': '3C8A',
    // Ground AoE, boss one
    'Qitana Ronkan Light 1': '3C8C',
    // Statue attack, boss one
    'Qitana Lozatl\'s Fury 1': '3C8F',
    // Semicircle cleave, boss one
    'Qitana Lozatl\'s Fury 2': '3C90',
    // Semicircle cleave, boss one
    'Qitana Falling Rock': '3C96',
    // Small ground AoE, boss two
    'Qitana Falling Boulder': '3C97',
    // Large ground AoE, boss two
    'Qitana Towerfall': '3C98',
    // Pillar collapse, boss two
    'Qitana Viper Poison 2': '3C9E',
    // Stationary poison puddles, boss three
    'Qitana Confession of Faith 1': '3CA2',
    // Dangerous middle during spread circles, boss three
    'Qitana Confession of Faith 3': '3CA6',
    // Dangerous sides during stack marker, boss three
    'Qitana Confession of Faith 4': '3CA7',
    // Dangerous sides during stack marker, boss three
    'Qitana Ronkan Light 2': '3D6D',
    // Statue attack, boss one
    'Qitana Wrath of the Ronka': '3E2C',
    // Statue line attack from mini-bosses before first boss
    'Qitana Sinspitter': '3E36',
    // Gorilla boulder toss AoE before third boss
    'Qitana Hound out of Heaven': '42B8',
    // Tether extension failure, boss three; 42B7 is correct execution
    'Qitana Ronkan Abyss': '43EB' // Ground AoE from mini-bosses before first boss

  },
  shareWarn: {
    'Qitana Viper Poison 1': '3C9D',
    // AoE from the 00AB poison head marker, boss three
    'Qitana Confession of Faith 2': '3CA3' // Overlapped circles failure on the spread circles version of the mechanic

  }
};
/* harmony default export */ const qitana_ravel = (qitana_ravel_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/the_grand_cosmos.ts

// The Grand Cosmos
const the_grand_cosmos_triggerSet = {
  zoneId: zone_id/* default.TheGrandCosmos */.Z.TheGrandCosmos,
  damageWarn: {
    'Cosmos Iron Justice': '491F',
    'Cosmos Smite Of Rage': '4921',
    'Cosmos Tribulation': '49A4',
    'Cosmos Dark Shock': '476F',
    'Cosmos Sweep': '4770',
    'Cosmos Deep Clean': '4771',
    'Cosmos Shadow Burst': '4924',
    'Cosmos Bloody Caress': '4927',
    'Cosmos Nepenthic Plunge': '4928',
    'Cosmos Brewing Storm': '4929',
    'Cosmos Ode To Fallen Petals': '4950',
    'Cosmos Far Wind Ground': '4273',
    'Cosmos Fire Breath': '492B',
    'Cosmos Ronkan Freeze': '492E',
    'Cosmos Overpower': '492D',
    'Cosmos Scorching Left': '4763',
    'Cosmos Scorching Right': '4762',
    'Cosmos Otherwordly Heat': '475C',
    'Cosmos Fire\'s Ire': '4761',
    'Cosmos Plummet': '4767',
    'Cosmos Fire\'s Domain Tether': '475F'
  },
  shareWarn: {
    'Cosmos Dark Well': '476D',
    'Cosmos Far Wind Spread': '4724',
    'Cosmos Black Flame': '475D',
    'Cosmos Fire\'s Domain': '4760'
  }
};
/* harmony default export */ const the_grand_cosmos = (the_grand_cosmos_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/twinning.ts

const twinning_triggerSet = {
  zoneId: zone_id/* default.TheTwinning */.Z.TheTwinning,
  damageWarn: {
    'Twinning Auto Cannons': '43A9',
    'Twinning Heave': '3DB9',
    'Twinning 32 Tonze Swipe': '3DBB',
    'Twinning Sideswipe': '3DBF',
    'Twinning Wind Spout': '3DBE',
    'Twinning Shock': '3DF1',
    'Twinning Laserblade': '3DEC',
    'Twinning Vorpal Blade': '3DC2',
    'Twinning Thrown Flames': '3DC3',
    'Twinning Magitek Ray': '3DF3',
    'Twinning High Gravity': '3DFA'
  },
  damageFail: {
    'Twinning 128 Tonze Swipe': '3DBA'
  }
};
/* harmony default export */ const twinning = (twinning_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/eureka/delubrum_reginae.ts



// TODO: Dead Iron 5AB0 (earthshakers, but only if you take two?)
const delubrum_reginae_triggerSet = {
  zoneId: zone_id/* default.DelubrumReginae */.Z.DelubrumReginae,
  damageWarn: {
    'Delubrum Seeker Mercy Fourfold': '5B34',
    // Four glowing sword half room cleaves
    'Delubrum Seeker Baleful Swathe': '5AB4',
    // Ground aoe to either side of boss
    'Delubrum Seeker Baleful Blade': '5B28',
    // Hide behind pillars attack
    'Delubrum Seeker Iron Splitter Blue 1': '5AA4',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter Blue 2': '5AA5',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter Blue 3': '5AA6',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter White 1': '5AA7',
    // White ring explosion
    'Delubrum Seeker Iron Splitter White 2': '5AA8',
    // White ring explosion
    'Delubrum Seeker Iron Splitter White 3': '5AA9',
    // White ring explosion
    'Delubrum Seeker Scorching Shackle': '5AAE',
    // Chain damage
    'Delubrum Seeker Merciful Breeze': '5AAB',
    // Waffle criss-cross floor markers
    'Delubrum Seeker Merciful Blooms': '5AAD',
    // Purple growing circle
    'Delubrum Dahu Right-Sided Shockwave': '5761',
    // Right circular cleave
    'Delubrum Dahu Left-Sided Shockwave': '5762',
    // Left circular cleave
    'Delubrum Dahu Firebreathe': '5765',
    // Conal breath
    'Delubrum Dahu Firebreathe Rotating': '575A',
    // Conal breath, rotating
    'Delubrum Dahu Head Down': '5756',
    // line aoe charge from Marchosias add
    'Delubrum Dahu Hunter\'s Claw': '5757',
    // circular ground aoe centered on Marchosias add
    'Delubrum Dahu Falling Rock': '575C',
    // ground aoe from Reverberating Roar
    'Delubrum Dahu Hot Charge': '5764',
    // double charge
    'Delubrum Dahu Ripper Claw': '575D',
    // frontal cleave
    'Delubrum Dahu Tail Swing': '575F',
    // tail swing ;)
    'Delubrum Guard Pawn Off': '5806',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'Delubrum Guard Turret\'s Tour 1': '580D',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Turret\'s Tour 2': '580E',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Turret\'s Tour 3': '580F',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Optimal Play Shield': '57F3',
    // Queen's Knight shield get under
    'Delubrum Guard Optimal Play Sword': '57F2',
    // Queen's Knight sword get out
    'Delubrum Guard Counterplay': '57F6',
    // Hitting aetherial ward directional barrier
    'Delubrum Phantom Swirling Miasma 1': '57A9',
    // Initial phantom donut aoe from circle
    'Delubrum Phantom Swirling Miasma 2': '57AA',
    // Moving phantom donut aoes from circle
    'Delubrum Phantom Creeping Miasma': '57A5',
    // phantom line aoe from square
    'Delubrum Phantom Vile Wave': '57B1',
    // phantom conal aoe
    'Delubrum Avowed Fury Of Bozja': '5973',
    // Trinity Avowed Allegiant Arsenal "out"
    'Delubrum Avowed Flashvane': '5972',
    // Trinity Avowed Allegiant Arsenal "get behind"
    'Delubrum Avowed Infernal Slash': '5971',
    // Trinity Avowed Allegiant Arsenal "get front"
    'Delubrum Avowed Flames Of Bozja': '5968',
    // 80% floor aoe before shimmering shot swords
    'Delubrum Avowed Gleaming Arrow': '5974',
    // Trinity Avatar line aoes from outside
    'Delubrum Queen The Means 1': '59BB',
    // The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The Means 2': '59BD',
    // The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The End 1': '59BA',
    // Also The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The End 2': '59BC',
    // Also The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen Northswain\'s Glow': '59C4',
    // expanding lines with explosion intersections
    'Delubrum Queen Judgment Blade Left': '5B83',
    // dash across room with left cleave
    'Delubrum Queen Judgment Blade Right': '5B83',
    // dash across room with right cleave
    'Delubrum Queen Queen\'s Justice': '59BF',
    // failing to walk the right number of squares
    'Delubrum Queen Turret\'s Tour 1': '59E0',
    // reflective turret shot during Queen
    'Delubrum Queen Turret\'s Tour 2': '59E1',
    // reflective turret shot during Queen
    'Delubrum Queen Turret\'s Tour 3': '59E2',
    // reflective turret shot during Queen
    'Delubrum Queen Pawn Off': '59DA',
    // Secrets Revealed tethered clone aoe during Queen
    'Delubrum Queen Optimal Play Shield': '59CE',
    // Queen's Knight shield get under during Queen
    'Delubrum Queen Optimal Play Sword': '59CC' // Queen's Knight sword get out during Queen

  },
  damageFail: {
    'Delubrum Hidden Trap Massive Explosion': '5A6E',
    // explosion trap
    'Delubrum Hidden Trap Poison Trap': '5A6F',
    // poison trap
    'Delubrum Avowed Heat Shock': '595E',
    // too much heat or failing to regulate temperature
    'Delubrum Avowed Cold Shock': '595F' // too much cold or failing to regulate temperature

  },
  gainsEffectWarn: {
    'Delubrum Seeker Merciful Moon': '262' // "Petrification" from Aetherial Orb lookaway

  },
  shareFail: {
    'Delubrum Dahu Heat Breath': '5766',
    // tank cleave
    'Delubrum Avowed Wrath Of Bozja': '5975' // tank cleave

  },
  triggers: [{
    // At least during The Queen, these ability ids can be ordered differently,
    // and the first explosion "hits" everyone, although with "1B" flags.
    id: 'Delubrum Lots Cast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['565A', '565B', '57FD', '57FE', '5B86', '5B87', '59D2', '5D93'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.flags.slice(-2) === '03',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const delubrum_reginae = (delubrum_reginae_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/eureka/delubrum_reginae_savage.ts



// TODO: Dahu 5776 Spit Flame should always hit a Marchosias
// TODO: hitting phantom with ice spikes with anything but dispel?
// TODO: failing icy/fiery portent (guard and queen)
//       `18:Pyretic DoT Tick on ${name} for ${damage} damage.`
// TODO: Winds Of Fate / Weight Of Fortune?
// TODO: Turret's Tour?
// general traps: explosion: 5A71, poison trap: 5A72, mini: 5A73
// duel traps: mini: 57A1, ice: 579F, toad: 57A0
// TODO: taking mana flame without reflect
// TODO: taking Maelstrom's Bolt without lightning buff
const delubrum_reginae_savage_triggerSet = {
  zoneId: zone_id/* default.DelubrumReginaeSavage */.Z.DelubrumReginaeSavage,
  damageWarn: {
    'DelubrumSav Seeker Slimes Hellish Slash': '57EA',
    // Bozjan Soldier cleave
    'DelubrumSav Seeker Slimes Viscous Rupture': '5016',
    // Fully merged viscous slime aoe
    'DelubrumSav Seeker Golems Demolish': '5880',
    // interruptible Ruins Golem cast
    'DelubrumSav Seeker Baleful Swathe': '5AD1',
    // Ground aoe to either side of boss
    'DelubrumSav Seeker Baleful Blade': '5B2A',
    // Hide behind pillars attack
    'DelubrumSav Seeker Scorching Shackle': '5ACB',
    // Chains
    'DelubrumSav Seeker Mercy Fourfold 1': '5B94',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 2': '5AB9',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 3': '5ABA',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 4': '5ABB',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 5': '5ABC',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Merciful Breeze': '5AC8',
    // Waffle criss-cross floor markers
    'DelubrumSav Seeker Baleful Comet': '5AD7',
    // Clone meteor dropping before charges
    'DelubrumSav Seeker Baleful Firestorm': '5AD8',
    // Clone charge after Baleful Comet
    'DelubrumSav Seeker Iron Rose': '5AD9',
    // Clone line aoes
    'DelubrumSav Seeker Iron Splitter Blue 1': '5AC1',
    // Blue rin g explosion
    'DelubrumSav Seeker Iron Splitter Blue 2': '5AC2',
    // Blue ring explosion
    'DelubrumSav Seeker Iron Splitter Blue 3': '5AC3',
    // Blue ring explosion
    'DelubrumSav Seeker Iron Splitter White 1': '5AC4',
    // White ring explosion
    'DelubrumSav Seeker Iron Splitter White 2': '5AC5',
    // White ring explosion
    'DelubrumSav Seeker Iron Splitter White 3': '5AC6',
    // White ring explosion
    'DelubrumSav Seeker Act Of Mercy': '5ACF',
    // cross-shaped line aoes
    'DelubrumSav Dahu Right-Sided Shockwave 1': '5770',
    // Right circular cleave
    'DelubrumSav Dahu Right-Sided Shockwave 2': '5772',
    // Right circular cleave
    'DelubrumSav Dahu Left-Sided Shockwave 1': '576F',
    // Left circular cleave
    'DelubrumSav Dahu Left-Sided Shockwave 2': '5771',
    // Left circular cleave
    'DelubrumSav Dahu Firebreathe': '5774',
    // Conal breath
    'DelubrumSav Dahu Firebreathe Rotating': '576C',
    // Conal breath, rotating
    'DelubrumSav Dahu Head Down': '5768',
    // line aoe charge from Marchosias add
    'DelubrumSav Dahu Hunter\'s Claw': '5769',
    // circular ground aoe centered on Marchosias add
    'DelubrumSav Dahu Falling Rock': '576E',
    // ground aoe from Reverberating Roar
    'DelubrumSav Dahu Hot Charge': '5773',
    // double charge
    'DelubrumSav Duel Massive Explosion': '579E',
    // bombs being cleared
    'DelubrumSav Duel Vicious Swipe': '5797',
    // circular aoe around boss
    'DelubrumSav Duel Focused Tremor 1': '578F',
    // square floor aoes
    'DelubrumSav Duel Focused Tremor 2': '5791',
    // square floor aoes
    'DelubrumSav Duel Devour': '5789',
    // conal aoe after withering curse
    'DelubrumSav Duel Flailing Strike 1': '578C',
    // initial rotating cleave
    'DelubrumSav Duel Flailing Strike 2': '578D',
    // rotating cleaves
    'DelubrumSav Guard Optimal Offensive Sword': '5819',
    // middle explosion
    'DelubrumSav Guard Optimal Offensive Shield': '581A',
    // middle explosion
    'DelubrumSav Guard Optimal Play Sword': '5816',
    // Optimal Play Sword "get out"
    'DelubrumSav Guard Optimal Play Shield': '5817',
    // Optimal play shield "get in"
    'DelubrumSav Guard Optimal Play Cleave': '5818',
    // Optimal Play cleaves for sword/shield
    'DelubrumSav Guard Unlucky Lot': '581D',
    // Queen's Knight orb explosion
    'DelubrumSav Guard Burn 1': '583D',
    // small fire adds
    'DelubrumSav Guard Burn 2': '583E',
    // large fire adds
    'DelubrumSav Guard Pawn Off': '583A',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'DelubrumSav Guard Turret\'s Tour Normal 1': '5847',
    // "normal mode" turrets, initial lines 1
    'DelubrumSav Guard Turret\'s Tour Normal 2': '5848',
    // "normal mode" turrets, initial lines 2
    'DelubrumSav Guard Turret\'s Tour Normal 3': '5849',
    // "normal mode" turrets, second lines
    'DelubrumSav Guard Counterplay': '58F5',
    // Hitting aetherial ward directional barrier
    'DelubrumSav Phantom Swirling Miasma 1': '57B8',
    // Initial phantom donut aoe
    'DelubrumSav Phantom Swirling Miasma 2': '57B9',
    // Moving phantom donut aoes
    'DelubrumSav Phantom Creeping Miasma 1': '57B4',
    // Initial phantom line aoe
    'DelubrumSav Phantom Creeping Miasma 2': '57B5',
    // Later phantom line aoe
    'DelubrumSav Phantom Lingering Miasma 1': '57B6',
    // Initial phantom circle aoe
    'DelubrumSav Phantom Lingering Miasma 2': '57B7',
    // Moving phantom circle aoe
    'DelubrumSav Phantom Vile Wave': '57BF',
    // phantom conal aoe
    'DelubrumSav Avowed Fury Of Bozja': '594C',
    // Trinity Avowed Allegiant Arsenal "out"
    'DelubrumSav Avowed Flashvane': '594B',
    // Trinity Avowed Allegiant Arsenal "get behind"
    'DelubrumSav Avowed Infernal Slash': '594A',
    // Trinity Avowed Allegiant Arsenal "get front"
    'DelubrumSav Avowed Flames Of Bozja': '5939',
    // 80% floor aoe before shimmering shot swords
    'DelubrumSav Avowed Gleaming Arrow': '594D',
    // Trinity Avatar line aoes from outside
    'DelubrumSav Lord Whack': '57D0',
    // cleave
    'DelubrumSav Lord Devastating Bolt 1': '57C5',
    // lightning rings
    'DelubrumSav Lord Devastating Bolt 2': '57C6',
    // lightning rings
    'DelubrumSav Lord Electrocution': '57CC',
    // random circle aoes
    'DelubrumSav Lord Rapid Bolts': '57C3',
    // dropped lightning aoes
    'DelubrumSav Lord 1111-Tonze Swing': '57D8',
    // very large "get out" swing
    'DelubrumSav Lord Monk Attack': '55A6',
    // Monk add auto-attack
    'DelubrumSav Queen Northswain\'s Glow': '59F4',
    // expanding lines with explosion intersections
    'DelubrumSav Queen The Means 1': '59E7',
    // The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The Means 2': '59EA',
    // The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The End 1': '59E8',
    // Also The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The End 2': '59E9',
    // Also The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen Optimal Offensive Sword': '5A02',
    // middle explosion
    'DelubrumSav Queen Optimal Offensive Shield': '5A03',
    // middle explosion
    'DelubrumSav Queen Judgment Blade Left 1': '59F2',
    // dash across room with left cleave
    'DelubrumSav Queen Judgment Blade Left 2': '5B85',
    // dash across room with left cleave
    'DelubrumSav Queen Judgment Blade Right 1': '59F1',
    // dash across room with right cleave
    'DelubrumSav Queen Judgment Blade Right 2': '5B84',
    // dash across room with right cleave
    'DelubrumSav Queen Pawn Off': '5A1D',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'DelubrumSav Queen Optimal Play Sword': '59FF',
    // Optimal Play Sword "get out"
    'DelubrumSav Queen Optimal Play Shield': '5A00',
    // Optimal play shield "get in"
    'DelubrumSav Queen Optimal Play Cleave': '5A01',
    // Optimal Play cleaves for sword/shield
    'DelubrumSav Queen Turret\'s Tour Normal 1': '5A28',
    // "normal mode" turrets, initial lines 1
    'DelubrumSav Queen Turret\'s Tour Normal 2': '5A2A',
    // "normal mode" turrets, initial lines 2
    'DelubrumSav Queen Turret\'s Tour Normal 3': '5A29' // "normal mode" turrets, second lines

  },
  damageFail: {
    'DelubrumSav Avowed Heat Shock': '5927',
    // too much heat or failing to regulate temperature
    'DelubrumSav Avowed Cold Shock': '5928',
    // too much cold or failing to regulate temperature
    'DelubrumSav Queen Queen\'s Justice': '59EB',
    // failing to walk the right number of squares
    'DelubrumSav Queen Gunnhildr\'s Blades': '5B22',
    // not being in the chess blue safe square
    'DelubrumSav Queen Unlucky Lot': '55B6' // lightning orb attack

  },
  gainsEffectWarn: {
    'DelubrumSav Seeker Merciful Moon': '262' // "Petrification" from Aetherial Orb lookaway

  },
  shareWarn: {
    'DelubrumSav Seeker Phantom Baleful Onslaught': '5AD6',
    // solo tank cleave
    'DelubrumSav Lord Foe Splitter': '57D7' // tank cleave

  },
  triggers: [{
    // These ability ids can be ordered differently and "hit" people when levitating.
    id: 'DelubrumSav Guard Lots Cast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['5827', '5828', '5B6C', '5B6D', '5BB6', '5BB7', '5B88', '5B89'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.flags.slice(-2) === '03',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'DelubrumSav Golem Compaction',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5746'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: `${matches.source}: ${matches.ability}`
      };
    }
  }, {
    id: 'DelubrumSav Slime Sanguine Fusion',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '554D'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: `${matches.source}: ${matches.ability}`
      };
    }
  }]
};
/* harmony default export */ const delubrum_reginae_savage = (delubrum_reginae_savage_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e10n.ts

const e10n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseLitany */.Z.EdensPromiseLitany,
  damageWarn: {
    'E10N Forward Implosion': '56B4',
    // howl boss implosion
    'E10N Forward Shadow Implosion': '56B5',
    // howl shadow implosion
    'E10N Backward Implosion': '56B7',
    // tail boss implosion
    'E10N Backward Shadow Implosion': '56B8',
    // tail shadow implosion
    'E10N Barbs Of Agony 1': '56D9',
    // Shadow Warrior 3 dog room cleave
    'E10N Barbs Of Agony 2': '5B26',
    // Shadow Warrior 3 dog room cleave
    'E10N Cloak Of Shadows': '5B11',
    // non-squiggly line explosions
    'E10N Throne Of Shadow': '56C7',
    // standing up get out
    'E10N Right Giga Slash': '56AE',
    // boss right giga slash
    'E10N Right Shadow Slash': '56AF',
    // giga slash from shadow
    'E10N Left Giga Slash': '56B1',
    // boss left giga slash
    'E10N Left Shadow Slash': '56BD',
    // giga slash from shadow
    'E10N Shadowy Eruption': '56E1' // baited ground aoe markers paired with barbs

  },
  shareWarn: {
    'E10N Shadow\'s Edge': '56DB' // Tankbuster single target followup

  }
};
/* harmony default export */ const e10n = (e10n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e10s.ts



// TODO: hitting shadow of the hero with abilities can cause you to take damage, list those?
//       e.g. picking up your first pitch bog puddle will cause you to die to the damage
//       your shadow takes from Deepshadow Nova or Distant Scream.
// TODO: 573B Blighting Blitz issues during limit cut numbers
const e10s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseLitanySavage */.Z.EdensPromiseLitanySavage,
  damageWarn: {
    'E10S Implosion Single 1': '56F2',
    // single tail up shadow implosion
    'E10S Implosion Single 2': '56EF',
    // single howl shadow implosion
    'E10S Implosion Quadruple 1': '56EF',
    // quadruple set of shadow implosions
    'E10S Implosion Quadruple 2': '56F2',
    // quadruple set of shadow implosions
    'E10S Giga Slash Single 1': '56EC',
    // Giga slash single from shadow
    'E10S Giga Slash Single 2': '56ED',
    // Giga slash single from shadow
    'E10S Giga Slash Box 1': '5709',
    // Giga slash box from four ground shadows
    'E10S Giga Slash Box 2': '570D',
    // Giga slash box from four ground shadows
    'E10S Giga Slash Quadruple 1': '56EC',
    // quadruple set of giga slash cleaves
    'E10S Giga Slash Quadruple 2': '56E9',
    // quadruple set of giga slash cleaves
    'E10S Cloak Of Shadows 1': '5B13',
    // initial non-squiggly line explosions
    'E10S Cloak Of Shadows 2': '5B14',
    // second squiggly line explosions
    'E10S Throne Of Shadow': '5717',
    // standing up get out
    'E10S Shadowy Eruption': '5738' // baited ground aoe during amplifier

  },
  damageFail: {
    'E10S Swath Of Silence 1': '571A',
    // Shadow clone cleave (too close)
    'E10S Swath Of Silence 2': '5BBF' // Shadow clone cleave (timed)

  },
  shareWarn: {
    'E10S Shadefire': '5732',
    // purple tank umbral orbs
    'E10S Pitch Bog': '5722' // marker spread that drops a shadow puddle

  },
  shareFail: {
    'E10S Shadow\'s Edge': '5725' // Tankbuster single target followup

  },
  triggers: [{
    id: 'E10S Damage Down Orbs',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Flameshadow',
      effectId: '82C'
    }),
    netRegexDe: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Schattenflamme',
      effectId: '82C'
    }),
    netRegexFr: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Flamme ombrale',
      effectId: '82C'
    }),
    netRegexJa: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'シャドウフレイム',
      effectId: '82C'
    }),
    netRegexCn: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影烈火',
      effectId: '82C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: `${matches.effect} (partial stack)`
      };
    }
  }, {
    id: 'E10S Damage Down Boss',
    type: 'GainsEffect',
    // Shackles being messed up appear to just give the Damage Down, with nothing else.
    // Messing up towers is the Thrice-Come Ruin effect (9E2), but also Damage Down.
    // TODO: some of these will be duplicated with others, like `E10S Throne Of Shadow`.
    // Maybe it'd be nice to figure out how to put the damage marker on that?
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Shadowkeeper',
      effectId: '82C'
    }),
    netRegexDe: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Schattenkönig',
      effectId: '82C'
    }),
    netRegexFr: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Roi De L\'Ombre',
      effectId: '82C'
    }),
    netRegexJa: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影の王',
      effectId: '82C'
    }),
    netRegexCn: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影之王',
      effectId: '82C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: `${matches.effect}`
      };
    }
  }, {
    // Shadow Warrior 4 dog room cleave
    // This can be mitigated by the whole group, so add a damage condition.
    id: 'E10S Barbs Of Agony',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['572A', '5B27'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e10s = (e10s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e11n.ts


const e11n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseAnamorphosis */.Z.EdensPromiseAnamorphosis,
  damageWarn: {
    'E11N Burnt Strike Lightning': '562E',
    // Line cleave
    'E11N Burnt Strike Fire': '562C',
    // Line cleave
    'E11N Burnt Strike Holy': '5630',
    // Line cleave
    'E11N Burnout': '562F',
    // Burnt Strike lightning expansion
    'E11N Shining Blade': '5631',
    // Baited explosion
    'E11N Halo Of Flame Brightfire': '563B',
    // Red circle intermission explosion
    'E11N Halo Of Levin Brightfire': '563C',
    // Blue circle intermission explosion
    'E11N Resounding Crack': '564D',
    // Demi-Gukumatz 270 degree frontal cleave
    'E11N Image Burnt Strike Lightning': '5645',
    // Fate Breaker's Image line cleave
    'E11N Image Burnt Strike Fire': '5643',
    // Fate Breaker's Image line cleave
    'E11N Image Burnout': '5646' // Fate Breaker's Image lightning expansion

  },
  damageFail: {
    'E11N Blasting Zone': '563E' // Prismatic Deception charges

  },
  shareWarn: {
    'E11N Burn Mark': '564F' // Powder Mark debuff explosion

  },
  triggers: [{
    id: 'E11N Blastburn Knocked Off',
    type: 'Ability',
    // 562D = Burnt Strike fire followup during most of the fight
    // 5644 = same thing, but from Fatebreaker's Image
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['562D', '5644']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e11n = (e11n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e11s.ts


// 565A/568D Sinsmoke Bound Of Faith share
// 565E/5699 Bowshock hits target of 565D (twice) and two others
const e11s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseAnamorphosisSavage */.Z.EdensPromiseAnamorphosisSavage,
  damageWarn: {
    'E11S Burnt Strike Fire': '5652',
    // Line cleave
    'E11S Burnt Strike Lightning': '5654',
    // Line cleave
    'E11S Burnt Strike Holy': '5656',
    // Line cleave
    'E11S Shining Blade': '5657',
    // Baited explosion
    'E11S Burnt Strike Cycle Fire': '568E',
    // Line cleave during Cycle
    'E11S Burnt Strike Cycle Lightning': '5695',
    // Line cleave during Cycle
    'E11S Burnt Strike Cycle Holy': '569D',
    // Line cleave during Cycle
    'E11S Shining Blade Cycle': '569E',
    // Baited explosion during Cycle
    'E11S Halo Of Flame Brightfire': '566D',
    // Red circle intermission explosion
    'E11S Halo Of Levin Brightfire': '566C',
    // Blue circle intermission explosion
    'E11S Portal Of Flame Bright Pulse': '5671',
    // Red card intermission explosion
    'E11S Portal Of Levin Bright Pulse': '5670',
    // Blue card intermission explosion
    'E11S Resonant Winds': '5689',
    // Demi-Gukumatz "get in"
    'E11S Resounding Crack': '5688',
    // Demi-Gukumatz 270 degree frontal cleave
    'E11S Image Burnt Strike Lightning': '567B',
    // Fate Breaker's Image line cleave
    'E11N Image Burnout': '567C',
    // Fate Breaker's Image lightning expansion
    'E11N Image Burnt Strike Fire': '5679',
    // Fate Breaker's Image line cleave
    'E11N Image Burnt Strike Holy': '567B',
    // Fate Breaker's Image line cleave
    'E11N Image Shining Blade': '567E' // Fate Breaker's Image baited explosion

  },
  damageFail: {
    'E11S Burnout': '5655',
    // Burnt Strike lightning expansion
    'E11S Burnout Cycle': '5696',
    // Burnt Strike lightning expansion
    'E11S Blasting Zone': '5674' // Prismatic Deception charges

  },
  shareWarn: {
    'E11S Elemental Break': '5664',
    // Elemental Break protean
    'E11S Elemental Break Cycle': '568C',
    // Elemental Break protean during Cycle
    'E11S Sinsmite': '5667',
    // Lightning Elemental Break spread
    'E11S Sinsmite Cycle': '5694' // Lightning Elemental Break spread during Cycle

  },
  shareFail: {
    'E11S Burn Mark': '56A3',
    // Powder Mark debuff explosion
    'E11S Sinsight 1': '5661',
    // Holy Bound Of Faith tether
    'E11S Sinsight 2': '5BC7',
    // Holy Bound Of Faith tether from Fatebreaker's Image
    'E11S Sinsight 3': '56A0' // Holy Bound Of Faith tether during Cycle

  },
  soloFail: {
    'E11S Holy Sinsight Group Share': '5669'
  },
  triggers: [{
    id: 'E11S Blastburn Knocked Off',
    type: 'Ability',
    // 5653 = Burnt Strike fire followup during most of the fight
    // 567A = same thing, but from Fatebreaker's Image
    // 568F = same thing, but during Cycle of Faith
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5653', '567A', '568F']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e11s = (e11s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e12n.ts

const e12n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseEternity */.Z.EdensPromiseEternity,
  damageWarn: {
    'E12N Judgment Jolt Single': '585F',
    // Ramuh get out cast
    'E12N Judgment Jolt': '4E30',
    // Ramuh get out cast
    'E12N Temporary Current Single': '585C',
    // Levi get under cast
    'E12N Temporary Current': '4E2D',
    // Levi get under cast
    'E12N Conflag Strike Single': '585D',
    // Ifrit get sides cast
    'E12N Conflag Strike': '4E2E',
    // Ifrit get sides cast
    'E12N Ferostorm Single': '585E',
    // Garuda get intercardinals cast
    'E12N Ferostorm': '4E2F',
    // Garuda get intercardinals cast
    'E12N Rapturous Reach 1': '5878',
    // Haircut
    'E12N Rapturous Reach 2': '5877',
    // Haircut
    'E12N Bomb Explosion': '586D',
    // Small bomb explosion
    'E12N Titanic Bomb Explosion': '586F' // Large bomb explosion

  },
  shareWarn: {
    'E12N Earthshaker': '5885',
    // Earthshaker on first platform
    'E12N Promise Frigid Stone 1': '5867',
    // Shiva spread with sliding
    'E12N Promise Frigid Stone 2': '5869' // Shiva spread with Rapturous Reach

  }
};
/* harmony default export */ const e12n = (e12n_triggerSet);
// EXTERNAL MODULE: ./resources/not_reached.ts
var not_reached = __webpack_require__(3062);
// EXTERNAL MODULE: ./resources/outputs.ts
var outputs = __webpack_require__(1081);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e12s.ts





// TODO: add separate damageWarn-esque icon for damage downs?
// TODO: 58A6 Under The Weight / 58B2 Classical Sculpture missing somebody in party warning?
// TODO: 58CA Dark Water III / 58C5 Shell Crusher should hit everyone in party
// TODO: Dark Aero III 58D4 should not be a share except on advanced relativity for double aero.
// (for gains effect, single aero = ~23 seconds, double aero = ~31 seconds duration)
// Due to changes introduced in patch 5.2, overhead markers now have a random offset
// added to their ID. This offset currently appears to be set per instance, so
// we can determine what it is from the first overhead marker we see.
// The first 1B marker in the encounter is the formless tankbuster, ID 004F.
const firstHeadmarker = parseInt('00DA', 16);

const getHeadmarkerId = (data, matches) => {
  // If we naively just check !data.decOffset and leave it, it breaks if the first marker is 00DA.
  // (This makes the offset 0, and !0 is true.)
  if (typeof data.decOffset === 'undefined') data.decOffset = parseInt(matches.id, 16) - firstHeadmarker; // The leading zeroes are stripped when converting back to string, so we re-add them here.
  // Fortunately, we don't have to worry about whether or not this is robust,
  // since we know all the IDs that will be present in the encounter.

  return (parseInt(matches.id, 16) - data.decOffset).toString(16).toUpperCase().padStart(4, '0');
};

const e12s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseEternitySavage */.Z.EdensPromiseEternitySavage,
  damageWarn: {
    'E12S Promise Rapturous Reach Left': '58AD',
    // Haircut with left safe side
    'E12S Promise Rapturous Reach Right': '58AE',
    // Haircut with right safe side
    'E12S Promise Temporary Current': '4E44',
    // Levi get under cast (damage down)
    'E12S Promise Conflag Strike': '4E45',
    // Ifrit get sides cast (damage down)
    'E12S Promise Ferostorm': '4E46',
    // Garuda get intercardinals cast (damage down)
    'E12S Promise Judgment Jolt': '4E47',
    // Ramuh get out cast (damage down)
    'E12S Promise Shatter': '589C',
    // Ice Pillar explosion if tether not gotten
    'E12S Promise Impact': '58A1',
    // Titan bomb drop
    'E12S Oracle Dark Blizzard III': '58D3',
    // Relativity donut mechanic
    'E12S Oracle Apocalypse': '58E6' // Light up circle explosions (damage down)

  },
  damageFail: {
    'E12S Oracle Maelstrom': '58DA' // Advanced Relativity traffic light aoe

  },
  gainsEffectFail: {
    'E12S Oracle Doom': '9D4' // Relativity punishment for multiple mistakes

  },
  shareWarn: {
    'E12S Promise Frigid Stone': '589E',
    // Shiva spread
    'E12S Oracle Darkest Dance': '4E33',
    // Farthest target bait + jump before knockback
    'E12S Oracle Dark Current': '58D8',
    // Baited traffic light lasers
    'E12S Oracle Spirit Taker': '58C6',
    // Random jump spread mechanic after Shell Crusher
    'E12S Oracle Somber Dance 1': '58BF',
    // Farthest target bait for Dual Apocalypse
    'E12S Oracle Somber Dance 2': '58C0' // Second somber dance jump

  },
  shareFail: {
    'E12S Promise Weight Of The World': '58A5',
    // Titan bomb blue marker
    'E12S Promise Pulse Of The Land': '58A3',
    // Titan bomb yellow marker
    'E12S Oracle Dark Eruption 1': '58CE',
    // Initial warmup spread mechanic
    'E12S Oracle Dark Eruption 2': '58CD',
    // Relativity spread mechanic
    'E12S Oracle Black Halo': '58C7' // Tankbuster cleave

  },
  soloWarn: {
    'E12S Promise Force Of The Land': '58A4'
  },
  triggers: [{
    // Big circle ground aoes during Shiva junction.
    // This can be shielded through as long as that person doesn't stack.
    id: 'E12S Icicle Impact',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4E5A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'E12S Headmarker',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({}),
    run: (data, matches) => {
      const id = getHeadmarkerId(data, matches);
      const firstLaserMarker = '0091';
      const lastLaserMarker = '0098';

      if (id >= firstLaserMarker && id <= lastLaserMarker) {
        var _data$laserNameToNum;

        // ids are sequential: #1 square, #2 square, #3 square, #4 square, #1 triangle etc
        const decOffset = parseInt(id, 16) - parseInt(firstLaserMarker, 16); // decOffset is 0-7, so map 0-3 to 1-4 and 4-7 to 1-4.

        (_data$laserNameToNum = data.laserNameToNum) !== null && _data$laserNameToNum !== void 0 ? _data$laserNameToNum : data.laserNameToNum = {};
        data.laserNameToNum[matches.target] = decOffset % 4 + 1;
      }
    }
  }, {
    // These sculptures are added at the start of the fight, so we need to check where they
    // use the "Classical Sculpture" ability and end up on the arena for real.
    id: 'E12S Promise Chiseled Sculpture Classical Sculpture',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Chiseled Sculpture',
      id: '58B2'
    }),
    run: (data, matches) => {
      var _data$sculptureYPosit;

      // This will run per person that gets hit by the same sculpture, but that's fine.
      // Record the y position of each sculpture so we can use it for better text later.
      (_data$sculptureYPosit = data.sculptureYPositions) !== null && _data$sculptureYPosit !== void 0 ? _data$sculptureYPosit : data.sculptureYPositions = {};
      data.sculptureYPositions[matches.sourceId.toUpperCase()] = parseFloat(matches.y);
    }
  }, {
    // The source of the tether is the player, the target is the sculpture.
    id: 'E12S Promise Chiseled Sculpture Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      target: 'Chiseled Sculpture',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$sculptureTether;

      (_data$sculptureTether = data.sculptureTetherNameToId) !== null && _data$sculptureTether !== void 0 ? _data$sculptureTether : data.sculptureTetherNameToId = {};
      data.sculptureTetherNameToId[matches.source] = matches.targetId.toUpperCase();
    }
  }, {
    id: 'E12S Promise Blade Of Flame Counter',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Chiseled Sculpture',
      id: '58B3'
    }),
    delaySeconds: 1,
    suppressSeconds: 1,
    run: data => {
      data.bladeOfFlameCount = data.bladeOfFlameCount || 0;
      data.bladeOfFlameCount++;
    }
  }, {
    // This is the Chiseled Sculpture laser with the limit cut dots.
    id: 'E12S Promise Blade Of Flame',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      type: '22',
      source: 'Chiseled Sculpture',
      id: '58B3'
    }),
    mistake: (data, matches) => {
      if (!data.laserNameToNum || !data.sculptureTetherNameToId || !data.sculptureYPositions) return; // Find the person who has this laser number and is tethered to this statue.

      const number = (data.bladeOfFlameCount || 0) + 1;
      const sourceId = matches.sourceId.toUpperCase();
      const names = Object.keys(data.laserNameToNum);
      const withNum = names.filter(name => {
        var _data$laserNameToNum2;

        return ((_data$laserNameToNum2 = data.laserNameToNum) === null || _data$laserNameToNum2 === void 0 ? void 0 : _data$laserNameToNum2[name]) === number;
      });
      const owners = withNum.filter(name => {
        var _data$sculptureTether2;

        return ((_data$sculptureTether2 = data.sculptureTetherNameToId) === null || _data$sculptureTether2 === void 0 ? void 0 : _data$sculptureTether2[name]) === sourceId;
      }); // if some logic error, just abort.

      if (owners.length !== 1) return; // The owner hitting themselves isn't a mistake...technically.

      if (owners[0] === matches.target) return; // Now try to figure out which statue is which.
      // People can put these wherever.  They could go sideways, or diagonal, or whatever.
      // It seems mooooost people put these north / south (on the south edge of the arena).
      // Let's say a minimum of 2 yalms apart in the y direction to consider them "north/south".

      const minimumYalmsForStatues = 2;
      let isStatuePositionKnown = false;
      let isStatueNorth = false;
      const sculptureIds = Object.keys(data.sculptureYPositions);

      if (sculptureIds.length === 2 && sculptureIds.includes(sourceId)) {
        const otherId = sculptureIds[0] === sourceId ? sculptureIds[1] : sculptureIds[0];
        const sourceY = data.sculptureYPositions[sourceId];
        const otherY = data.sculptureYPositions[otherId !== null && otherId !== void 0 ? otherId : ''];
        if (sourceY === undefined || otherY === undefined || otherId === undefined) throw new not_reached/* UnreachableCode */.$();
        const yDiff = Math.abs(sourceY - otherY);

        if (yDiff > minimumYalmsForStatues) {
          isStatuePositionKnown = true;
          isStatueNorth = sourceY < otherY;
        }
      }

      const owner = owners[0];
      const ownerNick = data.ShortName(owner);
      let text = {
        en: `${matches.ability} (from ${ownerNick}, #${number})`,
        de: `${matches.ability} (von ${ownerNick}, #${number})`,
        ja: `${matches.ability} (${ownerNick}から、#${number})`,
        cn: `${matches.ability} (来自${ownerNick}，#${number})`,
        ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번)`
      };

      if (isStatuePositionKnown && isStatueNorth) {
        text = {
          en: `${matches.ability} (from ${ownerNick}, #${number} north)`,
          de: `${matches.ability} (von ${ownerNick}, #${number} norden)`,
          ja: `${matches.ability} (北の${ownerNick}から、#${number})`,
          cn: `${matches.ability} (来自北方${ownerNick}，#${number})`,
          ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번 북쪽)`
        };
      } else if (isStatuePositionKnown && !isStatueNorth) {
        text = {
          en: `${matches.ability} (from ${ownerNick}, #${number} south)`,
          de: `${matches.ability} (von ${ownerNick}, #${number} Süden)`,
          ja: `${matches.ability} (南の${ownerNick}から、#${number})`,
          cn: `${matches.ability} (来自南方${ownerNick}，#${number})`,
          ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번 남쪽)`
        };
      }

      return {
        type: 'fail',
        name: matches.target,
        blame: owner,
        reportId: matches.targetId,
        text: text
      };
    }
  }, {
    id: 'E12S Promise Ice Pillar Tracker',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Ice Pillar',
      id: ['0001', '0039']
    }),
    run: (data, matches) => {
      var _data$pillarIdToOwner;

      (_data$pillarIdToOwner = data.pillarIdToOwner) !== null && _data$pillarIdToOwner !== void 0 ? _data$pillarIdToOwner : data.pillarIdToOwner = {};
      data.pillarIdToOwner[matches.sourceId] = matches.target;
    }
  }, {
    id: 'E12S Promise Ice Pillar Mistake',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Ice Pillar',
      id: '589B'
    }),
    condition: (data, matches) => {
      if (!data.pillarIdToOwner) return false;
      return matches.target !== data.pillarIdToOwner[matches.sourceId];
    },
    mistake: (data, matches) => {
      var _data$pillarIdToOwner2;

      const pillarOwner = data.ShortName((_data$pillarIdToOwner2 = data.pillarIdToOwner) === null || _data$pillarIdToOwner2 === void 0 ? void 0 : _data$pillarIdToOwner2[matches.sourceId]);
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (from ${pillarOwner})`,
          de: `${matches.ability} (von ${pillarOwner})`,
          fr: `${matches.ability} (de ${pillarOwner})`,
          ja: `${matches.ability} (${pillarOwner}から)`,
          cn: `${matches.ability} (来自${pillarOwner})`,
          ko: `${matches.ability} (대상자 "${pillarOwner}")`
        }
      };
    }
  }, {
    id: 'E12S Promise Gain Fire Resistance Down II',
    type: 'GainsEffect',
    // The Beastly Sculpture gives a 3 second debuff, the Regal Sculpture gives a 14s one.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '832'
    }),
    run: (data, matches) => {
      var _data$fire;

      (_data$fire = data.fire) !== null && _data$fire !== void 0 ? _data$fire : data.fire = {};
      data.fire[matches.target] = true;
    }
  }, {
    id: 'E12S Promise Lose Fire Resistance Down II',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '832'
    }),
    run: (data, matches) => {
      var _data$fire2;

      (_data$fire2 = data.fire) !== null && _data$fire2 !== void 0 ? _data$fire2 : data.fire = {};
      data.fire[matches.target] = false;
    }
  }, {
    id: 'E12S Promise Small Lion Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Beastly Sculpture',
      id: '0011'
    }),
    netRegexDe: netregexes/* default.tether */.Z.tether({
      source: 'Abbild Eines Löwen',
      id: '0011'
    }),
    netRegexFr: netregexes/* default.tether */.Z.tether({
      source: 'Création Léonine',
      id: '0011'
    }),
    netRegexJa: netregexes/* default.tether */.Z.tether({
      source: '創られた獅子',
      id: '0011'
    }),
    netRegexCn: netregexes/* default.tether */.Z.tether({
      source: '被创造的狮子',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$smallLionIdToOw, _data$smallLionOwners;

      (_data$smallLionIdToOw = data.smallLionIdToOwner) !== null && _data$smallLionIdToOw !== void 0 ? _data$smallLionIdToOw : data.smallLionIdToOwner = {};
      data.smallLionIdToOwner[matches.sourceId.toUpperCase()] = matches.target;
      (_data$smallLionOwners = data.smallLionOwners) !== null && _data$smallLionOwners !== void 0 ? _data$smallLionOwners : data.smallLionOwners = [];
      data.smallLionOwners.push(matches.target);
    }
  }, {
    id: 'E12S Promise Small Lion Lionsblaze',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Beastly Sculpture',
      id: '58B9'
    }),
    netRegexDe: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Abbild Eines Löwen',
      id: '58B9'
    }),
    netRegexFr: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Création Léonine',
      id: '58B9'
    }),
    netRegexJa: netregexes/* default.abilityFull */.Z.abilityFull({
      source: '創られた獅子',
      id: '58B9'
    }),
    netRegexCn: netregexes/* default.abilityFull */.Z.abilityFull({
      source: '被创造的狮子',
      id: '58B9'
    }),
    mistake: (data, matches) => {
      var _data$smallLionIdToOw2;

      // Folks baiting the big lion second can take the first small lion hit,
      // so it's not sufficient to check only the owner.
      if (!data.smallLionOwners) return;
      const owner = (_data$smallLionIdToOw2 = data.smallLionIdToOwner) === null || _data$smallLionIdToOw2 === void 0 ? void 0 : _data$smallLionIdToOw2[matches.sourceId.toUpperCase()];
      if (!owner) return;
      if (matches.target === owner) return; // If the target also has a small lion tether, that is always a mistake.
      // Otherwise, it's only a mistake if the target has a fire debuff.

      const hasSmallLion = data.smallLionOwners.includes(matches.target);
      const hasFireDebuff = data.fire && data.fire[matches.target];

      if (hasSmallLion || hasFireDebuff) {
        const ownerNick = data.ShortName(owner);
        const centerY = -75;
        const x = parseFloat(matches.x);
        const y = parseFloat(matches.y);
        let dirObj = null;

        if (y < centerY) {
          if (x > 0) dirObj = outputs/* default.dirNE */.Z.dirNE;else dirObj = outputs/* default.dirNW */.Z.dirNW;
        } else {
          if (x > 0) dirObj = outputs/* default.dirSE */.Z.dirSE;else dirObj = outputs/* default.dirSW */.Z.dirSW;
        }

        return {
          type: 'fail',
          blame: owner,
          name: matches.target,
          reportId: matches.targetId,
          text: {
            en: `${matches.ability} (from ${ownerNick}, ${dirObj['en']})`,
            de: `${matches.ability} (von ${ownerNick}, ${dirObj['de']})`,
            fr: `${matches.ability} (de ${ownerNick}, ${dirObj['fr']})`,
            ja: `${matches.ability} (${ownerNick}から, ${dirObj['ja']})`,
            cn: `${matches.ability} (来自${ownerNick}, ${dirObj['cn']}`,
            ko: `${matches.ability} (대상자 "${ownerNick}", ${dirObj['ko']})`
          }
        };
      }
    }
  }, {
    id: 'E12S Promise North Big Lion',
    type: 'AddedCombatant',
    netRegex: netregexes/* default.addedCombatantFull */.Z.addedCombatantFull({
      name: 'Regal Sculpture'
    }),
    run: (data, matches) => {
      const y = parseFloat(matches.y);
      const centerY = -75;
      if (y < centerY) data.northBigLion = matches.id.toUpperCase();
    }
  }, {
    id: 'E12S Promise Big Lion Kingsblaze',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Regal Sculpture',
      id: '4F9E'
    }),
    netRegexDe: netregexes/* default.ability */.Z.ability({
      source: 'Abbild eines großen Löwen',
      id: '4F9E'
    }),
    netRegexFr: netregexes/* default.ability */.Z.ability({
      source: 'création léonine royale',
      id: '4F9E'
    }),
    netRegexJa: netregexes/* default.ability */.Z.ability({
      source: '創られた獅子王',
      id: '4F9E'
    }),
    netRegexCn: netregexes/* default.ability */.Z.ability({
      source: '被创造的狮子王',
      id: '4F9E'
    }),
    mistake: (data, matches) => {
      var _shared$lang, _fireDebuff$lang;

      const singleTarget = matches.type === '21';
      const hasFireDebuff = data.fire && data.fire[matches.target]; // Success if only one person takes it and they have no fire debuff.

      if (singleTarget && !hasFireDebuff) return;
      const northBigLion = {
        en: 'north big lion',
        de: 'Nordem, großer Löwe',
        ja: '大ライオン(北)',
        cn: '北方大狮子',
        ko: '북쪽 큰 사자'
      };
      const southBigLion = {
        en: 'south big lion',
        de: 'Süden, großer Löwe',
        ja: '大ライオン(南)',
        cn: '南方大狮子',
        ko: '남쪽 큰 사자'
      };
      const shared = {
        en: 'shared',
        de: 'geteilt',
        ja: '重ねた',
        cn: '重叠',
        ko: '같이 맞음'
      };
      const fireDebuff = {
        en: 'had fire',
        de: 'hatte Feuer',
        ja: '炎付き',
        cn: '火Debuff',
        ko: '화염 디버프 받음'
      };
      const labels = [];
      const lang = data.options.ParserLanguage;

      if (data.northBigLion) {
        var _northBigLion$lang, _southBigLion$lang;

        if (data.northBigLion === matches.sourceId) labels.push((_northBigLion$lang = northBigLion[lang]) !== null && _northBigLion$lang !== void 0 ? _northBigLion$lang : northBigLion['en']);else labels.push((_southBigLion$lang = southBigLion[lang]) !== null && _southBigLion$lang !== void 0 ? _southBigLion$lang : southBigLion['en']);
      }

      if (!singleTarget) labels.push((_shared$lang = shared[lang]) !== null && _shared$lang !== void 0 ? _shared$lang : shared['en']);
      if (hasFireDebuff) labels.push((_fireDebuff$lang = fireDebuff[lang]) !== null && _fireDebuff$lang !== void 0 ? _fireDebuff$lang : fireDebuff['en']);
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: `${matches.ability} (${labels.join(', ')})`
      };
    }
  }, {
    id: 'E12S Knocked Off',
    type: 'Ability',
    // 589A = Ice Pillar (promise shiva phase)
    // 58B6 = Palm Of Temperance (promise statue hand)
    // 58B7 = Laser Eye (promise lion phase)
    // 58C1 = Darkest Dance (oracle tank jump + knockback in beginning and triple apoc)
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['589A', '58B6', '58B7', '58C1']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'E12S Oracle Shadoweye',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '58D2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e12s = (e12s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e1n.ts

const e1n_triggerSet = {
  zoneId: zone_id/* default.EdensGateResurrection */.Z.EdensGateResurrection,
  damageWarn: {
    'E1N Eden\'s Thunder III': '44ED',
    'E1N Eden\'s Blizzard III': '44EC',
    'E1N Pure Beam': '3D9E',
    'E1N Paradise Lost': '3DA0'
  },
  damageFail: {
    'E1N Eden\'s Flare': '3D97',
    'E1N Pure Light': '3DA3'
  },
  shareFail: {
    'E1N Fire III': '44EB',
    'E1N Vice Of Vanity': '44E7',
    // tank lasers
    'E1N Vice Of Apathy': '44E8' // dps puddles

  }
};
/* harmony default export */ const e1n = (e1n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e1s.ts

// TODO: failing to interrupt Mana Boost (3D8D)
// TODO: failing to pass healer debuff?
// TODO: what happens if you don't kill a meteor during four orbs?
const e1s_triggerSet = {
  zoneId: zone_id/* default.EdensGateResurrectionSavage */.Z.EdensGateResurrectionSavage,
  damageWarn: {
    'E1S Eden\'s Thunder III': '44F7',
    'E1S Eden\'s Blizzard III': '44F6',
    'E1S Eden\'s Regained Blizzard III': '44FA',
    'E1S Pure Beam Trident 1': '3D83',
    'E1S Pure Beam Trident 2': '3D84',
    'E1S Paradise Lost': '3D87'
  },
  damageFail: {
    'E1S Eden\'s Flare': '3D73',
    'E1S Pure Light': '3D8A'
  },
  shareFail: {
    'E1S Fire/Thunder III': '44FB',
    'E1S Pure Beam Single': '3D81',
    'E1S Vice Of Vanity': '44F1',
    // tank lasers
    'E1S Vice of Apathy': '44F2' // dps puddles

  }
};
/* harmony default export */ const e1s = (e1s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e2n.ts



// TODO: shadoweye failure (top line fail, bottom line success, effect there too)
// [16:17:35.966] 16:400110FE:Voidwalker:40B7:Shadoweye:10612345:Tini Poutini:F:10000:100190F:
// [16:17:35.966] 16:400110FE:Voidwalker:40B7:Shadoweye:1067890A:Potato Chippy:1:0:1C:8000:
// gains the effect of Petrification from Voidwalker for 10.00 Seconds.
// TODO: puddle failure?
const e2n_triggerSet = {
  zoneId: zone_id/* default.EdensGateDescent */.Z.EdensGateDescent,
  damageWarn: {
    'E2N Doomvoid Slicer': '3E3C',
    'E2N Doomvoid Guillotine': '3E3B'
  },
  triggers: [{
    id: 'E2N Nyx',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3E3D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Booped',
          de: 'Nyx berührt',
          fr: 'Malus de dégâts',
          ja: '雑魚に当たる',
          cn: '吃头了',
          ko: '닉스'
        }
      };
    }
  }]
};
/* harmony default export */ const e2n = (e2n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e2s.ts



// TODO: shadoweye failure
// TODO: Empty Hate (3E59/3E5A) hits everybody, so hard to tell about knockback
// TODO: maybe mark hell wind people who got clipped by stack?
// TODO: missing puddles?
// TODO: missing light/dark circle stack
const e2s_triggerSet = {
  zoneId: zone_id/* default.EdensGateDescentSavage */.Z.EdensGateDescentSavage,
  damageWarn: {
    'E2S Doomvoid Slicer': '3E50',
    'E3S Empty Rage': '3E6C',
    'E3S Doomvoid Guillotine': '3E4F'
  },
  shareWarn: {
    'E2S Doomvoid Cleaver': '3E64'
  },
  triggers: [{
    id: 'E2S Shadoweye',
    type: 'GainsEffect',
    // Stone Curse
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '589'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'E2S Nyx',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3E51',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Booped',
          de: 'Nyx berührt',
          fr: 'Malus de dégâts',
          ja: '雑魚に当たる',
          cn: '吃头了',
          ko: '닉스'
        }
      };
    }
  }]
};
/* harmony default export */ const e2s = (e2s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e3n.ts

const e3n_triggerSet = {
  zoneId: zone_id/* default.EdensGateInundation */.Z.EdensGateInundation,
  damageWarn: {
    'E3N Monster Wave 1': '3FCA',
    'E3N Monster Wave 2': '3FE9',
    'E3N Maelstrom': '3FD9',
    'E3N Swirling Tsunami': '3FD5'
  },
  damageFail: {
    'E3N Temporary Current 1': '3FCE',
    'E3N Temporary Current 2': '3FCD',
    'E3N Spinning Dive': '3FDB'
  },
  shareFail: {
    'E3N Rip Current': '3FC7'
  }
};
/* harmony default export */ const e3n = (e3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e3s.ts

// TODO: Scouring Tsunami (3CE0) on somebody other than target
// TODO: Sweeping Tsunami (3FF5) on somebody other than tanks
// TODO: Rip Current (3FE0, 3FE1) on somebody other than target/tanks
// TODO: Boiled Alive (4006) is failing puddles???
// TODO: failing to cleanse Splashing Waters
// TODO: does getting hit by undersea quake cause an ability?
const e3s_triggerSet = {
  zoneId: zone_id/* default.EdensGateInundationSavage */.Z.EdensGateInundationSavage,
  damageWarn: {
    'E3S Monster Wave 1': '3FE5',
    'E3S Monster Wave 2': '3FE9',
    'E3S Maelstrom': '3FFB',
    'E3S Swirling Tsunami': '3FF4'
  },
  damageFail: {
    'E3S Temporary Current 1': '3FEA',
    'E3S Temporary Current 2': '3FEB',
    'E3S Temporary Current 3': '3FEC',
    'E3S Temporary Current 4': '3FED',
    'E3S Spinning Dive': '3FFD'
  }
};
/* harmony default export */ const e3s = (e3s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e4n.ts

const e4n_triggerSet = {
  zoneId: zone_id/* default.EdensGateSepulture */.Z.EdensGateSepulture,
  damageWarn: {
    'E4N Weight of the Land': '40EB',
    'E4N Evil Earth': '40EF',
    'E4N Aftershock 1': '41B4',
    'E4N Aftershock 2': '40F0',
    'E4N Explosion 1': '40ED',
    'E4N Explosion 2': '40F5',
    'E4N Landslide': '411B',
    'E4N Rightward Landslide': '4100',
    'E4N Leftward Landslide': '40FF',
    'E4N Massive Landslide': '40FC',
    'E4N Seismic Wave': '40F3',
    'E4N Fault Line': '4101'
  }
};
/* harmony default export */ const e4n = (e4n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e4s.ts



// TODO: could track people get hitting by markers they shouldn't
// TODO: could track non-tanks getting hit by tankbusters, megaliths
// TODO: could track non-target getting hit by tankbuster
const e4s_triggerSet = {
  zoneId: zone_id/* default.EdensGateSepultureSavage */.Z.EdensGateSepultureSavage,
  damageWarn: {
    'E4S Weight of the Land': '4108',
    'E4S Evil Earth': '410C',
    'E4S Aftershock 1': '41B5',
    'E4S Aftershock 2': '410D',
    'E4S Explosion': '410A',
    'E4S Landslide': '411B',
    'E4S Rightward Landslide': '411D',
    'E4S Leftward Landslide': '411C',
    'E4S Massive Landslide 1': '4118',
    'E4S Massive Landslide 2': '4119',
    'E4S Seismic Wave': '4110'
  },
  damageFail: {
    'E4S Dual Earthen Fists 1': '4135',
    'E4S Dual Earthen Fists 2': '4687',
    'E4S Plate Fracture': '43EA',
    'E4S Earthen Fist 1': '43CA',
    'E4S Earthen Fist 2': '43C9'
  },
  triggers: [{
    id: 'E4S Fault Line Collect',
    type: 'StartsUsing',
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexDe: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexFr: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexJa: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'タイタン'
    }),
    netRegexCn: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: '泰坦'
    }),
    netRegexKo: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: '타이탄'
    }),
    run: (data, matches) => {
      data.faultLineTarget = matches.target;
    }
  }, {
    id: 'E4S Fault Line',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '411E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.faultLineTarget !== matches.target,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Run Over',
          de: 'Wurde überfahren',
          fr: 'A été écrasé(e)',
          ja: '突進に当たる',
          cn: '被碾了',
          ko: '돌진 맞음'
        }
      };
    }
  }]
};
/* harmony default export */ const e4s = (e4s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e5n.ts



const e5n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFulmination */.Z.EdensVerseFulmination,
  damageWarn: {
    'E5N Impact': '4E3A',
    // Stratospear landing AoE
    'E5N Lightning Bolt': '4B9C',
    // Stormcloud standard attack
    'E5N Gallop': '4B97',
    // Sideways add charge
    'E5N Shock Strike': '4BA1',
    // Small AoE circles during Thunderstorm
    'E5N Volt Strike': '4CF2' // Large AoE circles during Thunderstorm

  },
  damageFail: {
    'E5N Judgment Jolt': '4B8F' // Stratospear explosions

  },
  triggers: [{
    // This happens when a player gets 4+ stacks of orbs. Don't be greedy!
    id: 'E5N Static Condensation',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B5'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Helper for orb pickup failures
    id: 'E5N Orb Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb;

      (_data$hasOrb = data.hasOrb) !== null && _data$hasOrb !== void 0 ? _data$hasOrb : data.hasOrb = {};
      data.hasOrb[matches.target] = true;
    }
  }, {
    id: 'E5N Orb Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb2;

      (_data$hasOrb2 = data.hasOrb) !== null && _data$hasOrb2 !== void 0 ? _data$hasOrb2 : data.hasOrb = {};
      data.hasOrb[matches.target] = false;
    }
  }, {
    id: 'E5N Divine Judgement Volts',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4B9A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (no orb)`,
          de: `${matches.ability} (kein Orb)`,
          fr: `${matches.ability} (pas d'orbe)`,
          ja: `${matches.ability} (雷玉無し)`,
          cn: `${matches.ability} (没吃球)`,
          ko: `${matches.ability} (구슬 안먹음)`
        }
      };
    }
  }, {
    id: 'E5N Stormcloud Target Tracking',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    run: (data, matches) => {
      var _data$cloudMarkers;

      (_data$cloudMarkers = data.cloudMarkers) !== null && _data$cloudMarkers !== void 0 ? _data$cloudMarkers : data.cloudMarkers = [];
      data.cloudMarkers.push(matches.target);
    }
  }, {
    // This ability is seen only if players stacked the clouds instead of spreading them.
    id: 'E5N The Parting Clouds',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4B9D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 30,
    mistake: (data, matches) => {
      for (const name of (_data$cloudMarkers2 = data.cloudMarkers) !== null && _data$cloudMarkers2 !== void 0 ? _data$cloudMarkers2 : []) {
        var _data$cloudMarkers2;

        return {
          type: 'fail',
          blame: name,
          text: {
            en: `${matches.ability} (clouds too close)`,
            de: `${matches.ability} (Wolken zu nahe)`,
            fr: `${matches.ability} (nuages trop proches)`,
            ja: `${matches.ability} (雲近すぎ)`,
            cn: `${matches.ability} (雷云重叠)`,
            ko: `${matches.ability} (구름이 너무 가까움)`
          }
        };
      }
    }
  }, {
    id: 'E5N Stormcloud cleanup',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    delaySeconds: 30,
    // Stormclouds resolve well before this.
    run: data => {
      delete data.cloudMarkers;
    }
  }]
};
/* harmony default export */ const e5n = (e5n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e5s.ts




// TODO: is there a different ability if the shield duty action isn't used properly?
// TODO: is there an ability from Raiden (the bird) if you get eaten?
// TODO: maybe chain lightning warning if you get hit while you have system shock (8B8)
const noOrb = str => {
  return {
    en: str + ' (no orb)',
    de: str + ' (kein Orb)',
    fr: str + ' (pas d\'orbe)',
    ja: str + ' (雷玉無し)',
    cn: str + ' (没吃球)',
    ko: str + ' (구슬 없음)'
  };
};

const e5s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFulminationSavage */.Z.EdensVerseFulminationSavage,
  damageWarn: {
    'E5S Impact': '4E3B',
    // Stratospear landing AoE
    'E5S Gallop': '4BB4',
    // Sideways add charge
    'E5S Shock Strike': '4BC1',
    // Small AoE circles during Thunderstorm
    'E5S Stepped Leader Twister': '4BC7',
    // Twister stepped leader
    'E5S Stepped Leader Donut': '4BC8',
    // Donut stepped leader
    'E5S Shock': '4E3D' // Hated of Levin Stormcloud-cleansable exploding debuff

  },
  damageFail: {
    'E5S Judgment Jolt': '4BA7' // Stratospear explosions

  },
  shareWarn: {
    'E5S Volt Strike Double': '4BC3',
    // Large AoE circles during Thunderstorm
    'E5S Crippling Blow': '4BCA',
    'E5S Chain Lightning Double': '4BC5'
  },
  triggers: [{
    // Helper for orb pickup failures
    id: 'E5S Orb Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb;

      (_data$hasOrb = data.hasOrb) !== null && _data$hasOrb !== void 0 ? _data$hasOrb : data.hasOrb = {};
      data.hasOrb[matches.target] = true;
    }
  }, {
    id: 'E5S Orb Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb2;

      (_data$hasOrb2 = data.hasOrb) !== null && _data$hasOrb2 !== void 0 ? _data$hasOrb2 : data.hasOrb = {};
      data.hasOrb[matches.target] = false;
    }
  }, {
    id: 'E5S Divine Judgement Volts',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB7',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Volt Strike Orb',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BC3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Deadly Discharge Big Knockback',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Lightning Bolt',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB9',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      // Having a non-idempotent condition function is a bit <_<
      // Only consider lightning bolt damage if you have a debuff to clear.
      if (!data.hated || !data.hated[matches.target]) return true;
      delete data.hated[matches.target];
      return false;
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'E5S Hated of Levin',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '00D2'
    }),
    run: (data, matches) => {
      var _data$hated;

      (_data$hated = data.hated) !== null && _data$hated !== void 0 ? _data$hated : data.hated = {};
      data.hated[matches.target] = true;
    }
  }, {
    id: 'E5S Stormcloud Target Tracking',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    run: (data, matches) => {
      var _data$cloudMarkers;

      (_data$cloudMarkers = data.cloudMarkers) !== null && _data$cloudMarkers !== void 0 ? _data$cloudMarkers : data.cloudMarkers = [];
      data.cloudMarkers.push(matches.target);
    }
  }, {
    // This ability is seen only if players stacked the clouds instead of spreading them.
    id: 'E5S The Parting Clouds',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BBA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 30,
    mistake: (data, matches) => {
      for (const name of (_data$cloudMarkers2 = data.cloudMarkers) !== null && _data$cloudMarkers2 !== void 0 ? _data$cloudMarkers2 : []) {
        var _data$cloudMarkers2;

        return {
          type: 'fail',
          blame: name,
          text: {
            en: `${matches.ability} (clouds too close)`,
            de: `${matches.ability} (Wolken zu nahe)`,
            fr: `${matches.ability} (nuages trop proches)`,
            ja: `${matches.ability} (雲近すぎ)`,
            cn: `${matches.ability} (雷云重叠)`,
            ko: `${matches.ability} (구름이 너무 가까움)`
          }
        };
      }
    }
  }, {
    id: 'E5S Stormcloud cleanup',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    // Stormclouds resolve well before this.
    delaySeconds: 30,
    run: data => {
      delete data.cloudMarkers;
      delete data.hated;
    }
  }]
};
/* harmony default export */ const e5s = (e5s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e6n.ts

const e6n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFuror */.Z.EdensVerseFuror,
  damageWarn: {
    'E6N Thorns': '4BDA',
    // AoE markers after Enumeration
    'E6N Ferostorm 1': '4BDD',
    'E6N Ferostorm 2': '4BE5',
    'E6N Storm Of Fury 1': '4BE0',
    // Circle AoE during tethers--Garuda
    'E6N Storm Of Fury 2': '4BE6',
    // Circle AoE during tethers--Raktapaksa
    'E6N Explosion': '4BE2',
    // AoE circles, Garuda orbs
    'E6N Heat Burst': '4BEC',
    'E6N Conflag Strike': '4BEE',
    // 270-degree frontal AoE
    'E6N Spike Of Flame': '4BF0',
    // Orb explosions after Strike Spark
    'E6N Radiant Plume': '4BF2',
    'E6N Eruption': '4BF4'
  },
  damageFail: {
    'E6N Vacuum Slice': '4BD5',
    // Dark line AoE from Garuda
    'E6N Downburst': '4BDB' // Blue knockback circle. Actual knockback is unknown ability 4C20

  },
  shareFail: {
    // Kills non-tanks who get hit by it.
    'E6N Instant Incineration': '4BED'
  }
};
/* harmony default export */ const e6n = (e6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e6s.ts

// TODO: check tethers being cut (when they shouldn't)
// TODO: check for concussed debuff
// TODO: check for taking tankbuster with lightheaded
// TODO: check for one person taking multiple Storm Of Fury Tethers (4C01/4C08)
const e6s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFurorSavage */.Z.EdensVerseFurorSavage,
  damageWarn: {
    // It's common to just ignore futbol mechanics, so don't warn on Strike Spark.
    // 'Spike Of Flame': '4C13', // Orb explosions after Strike Spark
    'E6S Thorns': '4BFA',
    // AoE markers after Enumeration
    'E6S Ferostorm 1': '4BFD',
    'E6S Ferostorm 2': '4C06',
    'E6S Storm Of Fury 1': '4C00',
    // Circle AoE during tethers--Garuda
    'E6S Storm Of Fury 2': '4C07',
    // Circle AoE during tethers--Raktapaksa
    'E6S Explosion': '4C03',
    // AoE circles, Garuda orbs
    'E6S Heat Burst': '4C1F',
    'E6S Conflag Strike': '4C10',
    // 270-degree frontal AoE
    'E6S Radiant Plume': '4C15',
    'E6S Eruption': '4C17',
    'E6S Wind Cutter': '4C02' // Tether-cutting line aoe

  },
  damageFail: {
    'E6S Vacuum Slice': '4BF5',
    // Dark line AoE from Garuda
    'E6S Downburst 1': '4BFB',
    // Blue knockback circle (Garuda).
    'E6S Downburst 2': '4BFC',
    // Blue knockback circle (Raktapaksa).
    'E6S Meteor Strike': '4C0F' // Frontal avoidable tank buster

  },
  shareWarn: {
    'E6S Hands of Hell': '4C0[BC]',
    // Tether charge
    'E6S Hands of Flame': '4C0A',
    // First Tankbuster
    'E6S Instant Incineration': '4C0E',
    // Second Tankbuster
    'E6S Blaze': '4C1B' // Flame Tornado Cleave

  },
  soloFail: {
    'E6S Air Bump': '4BF9'
  }
};
/* harmony default export */ const e6s = (e6s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e7n.ts




const wrongBuff = str => {
  return {
    en: str + ' (wrong buff)',
    de: str + ' (falscher Buff)',
    fr: str + ' (mauvais buff)',
    ja: str + ' (不適切なバフ)',
    cn: str + ' (Buff错了)',
    ko: str + ' (버프 틀림)'
  };
};

const noBuff = str => {
  return {
    en: str + ' (no buff)',
    de: str + ' (kein Buff)',
    fr: str + ' (pas de buff)',
    ja: str + ' (バフ無し)',
    cn: str + ' (没有Buff)',
    ko: str + '(버프 없음)'
  };
};

const e7n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseIconoclasm */.Z.EdensVerseIconoclasm,
  damageWarn: {
    'E7N Stygian Sword': '4C55',
    // Circle ground AoEs after False Twilight
    'E7N Strength In Numbers Donut': '4C4C',
    // Large donut ground AoEs, intermission
    'E7N Strength In Numbers 2': '4C4D' // Large circle ground AoEs, intermission

  },
  shareWarn: {
    'E7N Stygian Stake': '4C33',
    // Laser tank buster, outside intermission phase
    'E5N Silver Shot': '4E7D' // Spread markers, intermission

  },
  triggers: [{
    id: 'E7N Astral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      var _data$hasAstral;

      (_data$hasAstral = data.hasAstral) !== null && _data$hasAstral !== void 0 ? _data$hasAstral : data.hasAstral = {};
      data.hasAstral[matches.target] = true;
    }
  }, {
    id: 'E7N Astral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      var _data$hasAstral2;

      (_data$hasAstral2 = data.hasAstral) !== null && _data$hasAstral2 !== void 0 ? _data$hasAstral2 : data.hasAstral = {};
      data.hasAstral[matches.target] = false;
    }
  }, {
    id: 'E7N Umbral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      var _data$hasUmbral;

      (_data$hasUmbral = data.hasUmbral) !== null && _data$hasUmbral !== void 0 ? _data$hasUmbral : data.hasUmbral = {};
      data.hasUmbral[matches.target] = true;
    }
  }, {
    id: 'E7N Umbral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      var _data$hasUmbral2;

      (_data$hasUmbral2 = data.hasUmbral) !== null && _data$hasUmbral2 !== void 0 ? _data$hasUmbral2 : data.hasUmbral = {};
      data.hasUmbral[matches.target] = false;
    }
  }, {
    id: 'E7N Light\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C3E', '4C40', '4C22', '4C3C', '4E63'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasUmbral || !data.hasUmbral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasAstral && data.hasAstral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: wrongBuff(matches.ability)
      };
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7N Darks\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C3D', '4C23', '4C41', '4C43'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasAstral || !data.hasAstral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasUmbral && data.hasUmbral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: wrongBuff(matches.ability)
      }; // This case is probably impossible, as the debuff ticks after death,
      // but leaving it here in case there's some rez or disconnect timing
      // that could lead to this.

      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: noBuff(matches.ability)
      };
    }
  }]
};
/* harmony default export */ const e7n = (e7n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e7s.ts


 // TODO: missing an orb during tornado phase
// TODO: jumping in the tornado damage??
// TODO: taking sungrace(4C80) or moongrace(4C82) with wrong debuff
// TODO: stygian spear/silver spear with the wrong debuff
// TODO: taking explosion from the wrong Chiaro/Scuro orb
// TODO: handle 4C89 Silver Stake tankbuster 2nd hit, as it's ok to have two in.

const e7s_wrongBuff = str => {
  return {
    en: str + ' (wrong buff)',
    de: str + ' (falscher Buff)',
    fr: str + ' (mauvais buff)',
    ja: str + ' (不適切なバフ)',
    cn: str + ' (Buff错了)',
    ko: str + ' (버프 틀림)'
  };
};

const e7s_noBuff = str => {
  return {
    en: str + ' (no buff)',
    de: str + ' (kein Buff)',
    fr: str + ' (pas de buff)',
    ja: str + ' (バフ無し)',
    cn: str + ' (没有Buff)',
    ko: str + ' (버프 없음)'
  };
};

const e7s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseIconoclasmSavage */.Z.EdensVerseIconoclasmSavage,
  damageWarn: {
    'E7S Silver Sword': '4C8E',
    // ground aoe
    'E7S Overwhelming Force': '4C73',
    // add phase ground aoe
    'E7S Strength in Numbers 1': '4C70',
    // add get under
    'E7S Strength in Numbers 2': '4C71',
    // add get out
    'E7S Paper Cut': '4C7D',
    // tornado ground aoes
    'E7S Buffet': '4C77' // tornado ground aoes also??

  },
  damageFail: {
    'E7S Betwixt Worlds': '4C6B',
    // purple ground line aoes
    'E7S Crusade': '4C58',
    // blue knockback circle (standing in it)
    'E7S Explosion': '4C6F' // didn't kill an add

  },
  shareWarn: {
    'E7S Stygian Stake': '4C34',
    // Laser tank buster 1
    'E7S Silver Shot': '4C92',
    // Spread markers
    'E7S Silver Scourge': '4C93',
    // Ice markers
    'E7S Chiaro Scuro Explosion 1': '4D14',
    // orb explosion
    'E7S Chiaro Scuro Explosion 2': '4D15' // orb explosion

  },
  triggers: [{
    // Interrupt
    id: 'E7S Advent Of Light',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4C6E'
    }),
    mistake: (_data, matches) => {
      // TODO: is this blame correct? does this have a target?
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'E7S Astral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      data.hasAstral = data.hasAstral || {};
      data.hasAstral[matches.target] = true;
    }
  }, {
    id: 'E7S Astral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      data.hasAstral = data.hasAstral || {};
      data.hasAstral[matches.target] = false;
    }
  }, {
    id: 'E7S Umbral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      data.hasUmbral = data.hasUmbral || {};
      data.hasUmbral[matches.target] = true;
    }
  }, {
    id: 'E7S Umbral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      data.hasUmbral = data.hasUmbral || {};
      data.hasUmbral[matches.target] = false;
    }
  }, {
    id: 'E7S Light\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C62', '4C63', '4C64', '4C5B', '4C5F'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasUmbral || !data.hasUmbral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasAstral && data.hasAstral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_wrongBuff(matches.ability)
      };
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7S Darks\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C65', '4C66', '4C67', '4C5A', '4C60'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasAstral || !data.hasAstral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasUmbral && data.hasUmbral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_wrongBuff(matches.ability)
      }; // This case is probably impossible, as the debuff ticks after death,
      // but leaving it here in case there's some rez or disconnect timing
      // that could lead to this.

      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7S Crusade Knockback',
    type: 'Ability',
    // 4C76 is the knockback damage, 4C58 is the damage for standing on the puck.
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4C76',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e7s = (e7s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e8n.ts



const e8n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseRefulgence */.Z.EdensVerseRefulgence,
  damageWarn: {
    'E8N Biting Frost': '4DDB',
    // 270-degree frontal AoE, Shiva
    'E8N Driving Frost': '4DDC',
    // Rear cone AoE, Shiva
    'E8N Frigid Stone': '4E66',
    // Small spread circles, phase 1
    'E8N Reflected Axe Kick': '4E00',
    // Large circle AoE, Frozen Mirror
    'E8N Reflected Scythe Kick': '4E01',
    // Donut AoE, Frozen Mirror
    'E8N Frigid Eruption': '4E09',
    // Small circle AoE puddles, phase 1
    'E8N Icicle Impact': '4E0A',
    // Large circle AoE puddles, phase 1
    'E8N Axe Kick': '4DE2',
    // Large circle AoE, Shiva
    'E8N Scythe Kick': '4DE3',
    // Donut AoE, Shiva
    'E8N Reflected Biting Frost': '4DFE',
    // 270-degree frontal AoE, Frozen Mirror
    'E8N Reflected Driving Frost': '4DFF' // Cone AoE, Frozen Mirror

  },
  damageFail: {},
  triggers: [{
    id: 'E8N Shining Armor',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '95'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'E8N Heavenly Strike',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4DD8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter gestoßen!',
          fr: 'A été poussé(e) !',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백됨!'
        }
      };
    }
  }, {
    id: 'E8N Frost Armor',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'runtergerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐!'
        }
      };
    }
  }]
};
/* harmony default export */ const e8n = (e8n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e8s.ts


// TODO: rush hitting the crystal
// TODO: adds not being killed
// TODO: taking the rush twice (when you have debuff)
// TODO: not hitting the dragon four times during wyrm's lament
// TODO: death reasons for not picking up puddle
// TODO: not being in the tower when you should
// TODO: picking up too many stacks
// Note: Banish III (4DA8) and Banish Iii Divided (4DA9) both are type=0x16 lines.
// The same is true for Banish (4DA6) and Banish Divided (4DA7).
// I'm not sure this makes any sense? But can't tell if the spread was a mistake or not.
// Maybe we could check for "Magic Vulnerability Up"?
const e8s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseRefulgenceSavage */.Z.EdensVerseRefulgenceSavage,
  damageWarn: {
    'E8S Biting Frost': '4D66',
    // 270-degree frontal AoE, Shiva
    'E8S Driving Frost': '4D67',
    // Rear cone AoE, Shiva
    'E8S Axe Kick': '4D6D',
    // Large circle AoE, Shiva
    'E8S Scythe Kick': '4D6E',
    // Donut AoE, Shiva
    'E8S Reflected Axe Kick': '4DB9',
    // Large circle AoE, Frozen Mirror
    'E8S Reflected Scythe Kick': '4DBA',
    // Donut AoE, Frozen Mirror
    'E8S Frigid Eruption': '4D9F',
    // Small circle AoE puddles, phase 1
    'E8S Frigid Needle': '4D9D',
    // 8-way "flower" explosion
    'E8S Icicle Impact': '4DA0',
    // Large circle AoE puddles, phase 1
    'E8S Reflected Biting Frost 1': '4DB7',
    // 270-degree frontal AoE, Frozen Mirror
    'E8S Reflected Biting Frost 2': '4DC3',
    // 270-degree frontal AoE, Frozen Mirror
    'E8S Reflected Driving Frost 1': '4DB8',
    // Cone AoE, Frozen Mirror
    'E8S Reflected Driving Frost 2': '4DC4',
    // Cone AoE, Frozen Mirror
    'E8S Hallowed Wings 1': '4D75',
    // Left cleave
    'E8S Hallowed Wings 2': '4D76',
    // Right cleave
    'E8S Hallowed Wings 3': '4D77',
    // Knockback frontal cleave
    'E8S Reflected Hallowed Wings 1': '4D90',
    // Reflected left 2
    'E8S Reflected Hallowed Wings 2': '4DBB',
    // Reflected left 1
    'E8S Reflected Hallowed Wings 3': '4DC7',
    // Reflected right 2
    'E8S Reflected Hallowed Wings 4': '4D91',
    // Reflected right 1
    'E8S Twin Stillness 1': '4D68',
    'E8S Twin Stillness 2': '4D6B',
    'E8S Twin Silence 1': '4D69',
    'E8S Twin Silence 2': '4D6A',
    'E8S Akh Rhai': '4D99',
    'E8S Embittered Dance 1': '4D70',
    'E8S Embittered Dance 2': '4D71',
    'E8S Spiteful Dance 1': '4D6F',
    'E8S Spiteful Dance 2': '4D72'
  },
  damageFail: {
    // Broken tether.
    'E8S Refulgent Fate': '4DA4',
    // Shared orb, correct is Bright Pulse (4D95)
    'E8S Blinding Pulse': '4D96'
  },
  shareFail: {
    'E8S Path of Light': '4DA1' // Protean

  },
  triggers: [{
    id: 'E8S Shining Armor',
    type: 'GainsEffect',
    // Stun
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '95'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Interrupt
    id: 'E8S Stoneskin',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4D85'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e8s = (e8s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e9n.ts

const e9n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseUmbra */.Z.EdensPromiseUmbra,
  damageWarn: {
    'E9N The Art Of Darkness 1': '5223',
    // left-right cleave
    'E9N The Art Of Darkness 2': '5224',
    // left-right cleave
    'E9N Wide-Angle Particle Beam': '5AFF',
    // frontal cleave tutorial mechanic
    'E9N Wide-Angle Phaser': '55E1',
    // wide-angle "sides"
    'E9N Bad Vibrations': '55E6',
    // tethered outside giant tree ground aoes
    'E9N Earth-Shattering Particle Beam': '5225',
    // missing towers?
    'E9N Anti-Air Particle Beam': '55DC',
    // "get out" during panels
    'E9N Zero-Form Particle Beam 2': '55DB' // Clone line aoes w/ Anti-Air Particle Beam

  },
  damageFail: {
    'E9N Withdraw': '5534',
    // Slow to break seed chain, get sucked back in yikes
    'E9N Aetherosynthesis': '5535' // Standing on seeds during explosion (possibly via Withdraw)

  },
  shareWarn: {
    'E9N Zero-Form Particle Beam 1': '55EB' // tank laser with marker

  }
};
/* harmony default export */ const e9n = (e9n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e9s.ts



// TODO: 561D Evil Seed hits everyone, hard to know if there's a double tap
// TODO: falling through panel just does damage with no ability name, like a death wall
// TODO: what happens if you jump in seed thorns?
const e9s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseUmbraSavage */.Z.EdensPromiseUmbraSavage,
  damageWarn: {
    'E9S Bad Vibrations': '561C',
    // tethered outside giant tree ground aoes
    'E9S Wide-Angle Particle Beam': '5B00',
    // anti-air "sides"
    'E9S Wide-Angle Phaser Unlimited': '560E',
    // wide-angle "sides"
    'E9S Anti-Air Particle Beam': '5B01',
    // wide-angle "out"
    'E9S The Second Art Of Darkness 1': '5601',
    // left-right cleave
    'E9S The Second Art Of Darkness 2': '5602',
    // left-right cleave
    'E9S The Art Of Darkness 1': '5A95',
    // boss left-right summon/panel cleave
    'E9S The Art Of Darkness 2': '5A96',
    // boss left-right summon/panel cleave
    'E9S The Art Of Darkness Clone 1': '561E',
    // clone left-right summon cleave
    'E9S The Art Of Darkness Clone 2': '561F',
    // clone left-right summon cleave
    'E9S The Third Art Of Darkness 1': '5603',
    // third art left-right cleave initial
    'E9S The Third Art Of Darkness 2': '5604',
    // third art left-right cleave initial
    'E9S Art Of Darkness': '5606',
    // third art left-right cleave final
    'E9S Full-Perimiter Particle Beam': '5629',
    // panel "get in"
    'E9S Dark Chains': '5FAC' // Slow to break partner chains

  },
  damageFail: {
    'E9S Withdraw': '561A',
    // Slow to break seed chain, get sucked back in yikes
    'E9S Aetherosynthesis': '561B' // Standing on seeds during explosion (possibly via Withdraw)

  },
  gainsEffectWarn: {
    'E9S Stygian Tendrils': '952' // standing in the brambles

  },
  shareWarn: {
    'E9S Hyper-Focused Particle Beam': '55FD' // Art Of Darkness protean

  },
  shareFail: {
    'E9S Condensed Wide-Angle Particle Beam': '5610' // wide-angle "tank laser"

  },
  soloWarn: {
    'E9S Multi-Pronged Particle Beam': '5600' // Art Of Darkness Partner Stack

  },
  triggers: [{
    // Anti-air "tank spread".  This can be stacked by two tanks invulning.
    // Note: this will still show something for holmgang/living, but
    // arguably a healer might need to do something about that, so maybe
    // it's ok to still show as a warning??
    id: 'E9S Condensed Anti-Air Particle Beam',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      type: '22',
      id: '5615',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Anti-air "out".  This can be invulned by a tank along with the spread above.
    id: 'E9S Anti-Air Phaser Unlimited',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5612',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e9s = (e9s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/diamond_weapon.ts


// Diamond Weapon Normal
const diamond_weapon_triggerSet = {
  zoneId: zone_id/* default.TheCloudDeck */.Z.TheCloudDeck,
  damageWarn: {
    'Diamond Weapon Auri Arts': '5FE3',
    // Auri Arts dashes
    'Diamond Weapon Diamond Shrapnel Initial': '5FE1',
    // initial circle of Diamond Shrapnel
    'Diamond Weapon Diamond Shrapnel Chasing': '5FE2',
    // followup circles from Diamond Shrapnel
    'Diamond Weapon Aetherial Bullet': '5FD5' // bit lasers

  },
  damageFail: {
    'Diamond Weapon Claw Swipe Left': '5FD9',
    // Adamant Purge platform cleave
    'Diamond Weapon Claw Swipe Right': '5FDA',
    // Adamant Purge platform cleave
    'Diamond Weapon Auri Cyclone 1': '5FE6',
    // standing on the blue knockback puck
    'Diamond Weapon Auri Cyclone 2': '5FE7',
    // standing on the blue knockback puck
    'Diamond Weapon Airship\'s Bane 1': '5FE8',
    // destroying one of the platforms after Auri Cyclone
    'Diamond Weapon Airship\'s Bane 2': '5FFE' // destroying one of the platforms after Auri Cyclone

  },
  shareWarn: {
    'Diamond Weapon Homing Laser': '5FDB' // spread markers

  },
  triggers: [{
    id: 'Diamond Weapon Vertical Cleave Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5FE5'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const diamond_weapon = (diamond_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/diamond_weapon-ex.ts


// TODO: warning for taking Diamond Flash (5FA1) stack on your own?
// Diamond Weapon Extreme
const diamond_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.TheCloudDeckExtreme */.Z.TheCloudDeckExtreme,
  damageWarn: {
    'DiamondEx Auri Arts 1': '5FAF',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 2': '5FB2',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 3': '5FCD',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 4': '5FCE',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 5': '5FCF',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 6': '5FF8',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 7': '6159',
    // Auri Arts dashes/explosions
    'DiamondEx Articulated Bit Aetherial Bullet': '5FAB',
    // bit lasers during all phases
    'DiamondEx Diamond Shrapnel 1': '5FCB',
    // chasing circles
    'DiamondEx Diamond Shrapnel 2': '5FCC' // chasing circles

  },
  damageFail: {
    'DiamondEx Claw Swipe Left': '5FC2',
    // Adamant Purge platform cleave
    'DiamondEx Claw Swipe Right': '5FC3',
    // Adamant Purge platform cleave
    'DiamondEx Auri Cyclone 1': '5FD1',
    // standing on the blue knockback puck
    'DiamondEx Auri Cyclone 2': '5FD2',
    // standing on the blue knockback puck
    'DiamondEx Airship\'s Bane 1': '5FFE',
    // destroying one of the platforms after Auri Cyclone
    'DiamondEx Airship\'s Bane 2': '5FD3' // destroying one of the platforms after Auri Cyclone

  },
  shareWarn: {
    'DiamondEx Tank Lasers': '5FC8',
    // cleaving yellow lasers on top two enmity
    'DiamondEx Homing Laser': '5FC4' // Adamante Purge spread

  },
  shareFail: {
    'DiamondEx Flood Ray': '5FC7' // "limit cut" cleaves

  },
  triggers: [{
    id: 'DiamondEx Vertical Cleave Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5FD0'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const diamond_weapon_ex = (diamond_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/emerald_weapon.ts


const emerald_weapon_triggerSet = {
  zoneId: zone_id/* default.CastrumMarinum */.Z.CastrumMarinum,
  damageWarn: {
    'Emerald Weapon Heat Ray': '4F9D',
    // Emerald Beam initial conal
    'Emerald Weapon Photon Laser 1': '5534',
    // Emerald Beam inside circle
    'Emerald Weapon Photon Laser 2': '5536',
    // Emerald Beam middle circle
    'Emerald Weapon Photon Laser 3': '5538',
    // Emerald Beam outside circle
    'Emerald Weapon Heat Ray 1': '5532',
    // Emerald Beam rotating pulsing laser
    'Emerald Weapon Heat Ray 2': '5533',
    // Emerald Beam rotating pulsing laser
    'Emerald Weapon Magnetic Mine Explosion': '5B04',
    // repulsing mine explosions
    'Emerald Weapon Sidescathe 1': '553F',
    // left/right cleave
    'Emerald Weapon Sidescathe 2': '5540',
    // left/right cleave
    'Emerald Weapon Sidescathe 3': '5541',
    // left/right cleave
    'Emerald Weapon Sidescathe 4': '5542',
    // left/right cleave
    'Emerald Weapon Bit Storm': '554A',
    // "get in"
    'Emerald Weapon Emerald Crusher': '553C',
    // blue knockback puck
    'Emerald Weapon Pulse Laser': '5548',
    // line aoe
    'Emerald Weapon Energy Aetheroplasm': '5551',
    // hitting a glowy orb
    'Emerald Weapon Divide Et Impera Ground': '556F',
    // party targeted ground cones
    'Emerald Weapon Primus Terminus Est': '4B3E',
    // ground circle during arrow headmarkers
    'Emerald Weapon Secundus Terminus Est': '556A',
    // X / + headmarkers
    'Emerald Weapon Tertius Terminus Est': '556D',
    // triple swords
    'Emerald Weapon Shots Fired': '555F' // line aoes from soldiers

  },
  shareWarn: {
    'Emerald Weapon Divide Et Impera P1': '554E',
    // tankbuster, probably cleaves, phase 1
    'Emerald Weapon Divide Et Impera P2': '5570' // tankbuster, probably cleaves, phase 2

  },
  triggers: [{
    id: 'Emerald Weapon Emerald Crusher Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '553E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    // Getting knocked into a wall from the arrow headmarker.
    id: 'Emerald Weapon Primus Terminus Est Wall',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5563', '5564']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const emerald_weapon = (emerald_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/emerald_weapon-ex.ts


const emerald_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.CastrumMarinumExtreme */.Z.CastrumMarinumExtreme,
  damageWarn: {
    'EmeraldEx Heat Ray': '5BD3',
    // Emerald Beam initial conal
    'EmeraldEx Photon Laser 1': '557B',
    // Emerald Beam inside circle
    'EmeraldEx Photon Laser 2': '557D',
    // Emerald Beam outside circle
    'EmeraldEx Heat Ray 1': '557A',
    // Emerald Beam rotating pulsing laser
    'EmeraldEx Heat Ray 2': '5579',
    // Emerald Beam rotating pulsing laser
    'EmeraldEx Explosion': '5596',
    // Magitek Mine explosion
    'EmeraldEx Tertius Terminus Est Initial': '55CD',
    // sword initial puddles
    'EmeraldEx Tertius Terminus Est Explosion': '55CE',
    // sword explosions
    'EmeraldEx Airborne Explosion': '55BD',
    // exaflare
    'EmeraldEx Sidescathe 1': '55D4',
    // left/right cleave
    'EmeraldEx Sidescathe 2': '55D5',
    // left/right cleave
    'EmeraldEx Shots Fired': '55B7',
    // rank and file soldiers
    'EmeraldEx Secundus Terminus Est': '55CB',
    // dropped + and x headmarkers
    'EmeraldEx Expire': '55D1',
    // ground aoe on boss "get out"
    'EmeraldEx Photon Ring': '55A9',
    // untelegraphed "get out"
    'EmeraldEx Aire Tam Storm': '55D0' // expanding red and black ground aoe

  },
  shareWarn: {
    'EmeraldEx Divide Et Impera': '55D9',
    // non-tank protean spread
    'EmeraldEx Primus Terminus Est 1': '55C4',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 2': '55C5',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 3': '55C6',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 4': '55C7' // knockback arrow

  },
  soloWarn: {
    'EmeraldEx Nitrosphere Aetheroplasm': '55AE',
    'EmeraldEx Ceruleum Sphere Aetheroplasm': '55AF'
  },
  triggers: [{
    id: 'EmeraldEx Nitrosphere Physical Vulnerability Up Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '82A'
    }),
    run: (data, matches) => {
      var _data$sphereNitro;

      data.sphereNitro = (_data$sphereNitro = data.sphereNitro) !== null && _data$sphereNitro !== void 0 ? _data$sphereNitro : {};
      data.sphereNitro[matches.target] = true;
    }
  }, {
    id: 'EmeraldEx Nitrosphere Physical Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '82A'
    }),
    run: (data, matches) => {
      var _data$sphereNitro2;

      // Need to track loss here for the 4/4 strategy.
      data.sphereNitro = (_data$sphereNitro2 = data.sphereNitro) !== null && _data$sphereNitro2 !== void 0 ? _data$sphereNitro2 : {};
      data.sphereNitro[matches.target] = false;
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Magic Vulnerability Up Gain',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '82B'
    }),
    type: 'GainsEffect',
    run: (data, matches) => {
      var _data$sphereCeruleum;

      data.sphereCeruleum = (_data$sphereCeruleum = data.sphereCeruleum) !== null && _data$sphereCeruleum !== void 0 ? _data$sphereCeruleum : {};
      data.sphereCeruleum[matches.target] = true;
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Magic Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '82B'
    }),
    run: (data, matches) => {
      var _data$sphereCeruleum2;

      data.sphereCeruleum = (_data$sphereCeruleum2 = data.sphereCeruleum) !== null && _data$sphereCeruleum2 !== void 0 ? _data$sphereCeruleum2 : {};
      data.sphereCeruleum[matches.target] = false;
    }
  }, {
    id: 'EmeraldEx Nitrosphere Twice',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '55AE'
    }),
    condition: (data, matches) => {
      var _data$sphereNitro3;

      return (_data$sphereNitro3 = data.sphereNitro) === null || _data$sphereNitro3 === void 0 ? void 0 : _data$sphereNitro3[matches.target];
    },
    mistake: (data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (wrong color)`,
          de: `${matches.ability} (falsche Farbe)`,
          fr: `${matches.ability} (mauvaise couleur)`,
          ja: `${matches.ability} (色違う)`,
          cn: `${matches.ability} (颜色错了)`,
          ko: `${matches.ability} (색 틀림)`
        }
      };
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Twice',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '55AF'
    }),
    condition: (data, matches) => {
      var _data$sphereCeruleum3;

      return (_data$sphereCeruleum3 = data.sphereCeruleum) === null || _data$sphereCeruleum3 === void 0 ? void 0 : _data$sphereCeruleum3[matches.target];
    },
    mistake: (data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (wrong color)`,
          de: `${matches.ability} (falsche Farbe)`,
          fr: `${matches.ability} (mauvaise couleur)`,
          ja: `${matches.ability} (色違う)`,
          cn: `${matches.ability} (颜色错了)`,
          ko: `${matches.ability} (색 틀림)`
        }
      };
    }
  }]
};
/* harmony default export */ const emerald_weapon_ex = (emerald_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/hades.ts

// Hades Normal
const hades_triggerSet = {
  zoneId: zone_id/* default.TheDyingGasp */.Z.TheDyingGasp,
  damageWarn: {
    'Hades Bad Faith 1': '414B',
    'Hades Bad Faith 2': '414C',
    'Hades Dark Eruption': '4152',
    'Hades Shadow Spread 1': '4156',
    'Hades Shadow Spread 2': '4157',
    'Hades Broken Faith': '414E',
    'Hades Hellborn Yawp': '416F',
    'Hades Purgation': '4172',
    'Hades Shadow Stream': '415C',
    'Hades Aero': '4595',
    'Hades Echo 1': '4163',
    'Hades Echo 2': '4164'
  },
  shareFail: {
    'Hades Nether Blast': '4163',
    'Hades Ravenous Assault': '4158',
    'Hades Ancient Darkness': '4593',
    'Hades Dual Strike': '4162'
  }
};
/* harmony default export */ const hades = (hades_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/hades-ex.ts



// Hades Ex
const hades_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladHadessElegy */.Z.TheMinstrelsBalladHadessElegy,
  damageWarn: {
    'HadesEx Shadow Spread 2': '47AA',
    'HadesEx Shadow Spread 3': '47E4',
    'HadesEx Shadow Spread 4': '47E5',
    // Everybody stacks in good faith for Bad Faith, so don't call it a mistake.
    // 'HadesEx Bad Faith 1': '47AD',
    // 'HadesEx Bad Faith 2': '47B0',
    // 'HadesEx Bad Faith 3': '47AE',
    // 'HadesEx Bad Faith 4': '47AF',
    'HadesEx Broken Faith': '47B2',
    'HadesEx Magic Spear': '47B6',
    'HadesEx Magic Chakram': '47B5',
    'HadesEx Forked Lightning': '47C9',
    'HadesEx Dark Current 1': '47F1',
    'HadesEx Dark Current 2': '47F2'
  },
  damageFail: {
    'HadesEx Comet': '47B9',
    // missed tower
    'HadesEx Ancient Eruption': '47D3',
    'HadesEx Purgation 1': '47EC',
    'HadesEx Purgation 2': '47ED',
    'HadesEx Shadow Stream': '47EA',
    'HadesEx Dead Space': '47EE'
  },
  shareWarn: {
    'HadesEx Shadow Spread Initial': '47A9',
    'HadesEx Ravenous Assault': '(?:47A6|47A7)',
    'HadesEx Dark Flame 1': '47C6',
    'HadesEx Dark Freeze 1': '47C4',
    'HadesEx Dark Freeze 2': '47DF'
  },
  triggers: [{
    id: 'HadesEx Dark II Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Shadow of the Ancients',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$hasDark;

      (_data$hasDark = data.hasDark) !== null && _data$hasDark !== void 0 ? _data$hasDark : data.hasDark = [];
      data.hasDark.push(matches.target);
    }
  }, {
    id: 'HadesEx Dark II',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      type: '22',
      id: '47BA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Don't blame people who don't have tethers.
    condition: (data, matches) => data.hasDark && data.hasDark.includes(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'HadesEx Boss Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: ['Igeyorhm\'s Shade', 'Lahabrea\'s Shade'],
      id: '000E',
      capture: false
    }),
    mistake: {
      type: 'warn',
      text: {
        en: 'Bosses Too Close',
        de: 'Bosses zu Nahe',
        fr: 'Boss trop proches',
        ja: 'ボス近すぎる',
        cn: 'BOSS靠太近了',
        ko: '쫄들이 너무 가까움'
      }
    }
  }, {
    id: 'HadesEx Death Shriek',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '47CB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'HadesEx Beyond Death Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath;

      (_data$hasBeyondDeath = data.hasBeyondDeath) !== null && _data$hasBeyondDeath !== void 0 ? _data$hasBeyondDeath : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = true;
    }
  }, {
    id: 'HadesEx Beyond Death Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath2;

      (_data$hasBeyondDeath2 = data.hasBeyondDeath) !== null && _data$hasBeyondDeath2 !== void 0 ? _data$hasBeyondDeath2 : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = false;
    }
  }, {
    id: 'HadesEx Beyond Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasBeyondDeath) return;
      if (!data.hasBeyondDeath[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'HadesEx Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      (_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {};
      data.hasDoom[matches.target] = true;
    }
  }, {
    id: 'HadesEx Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      (_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {};
      data.hasDoom[matches.target] = false;
    }
  }, {
    id: 'HadesEx Doom',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasDoom) return;
      if (!data.hasDoom[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const hades_ex = (hades_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/innocence.ts

// Innocence Normal
const innocence_triggerSet = {
  zoneId: zone_id/* default.TheCrownOfTheImmaculate */.Z.TheCrownOfTheImmaculate,
  damageWarn: {
    'Inno Daybreak': '3E9D',
    'Inno Holy Trinity': '3EB3',
    'Inno Reprobation 1': '3EB6',
    'Inno Reprobation 2': '3EB8',
    'Inno Reprobation 3': '3ECB',
    'Inno Reprobation 4': '3EB7',
    'Inno Soul and Body 1': '3EB1',
    'Inno Soul and Body 2': '3EB2',
    'Inno Soul and Body 3': '3EF9',
    'Inno Soul and Body 4': '3EFA',
    'Inno God Ray 1': '3EBD',
    'Inno God Ray 2': '3EBE',
    'Inno God Ray 3': '3EBF',
    'Inno God Ray 4': '3EC0'
  }
};
/* harmony default export */ const innocence = (innocence_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/innocence-ex.ts

// Innocence Extreme
const innocence_ex_triggerSet = {
  zoneId: zone_id/* default.TheCrownOfTheImmaculateExtreme */.Z.TheCrownOfTheImmaculateExtreme,
  damageWarn: {
    'InnoEx Duel Descent': '3ED2',
    'InnoEx Reprobation 1': '3EE0',
    'InnoEx Reprobation 2': '3ECC',
    'InnoEx Sword of Condemnation 1': '3EDE',
    'InnoEx Sword of Condemnation 2': '3EDF',
    'InnoEx Dream of the Rood 1': '3ED3',
    'InnoEx Dream of the Rood 2': '3ED4',
    'InnoEx Dream of the Rood 3': '3ED5',
    'InnoEx Dream of the Rood 4': '3ED6',
    'InnoEx Dream of the Rood 5': '3EFB',
    'InnoEx Dream of the Rood 6': '3EFC',
    'InnoEx Dream of the Rood 7': '3EFD',
    'InnoEx Dream of the Rood 8': '3EFE',
    'InnoEx Holy Trinity': '3EDB',
    'InnoEx Soul and Body 1': '3ED7',
    'InnoEx Soul and Body 2': '3ED8',
    'InnoEx Soul and Body 3': '3ED9',
    'InnoEx Soul and Body 4': '3EDA',
    'InnoEx Soul and Body 5': '3EFF',
    'InnoEx Soul and Body 6': '3F00',
    'InnoEx Soul and Body 7': '3F01',
    'InnoEx Soul and Body 8': '3F02',
    'InnoEx God Ray 1': '3EE6',
    'InnoEx God Ray 2': '3EE7',
    'InnoEx God Ray 3': '3EE8',
    'InnoEx Explosion': '3EF0'
  }
};
/* harmony default export */ const innocence_ex = (innocence_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/levi-un.ts


// It's hard to capture the reflection abilities from Leviathan's Head and Tail if you use
// ranged physical attacks / magic attacks respectively, as the ability names are the
// ability you used and don't appear to show up in the log as normal "ability" lines.
// That said, dots still tick independently on both so it's likely that people will atack
// them anyway.
// TODO: Figure out why Dread Tide / Waterspout appear like shares (i.e. 0x16 id).
// Dread Tide = 5CCA/5CCB/5CCC, Waterspout = 5CD1
// Leviathan Unreal
const levi_un_triggerSet = {
  zoneId: zone_id/* default.TheWhorleaterUnreal */.Z.TheWhorleaterUnreal,
  damageWarn: {
    'LeviUn Grand Fall': '5CDF',
    // very large circular aoe before spinny dives, applies heavy
    'LeviUn Hydroshot': '5CD5',
    // Wavespine Sahagin aoe that gives Dropsy effect
    'LeviUn Dreadstorm': '5CD6' // Wavetooth Sahagin aoe that gives Hysteria effect

  },
  damageFail: {
    'LeviUn Body Slam': '5CD2',
    // levi slam that tilts the boat
    'LeviUn Spinning Dive 1': '5CDB',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 2': '5CE3',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 3': '5CE8',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 4': '5CE9' // levi dash across the boat with knockback

  },
  gainsEffectWarn: {
    'LeviUn Dropsy': '110' // standing in the hydro shot from the Wavespine Sahagin

  },
  gainsEffectFail: {
    'LeviUn Hysteria': '128' // standing in the dreadstorm from the Wavetooth Sahagin

  },
  triggers: [{
    id: 'LeviUn Body Slam Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5CD2'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'A été assommé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const levi_un = (levi_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/ruby_weapon.ts

// Ruby Normal
const ruby_weapon_triggerSet = {
  zoneId: zone_id/* default.CinderDrift */.Z.CinderDrift,
  damageWarn: {
    'Ruby Ravensclaw': '4A93',
    // centered circle aoe for ravensclaw
    'Ruby Spike Of Flame 1': '4A9A',
    // initial explosion during helicoclaw
    'Ruby Spike Of Flame 2': '4B2E',
    // followup helicoclaw explosions
    'Ruby Spike Of Flame 3': '4A94',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 4': '4A95',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 5': '4D02',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 6': '4D03',
    // ravensclaw explosion at ends of lines
    'Ruby Ruby Ray': '4AC6',
    // frontal laser
    'Ruby Undermine': '4A97',
    // ground aoes under the ravensclaw patches
    'Ruby Ravensflight 1': '4E69',
    // dash around the arena
    'Ruby Ravensflight 2': '4E6A',
    // dash around the arena
    'Ruby Ravensflight 3': '4AA1',
    // dash around the arena
    'Ruby Ravensflight 4': '4AA2',
    // dash around the arena
    'Ruby Ravensflight 5': '4AA3',
    // dash around the arena
    'Ruby Ravensflight 6': '4AA4',
    // dash around the arena
    'Ruby Ravensflight 7': '4AA5',
    // dash around the arena
    'Ruby Ravensflight 8': '4AA6',
    // dash around the arena
    'Ruby Ravensflight 9': '4AA7',
    // dash around the arena
    'Ruby Ravensflight 10': '4C21',
    // dash around the arena
    'Ruby Ravensflight 11': '4C2A',
    // dash around the arena
    'Ruby Comet Burst': '4AB4',
    // meteor exploding
    'Ruby Bradamante': '4ABC' // headmarkers with line aoes

  },
  shareWarn: {
    'Ruby Homing Laser': '4AC5',
    // spread markers in P1
    'Ruby Meteor Stream': '4E67' // spread markers in P2

  }
};
/* harmony default export */ const ruby_weapon = (ruby_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/ruby_weapon-ex.ts


// TODO: taking two different High-Powered Homing Lasers (4AD8)
// TODO: could blame the tethered player for White Agony / White Fury failures?
// Ruby Weapon Extreme
const ruby_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.CinderDriftExtreme */.Z.CinderDriftExtreme,
  damageWarn: {
    'RubyEx Ruby Bit Magitek Ray': '4AD2',
    // line aoes during helicoclaw
    'RubyEx Spike Of Flame 1': '4AD3',
    // initial explosion during helicoclaw
    'RubyEx Spike Of Flame 2': '4B2F',
    // followup helicoclaw explosions
    'RubyEx Spike Of Flame 3': '4D04',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 4': '4D05',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 5': '4ACD',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 6': '4ACE',
    // ravensclaw explosion at ends of lines
    'RubyEx Undermine': '4AD0',
    // ground aoes under the ravensclaw patches
    'RubyEx Ruby Ray': '4B02',
    // frontal laser
    'RubyEx Ravensflight 1': '4AD9',
    // dash around the arena
    'RubyEx Ravensflight 2': '4ADA',
    // dash around the arena
    'RubyEx Ravensflight 3': '4ADD',
    // dash around the arena
    'RubyEx Ravensflight 4': '4ADE',
    // dash around the arena
    'RubyEx Ravensflight 5': '4ADF',
    // dash around the arena
    'RubyEx Ravensflight 6': '4AE0',
    // dash around the arena
    'RubyEx Ravensflight 7': '4AE1',
    // dash around the arena
    'RubyEx Ravensflight 8': '4AE2',
    // dash around the arena
    'RubyEx Ravensflight 9': '4AE3',
    // dash around the arena
    'RubyEx Ravensflight 10': '4AE4',
    // dash around the arena
    'RubyEx Ravensflight 11': '4AE5',
    // dash around the arena
    'RubyEx Ravensflight 12': '4AE6',
    // dash around the arena
    'RubyEx Ravensflight 13': '4AE7',
    // dash around the arena
    'RubyEx Ravensflight 14': '4AE8',
    // dash around the arena
    'RubyEx Ravensflight 15': '4AE9',
    // dash around the arena
    'RubyEx Ravensflight 16': '4AEA',
    // dash around the arena
    'RubyEx Ravensflight 17': '4E6B',
    // dash around the arena
    'RubyEx Ravensflight 18': '4E6C',
    // dash around the arena
    'RubyEx Ravensflight 19': '4E6D',
    // dash around the arena
    'RubyEx Ravensflight 20': '4E6E',
    // dash around the arena
    'RubyEx Ravensflight 21': '4E6F',
    // dash around the arena
    'RubyEx Ravensflight 22': '4E70',
    // dash around the arena
    'RubyEx Cut And Run 1': '4B05',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 2': '4B06',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 3': '4B07',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 4': '4B08',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 5': '4DOD',
    // slow charge across arena after stacks
    'RubyEx Meteor Burst': '4AF2',
    // meteor exploding
    'RubyEx Bradamante': '4E38',
    // headmarkers with line aoes
    'RubyEx Comet Heavy Impact': '4AF6' // letting a tank comet land

  },
  damageFail: {
    'RubyEx Ruby Sphere Burst': '4ACB',
    // exploding the red mine
    'RubyEx Lunar Dynamo': '4EB0',
    // "get in" from Raven's Image
    'RubyEx Iron Chariot': '4EB1',
    // "get out" from Raven's Image
    'RubyEx Heart In The Machine': '4AFA' // White Agony/Fury skull hitting players

  },
  gainsEffectFail: {
    'RubyEx Hysteria': '128' // Negative Aura lookaway failure

  },
  shareWarn: {
    'RubyEx Homing Lasers': '4AD6',
    // spread markers during cut and run
    'RubyEx Meteor Stream': '4E68' // spread markers during P2

  },
  triggers: [{
    id: 'RubyEx Screech',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4AEE'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked into wall',
          de: 'Rückstoß in die Wand',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const ruby_weapon_ex = (ruby_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/shiva-un.ts


// Shiva Unreal
const shiva_un_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreUnreal */.Z.TheAkhAfahAmphitheatreUnreal,
  damageWarn: {
    // Large white circles.
    'ShivaEx Icicle Impact': '537B',
    // "get in" aoe
    'ShivaEx Whiteout': '5376',
    // Avoidable tank stun.
    'ShivaEx Glacier Bash': '5375'
  },
  damageFail: {
    // 270 degree attack.
    'ShivaEx Glass Dance': '5378'
  },
  shareWarn: {
    // Hailstorm spread marker.
    'ShivaEx Hailstorm': '536F'
  },
  shareFail: {
    // Laser.  TODO: maybe blame the person it's on??
    'ShivaEx Avalanche': '5379'
  },
  soloWarn: {
    // Party shared tank buster.
    'ShivaEx Icebrand': '5373'
  },
  triggers: [{
    id: 'ShivaEx Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability 537A on you, but it has an unknown name.
    // So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: (_data, matches) => {
      // The intermission also gets this effect, but for a shorter duration.
      return parseFloat(matches.duration) > 20;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_un = (shiva_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titania.ts

const titania_triggerSet = {
  zoneId: zone_id/* default.TheDancingPlague */.Z.TheDancingPlague,
  damageWarn: {
    'Titania Wood\'s Embrace': '3D50',
    // 'Titania Frost Rune': '3D4E',
    'Titania Gentle Breeze': '3F83',
    'Titania Leafstorm 1': '3D55',
    'Titania Puck\'s Rebuke': '3D58',
    'Titania Leafstorm 2': '3E03'
  },
  damageFail: {
    'Titania Phantom Rune 1': '3D5D',
    'Titania Phantom Rune 2': '3D5E'
  },
  shareFail: {
    'Titania Divination Rune': '3D5B'
  }
};
/* harmony default export */ const titania = (titania_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titania-ex.ts

const titania_ex_triggerSet = {
  zoneId: zone_id/* default.TheDancingPlagueExtreme */.Z.TheDancingPlagueExtreme,
  damageWarn: {
    'TitaniaEx Wood\'s Embrace': '3D2F',
    // 'TitaniaEx Frost Rune': '3D2B',
    'TitaniaEx Gentle Breeze': '3F82',
    'TitaniaEx Leafstorm 1': '3D39',
    'TitaniaEx Puck\'s Rebuke': '3D43',
    'TitaniaEx Wallop': '3D3B',
    'TitaniaEx Leafstorm 2': '3D49'
  },
  damageFail: {
    'TitaniaEx Phantom Rune 1': '3D4C',
    'TitaniaEx Phantom Rune 2': '3D4D'
  },
  shareFail: {
    // TODO: This could maybe blame the person with the tether?
    'TitaniaEx Thunder Rune': '3D29',
    'TitaniaEx Divination Rune': '3D4A'
  }
};
/* harmony default export */ const titania_ex = (titania_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titan-un.ts

// Titan Unreal
const titan_un_triggerSet = {
  zoneId: zone_id/* default.TheNavelUnreal */.Z.TheNavelUnreal,
  damageWarn: {
    'TitanUn Weight Of The Land': '58FE',
    'TitanUn Burst': '5ADF'
  },
  damageFail: {
    'TitanUn Landslide': '5ADC',
    'TitanUn Gaoler Landslide': '5902'
  },
  shareWarn: {
    'TitanUn Rock Buster': '58F6'
  },
  shareFail: {
    'TitanUn Mountain Buster': '58F7'
  }
};
/* harmony default export */ const titan_un = (titan_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/varis-ex.ts



const varis_ex_triggerSet = {
  zoneId: zone_id/* default.MemoriaMiseraExtreme */.Z.MemoriaMiseraExtreme,
  damageWarn: {
    'VarisEx Alea Iacta Est 1': '4CD2',
    'VarisEx Alea Iacta Est 2': '4CD3',
    'VarisEx Alea Iacta Est 3': '4CD4',
    'VarisEx Alea Iacta Est 4': '4CD5',
    'VarisEx Alea Iacta Est 5': '4CD6',
    'VarisEx Ignis Est 1': '4CB5',
    'VarisEx Ignis Est 2': '4CC5',
    'VarisEx Ventus Est 1': '4CC7',
    'VarisEx Ventus Est 2': '4CC8',
    'VarisEx Assault Cannon': '4CE5',
    'VarisEx Fortius Rotating': '4CE9'
  },
  damageFail: {
    // Don't hit the shields!
    'VarisEx Repay': '4CDD'
  },
  shareWarn: {
    // This is the "protean" fortius.
    'VarisEx Fortius Protean': '4CE7'
  },
  shareFail: {
    'VarisEx Magitek Burst': '4CDF',
    'VarisEx Aetherochemical Grenado': '4CED'
  },
  triggers: [{
    id: 'VarisEx Terminus Est',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4CB4',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 1,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const varis_ex = (varis_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/wol.ts


// TODO: Radiant Braver is 4F16/4F17(x2), shouldn't get hit by both?
// TODO: Radiant Desperado is 4F18/4F19, shouldn't get hit by both?
// TODO: Radiant Meteor is 4F1A, and shouldn't get hit by more than 1?
// TODO: missing a tower?
// Note: Deliberately not including pyretic damage as an error.
// Note: It doesn't appear that there's any way to tell who failed the cutscene.
const wol_triggerSet = {
  zoneId: zone_id/* default.TheSeatOfSacrifice */.Z.TheSeatOfSacrifice,
  damageWarn: {
    'WOL Solemn Confiteor': '4F2A',
    // ground puddles
    'WOL Coruscant Saber In': '4F10',
    // saber in
    'WOL Coruscant Saber Out': '4F11',
    // saber out
    'WOL Imbued Corusance Out': '4F4B',
    // saber out
    'WOL Imbued Corusance In': '4F4C',
    // saber in
    'WOL Shining Wave': '4F26',
    // sword triangle
    'WOL Cauterize': '4F25',
    'WOL Brimstone Earth 1': '4F1E',
    // corner growing circles, initial
    'WOL Brimstone Earth 2': '4F1F',
    // corner growing circles, growing
    'WOL Flare Breath': '4F24',
    'WOL Decimation': '4F23'
  },
  gainsEffectWarn: {
    'WOL Deep Freeze': '4E6'
  },
  triggers: [{
    id: 'WOL True Walking Dead',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38E'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const wol = (wol_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/wol-ex.ts


// TODO: Radiant Braver is 4EF7/4EF8(x2), shouldn't get hit by both?
// TODO: Radiant Desperado is 4EF9/4EFA, shouldn't get hit by both?
// TODO: Radiant Meteor is 4EFC, and shouldn't get hit by more than 1?
// TODO: Absolute Holy should be shared?
// TODO: intersecting brimstones?
const wol_ex_triggerSet = {
  zoneId: zone_id/* default.TheSeatOfSacrificeExtreme */.Z.TheSeatOfSacrificeExtreme,
  damageWarn: {
    'WOLEx Solemn Confiteor': '4F0C',
    // ground puddles
    'WOLEx Coruscant Saber In': '4EF2',
    // saber in
    'WOLEx Coruscant Saber Out': '4EF1',
    // saber out
    'WOLEx Imbued Corusance Out': '4F49',
    // saber out
    'WOLEx Imbued Corusance In': '4F4A',
    // saber in
    'WOLEx Shining Wave': '4F08',
    // sword triangle
    'WOLEx Cauterize': '4F07',
    'WOLEx Brimstone Earth': '4F00' // corner growing circles, growing

  },
  gainsEffectWarn: {
    'WOLEx Deep Freeze': '4E6',
    // failing Absolute Blizzard III
    'WOLEx Damage Down': '274' // failing Absolute Flash

  },
  shareWarn: {
    'WOLEx Absolute Stone III': '4EEB',
    // protean wave imbued magic
    'WOLEx Flare Breath': '4F06',
    // tether from summoned bahamuts
    'WOLEx Perfect Decimation': '4F05' // smn/war phase marker

  },
  soloWarn: {
    'WolEx Katon San Share': '4EFE'
  },
  triggers: [{
    id: 'WOLEx True Walking Dead',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8FF'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'WOLEx Tower',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4F04',
      capture: false
    }),
    mistake: {
      type: 'fail',
      text: {
        en: 'Missed Tower',
        de: 'Turm verpasst',
        fr: 'Tour manquée',
        ja: '塔を踏まなかった',
        cn: '没踩塔',
        ko: '장판 실수'
      }
    }
  }, {
    id: 'WOLEx True Hallowed Ground',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4F44'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: matches.ability
      };
    }
  }, {
    // For Berserk and Deep Darkside
    id: 'WOLEx Missed Interrupt',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5156', '5158']
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const wol_ex = (wol_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/ultimate/the_epic_of_alexander.ts



// TODO: FIX luminous aetheroplasm warning not working
// TODO: FIX doll death not working
// TODO: failing hand of pain/parting (check for high damage?)
// TODO: make sure everybody takes exactly one protean (rather than watching double hits)
// TODO: thunder not hitting exactly 2?
// TODO: person with water/thunder debuff dying
// TODO: bad nisi pass
// TODO: failed gavel mechanic
// TODO: double rocket punch not hitting exactly 2? (or tanks)
// TODO: standing in sludge puddles before hidden mine?
// TODO: hidden mine failure?
// TODO: failures of ordained motion / stillness
// TODO: failures of plaint of severity (tethers)
// TODO: failures of plaint of solidarity (shared sentence)
// TODO: ordained capital punishment hitting non-tanks
const the_epic_of_alexander_triggerSet = {
  zoneId: zone_id/* default.TheEpicOfAlexanderUltimate */.Z.TheEpicOfAlexanderUltimate,
  damageWarn: {
    'TEA Sluice': '49B1',
    'TEA Protean Wave 1': '4824',
    'TEA Protean Wave 2': '49B5',
    'TEA Spin Crusher': '4A72',
    'TEA Sacrament': '485F',
    'TEA Radiant Sacrament': '4886',
    'TEA Almighty Judgment': '4890'
  },
  damageFail: {
    'TEA Hawk Blaster': '4830',
    'TEA Chakram': '4855',
    'TEA Enumeration': '4850',
    'TEA Apocalyptic Ray': '484C',
    'TEA Propeller Wind': '4832'
  },
  shareWarn: {
    'TEA Protean Wave Double 1': '49B6',
    'TEA Protean Wave Double 2': '4825',
    'TEA Fluid Swing': '49B0',
    'TEA Fluid Strike': '49B7',
    'TEA Hidden Mine': '4852',
    'TEA Alpha Sword': '486B',
    'TEA Flarethrower': '486B',
    'TEA Chastening Heat': '4A80',
    'TEA Divine Spear': '4A82',
    'TEA Ordained Punishment': '4891',
    // Optical Spread
    'TEA Individual Reprobation': '488C'
  },
  soloFail: {
    // Optical Stack
    'TEA Collective Reprobation': '488D'
  },
  triggers: [{
    // "too much luminous aetheroplasm"
    // When this happens, the target explodes, hitting nearby people
    // but also themselves.
    id: 'TEA Exhaust',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '481F',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.target === matches.source,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'luminous aetheroplasm',
          de: 'Luminiszentes Ätheroplasma',
          fr: 'Éthéroplasma lumineux',
          ja: '光性爆雷',
          cn: '光性爆雷',
          ko: '빛의 폭뢰'
        }
      };
    }
  }, {
    id: 'TEA Dropsy',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '121'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'TEA Tether Tracking',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Jagd Doll',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$jagdTether;

      (_data$jagdTether = data.jagdTether) !== null && _data$jagdTether !== void 0 ? _data$jagdTether : data.jagdTether = {};
      data.jagdTether[matches.sourceId] = matches.target;
    }
  }, {
    id: 'TEA Reducible Complexity',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4821',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (data, matches) => {
      return {
        type: 'fail',
        // This may be undefined, which is fine.
        name: data.jagdTether ? data.jagdTether[matches.sourceId] : undefined,
        text: {
          en: 'Doll Death',
          de: 'Puppe Tot',
          fr: 'Poupée morte',
          ja: 'ドールが死んだ',
          cn: '浮士德死亡',
          ko: '인형이 죽음'
        }
      };
    }
  }, {
    id: 'TEA Drainage',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4827',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.party.isTank(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'TEA Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2BC'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      (_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {};
      data.hasThrottle[matches.target] = true;
    }
  }, {
    id: 'TEA Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '2BC'
    }),
    run: (data, matches) => {
      var _data$hasThrottle2;

      (_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 ? _data$hasThrottle2 : data.hasThrottle = {};
      data.hasThrottle[matches.target] = false;
    }
  }, {
    id: 'TEA Throttle',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2BC'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasThrottle) return;
      if (!data.hasThrottle[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    // Balloon Popping.  It seems like the person who pops it is the
    // first person listed damage-wise, so they are likely the culprit.
    id: 'TEA Outburst',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '482A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 5,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.source
      };
    }
  }]
};
/* harmony default export */ const the_epic_of_alexander = (the_epic_of_alexander_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/smileton.ts


const smileton_triggerSet = {
  zoneId: zone_id/* default.Smileton */.Z.Smileton,
  damageWarn: {
    'Smileton Smiley Wanderer Empty Beleaguer': '6964',
    // targeted circle
    'Smileton Smiley Lunatender La Vie en Epines': '695E',
    // frontal line
    'Smileton Smiley Lunatender Anthine Needles': '695F',
    // ??
    'Smileton Smiley Panopt Retinal Glare': '696A',
    // frontal cone
    'Smileton Face Mixed Feelings': '6738',
    // lines between relatively small faces
    'Smileton Smiley Scraper Headspin': '695D',
    // centered circle
    'Smileton Smiley Daphnia Acrid Stream': '6960',
    // targeted circle
    'Smileton Smiley Metalloid Lattice': '6969',
    // long line aoe
    'Smileton Frameworker Leap Forward': '6746',
    // jump to large circle
    'Smileton Frameworker Printed Worker Leap Forward': '6747',
    // jump to large circle
    'Smileton Frameworker Omnidirectional Onslaught': '6749',
    // alternating pinwheel'
    'Smileton Smiley Dynamite Burst': '696B',
    // quick centered circle near death
    'Smileton Smiley Regolith Metamorphic Blast': '6967',
    // large conal
    'Smileton Smiley Regolith Orogenic Storm': '6968',
    // targeted circle
    'Smileton Smiley Supporter Fire Fighter': '695C',
    // donut aoe
    'Smileton Smiley Sweeper Sewer Water 1': '6962',
    // front/back cleave
    'Smileton Smiley Sweeper Sewer Water 2': '6963',
    // front/back cleave
    'Smileton The Big Cheese Bomb Iron Kiss': '674D',
    // moving bomb circular explosion
    'Smileton The Big Cheese Excavation Bomb Excavated': '6C32',
    // mine explosion after Explosive Power
    'Smileton The Big Cheese Right Disassembler': '674F',
    // right cleave
    'Smileton The Big Cheese Left Disassembler': '6750' // left cleave

  },
  shareWarn: {
    'Smileton Face Temper, Temper': '6740',
    // spread
    'Smileton The Big Cheese Leveling Missiles': '' // spread

  },
  soloWarn: {
    'Smileton The Big Cheese Electric Arc': '6753' // stack marker

  },
  triggers: [{
    id: 'Smileton Face Wrong Face',
    type: 'GainsEffect',
    // ACB = Smiley Face
    // ACC = Frowny Face
    // Taking this multiple times stacks the effect.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'AC[BC]',
      source: 'Face'
    }),
    condition: (_data, matches) => parseInt(matches.count) > 1,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.effect} x${matches.count}`,
          de: `${matches.effect} x${matches.count}`,
          ko: `${matches.effect} x${matches.count}`
        }
      };
    }
  }]
};
/* harmony default export */ const smileton = (smileton_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_aitiascope.ts

const the_aitiascope_triggerSet = {
  zoneId: zone_id/* default.TheAitiascope */.Z.TheAitiascope,
  damageWarn: {
    'Aitiascope Livia Aglaea Climb': '6444',
    // diagonal quadrant cleave
    'Aitiascope Livia Aglaea Shot 1': '6446',
    // lines
    'Aitiascope Livia Aglaea Shot 2': '6447',
    // lines coming back
    'Aitiascope Livia Ignis Amoris': '644C',
    // Odi et Amo targeted circles
    'Aitiascope Livia Disparagement': '644A',
    // wide conal
    'Aitiascope Sinking Desire The Path of Avarice': '6B1B',
    // line aoe
    'Aitiascope Sinking Partiality Unrightful Claim': '6B1C',
    // centered circle
    'Aitiascope Sinking Dissension Whisper of Our Discontent': '6B1D',
    // conal
    'Aitiascope Rhitahtyn Tartarean Spark': '6457',
    // laser line aoe
    'Aitiascope Rhitahtyn Shield Skewer': '6450',
    // charge
    'Aitiascope Rhitahtyn Shrapnel Shell': '6454',
    'Aitiascope Sinking Regret Lost Opportunity': '6B1F',
    // absolutely gigantic conal
    'Aitiascope Amon Thundaga Forte 1': '645B',
    // initial pinwheel
    'Aitiascope Amon Thundaga Forte 2': '645C',
    // second pinwheel
    'Aitiascope Amon Epode': '645F',
    // coin laser
    'Aitiascope Amon Right Firaga Forte': '6460',
    // right cleave
    'Aitiascope Amon Left Firaga Forte': '6461',
    // left cleave
    'Aitiascope Amon Eruption Forte': '6468',
    // targeted circles
    'Aitiascope Amon Dreams of Ice': '6C6C' // shiva icicle appearing

  },
  damageFail: {
    'Aitiascope Rhitahtyn Impact': '644F',
    // walls appearing during Vexillatio cast
    'Aitiascope Amon Curtain Call': '6466' // line of sight

  }
};
/* harmony default export */ const the_aitiascope = (the_aitiascope_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_tower_of_babil.ts


// TODO: Figure out how to determine whether someone actively stood in Boundless Pain
const the_tower_of_babil_triggerSet = {
  zoneId: zone_id/* default.TheTowerOfBabil */.Z.TheTowerOfBabil,
  damageWarn: {
    'Babil Nimrod Cannon Shot': '6DE1',
    // Large circle AoE, before first boss
    'Babil Tempered Imperial Spread Shot': '6DE2',
    // Conal AoE, before first boss
    'Babil Satellite Incendiary Circle': '6DE3',
    // Large donut AoE, before first boss
    'Babil Reaper Magitek Cannon': '6DE4',
    // AOE circle, before first boss
    'Babil Barnabas Electromagnetic Release 1': '62F1',
    // Center AoE circle, boss 1
    'Babil Barnabas Electromagnetic Release 2': '62EF',
    // Center magnetic line, boss 1
    'Babil Barnabas Rolling Scrapline': '62EB',
    // Center AoE circle, no magnets, boss 1
    'Babil Thunderball Shock': '62F2',
    // Cardinal/intercardinal AoE circles, boss 1
    'Babil Rearguard Cermet Pile': '6DE8',
    // Line AoE, before boss 2
    'Babil Colossus Grand Sword': '6DE9',
    // Frontal cone, before boss 2
    'Babil Avenger Shoulder Cannon': '6DEA',
    // AoE circle, before boss 2
    'Babil Magitek Chakram Mighty Blow': '62F4',
    // Arena AoE, if not mini, boss 2
    'Babil Lugae Surface Missile': '62F7',
    // Targeted AoE circles from Magitek Missile, boss 2
    'Babil Magitek Explosive Explosion': '62F9',
    // Bomberman line AoE, boss 2
    'Babil Lugae Magitek Ray': '62FC',
    // Frontal line AoE, boss 2
    'Babil Zot Sky Armor Garlean Fire': '5E4A',
    // Circle AoE, after boss 2
    'Babil Armored Weapon Diffractive Laser': '5E53',
    // Circle AoE, after boss 2
    'Babil Magitek Crane Crane Game': '6C35',
    // Large environmental circle AoE, after boss 2
    'Babil Hexadrone 2-Tonze Magitek Missile': '6DEC',
    // Circle AoE, after boss 2
    'Babil Roader Rush': '6DED',
    // Rectangle AoE, after boss 2
    'Babil Hypertuned Specimen Right-arm Blaster': '6DF0',
    // Rectangle AoE, after boss 2
    'Babil Anima Phantom Pain': '62FF',
    // Lunar Nail squares, boss 3
    'Babil Mega-graviton Graviton Spark': '6302',
    // Tether failure, boss 3
    'Babil Anima Pater Patiae': '6306',
    // Line AoE, boss 3
    'Babil Anima Obliviating Claw': '630A',
    // Chase puddle initial circle, boss 3
    'Babil Iron Nail Obliviating Claw': '630C',
    // Iron Nail spawn circles, boss 3
    'Babil Iron Nail Charnel Claw': '630D',
    // Line dashes, boss 3
    'Babil Anima Coffin Scratch': '630E' // Chase puddles, boss 3

  },
  gainsEffectWarn: {
    'Babil Barnabas Electrocution': '826' // Arena edge effect, boss 1

  },
  shareWarn: {
    'Babil Anima Erupting Pain': '6308' // Purple spread circles, boss 3

  },
  soloWarn: {
    'Babil Barnabas Shocking Force': '62EC' // Stack marker, boss 1

  },
  triggers: [{
    // Reaching 8 stacks of Breathless is a death
    id: 'Babil Lugae Breathless',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'A70',
      count: '7'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Suffocated',
          de: 'Erstickt',
          ko: '질식'
        }
      };
    }
  }]
};
/* harmony default export */ const the_tower_of_babil = (the_tower_of_babil_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_tower_of_zot.ts

const the_tower_of_zot_triggerSet = {
  zoneId: zone_id/* default.TheTowerOfZot */.Z.TheTowerOfZot,
  damageWarn: {
    'Zot Armored Fiend Soporific Gas': '6CE2',
    // centered circle
    'Zot Minduruva Manusya Blizzard III': '6296',
    // blizzard pinwheel
    'Zot Minduruva Manusya Fire III': '6295',
    // fire donut
    'Zot Minduruva Manusya Thunder III': '6297',
    // thunder "cross" circles
    'Zot Minduruva Manusya Bio III': '6298',
    // 180 degree frontal cleave
    'Zot Death Claw Shred': '54ED',
    // line aoe
    'Zot Hypertuned Left-Arm Slash': '54EC',
    // frontal conal
    'Zot Sanduruva Berserker Sphere Sphere Shatter': '62A4',
    // circles during Explosive Force
    'Zot Predator Magitek Ray': '5E4F',
    // long line aoe
    'Zot Roader Haywire': '5E51',
    // line aoe charge
    'Zot Mark II Zot Colossus Exhaust': '5E4B',
    // long line aoe
    'Zot Armored Weapon Diffractive Laser': '5E53',
    // targeted circle
    'Zot Cinduruva Delta Blizzard III 1': '62B2',
    // lines/pinwheels
    'Zot Cinduruva Delta Blizzard III 2': '62B3',
    // lines/pinwheels
    'Zot Cinduruva Delta Thunder III 1': '62B5',
    // lines/circles
    'Zot Cinduruva Delta Thunder III 2': '62B6',
    // lines/circles
    'Zot Cinduruva Delta Fire III 1': '62AF',
    // lines/donuts
    'Zot Cinduruva Delta Fire III 2': '62B0',
    // lines/donuts
    'Zot Cinduruva Prapti Siddhi': '62BB',
    // Minduruva line during final boss
    'Zot Cinduruva Berserker Sphere Sphere Shatter': '62BF',
    // Explosive Force during final boss
    'Zot Cinduruva Prakamya Siddhi': '62BE' // ?? casted by Sinduruva after Minduruva has died

  },
  shareWarn: {
    'Zot Sanduruva Prapti Siddhi': '62A8' // targeted line, sometimes with stop

  }
};
/* harmony default export */ const the_tower_of_zot = (the_tower_of_zot_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/vanaspati.ts


 // TODO: do tankbusters cleave?
// TODO: what's the effect for running into the outer edge on Terminus Wrecker?
// TODO: what's the effect for running into the outer ring on Svarbhanu?

const vanaspati_triggerSet = {
  zoneId: zone_id/* default.Vanaspati */.Z.Vanaspati,
  damageWarn: {
    'Vanaspati Terminus Trampler Tremblor': '6C22',
    // large centered circle
    'Vanaspati Terminus Idolizer Deadly Tentacles': '6CDD',
    // conal
    'Vanaspati Terminus Snatcher Vitriol': '6232',
    // Mouth Off mouth circles
    'Vanaspati Terminus Snatcher What Is Right': '6233',
    // right cleave
    'Vanaspati Terminus Snatcher What Is Left': '6234',
    // left cleave
    'Vanaspati Terminus Sprinter Hollow Spike': '6C1F',
    // long line aoe
    'Vanaspati Terminus Horror Bellows': '6C1E',
    // 90 degree conal
    'Vanaspati Terminus Bellwether Winds Of Despair': '6CDC',
    // line aoe
    'Vanaspati Svarbhanu Chaotic Undercurrent Purple': '624A',
    // purple square explosions
    'Vanaspati Svarbhanu Chaotic Undercurrent Blue': '624B',
    // blue square explosions
    'Vanaspati Svarbhanu Cosmic Kiss Circle': '624F',
    // midphase circles on ground
    'Vanaspati Svarbhanu Midphase Charge': '631E' // unnamed middphase line attacks

  },
  shareWarn: {
    'Vanaspati Terminus Snatcher Wallow': '6236',
    // spread marker
    'Vanaspati Svarbhanu Cosmic Kiss Spread': '6250' // spread marker

  },
  soloWarn: {
    'Vanaspati Terminus Wrecker Poison Heart': '6CDC' // stack marker

  },
  triggers: [{
    // Lookaway mechanic, does no damage on success.
    id: 'Vanaspati Terminus Twitcher Double Hex Eye',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '6C21',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const vanaspati = (vanaspati_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/hydaelyn-ex.ts

const hydaelyn_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladHydaelynsCall */.Z.TheMinstrelsBalladHydaelynsCall,
  damageWarn: {
    'HydaelynEx Highest Holy': '6598',
    // ??? out
    'HydaelynEx Equinox': '6EB2',
    // ??? cross
    'HydaelynEx Anthelion': '6594',
    // ??? in
    'HydaelynEx Aureole 1': '6F12',
    // go sides
    'HydaelynEx Aureole 2': '6C92',
    // go sides
    'HydaelynEx Lateral Aureole 1': '6690',
    // go front back
    'HydaelynEx Lateral Aureole 2': '6F14',
    // go front back
    'HydaelynEx Light of the Crystal': '65A6',
    // line of sight wave+crystal
    'HydaelynEx Heros\'s Glory': '65A8',
    // get behind
    'HydaelynEx Parhelion Beacon 1': '65B2',
    // initial chakrams
    'HydaelynEx Parhelion Beacon 2': '65B3' // second chakrams

  },
  shareWarn: {
    'HydaelynEx Crystalize Blizzard III': '65A4' // spread

  },
  shareFail: {
    'HydaelynEx Heros\'s Sundering': '65BF' // single tank cleave

  }
};
/* harmony default export */ const hydaelyn_ex = (hydaelyn_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/zodiark.ts



const zodiark_triggerSet = {
  zoneId: zone_id/* default.TheDarkInside */.Z.TheDarkInside,
  damageWarn: {
    'Zodiark Esoteric Sect': '67CC',
    // conal wall summon
    'Zodiark Esoteric Dyad': '67CB',
    // half arena wall summon
    'Zodiark Behemoth Meteoros Eidolon': '67C6',
    // large circles from Behemoth summons
    'Zodiark Python Opheos Eidolon': '67C7',
    // lines from Python summons
    'Zodiark Phlegothon': '67CE',
    // targeted circles
    'Zodiark Esoteric Ray': '67CA',
    // 1+2 lasers
    'Zodiark Adikia 1': '63A8',
    // very large circles that create N/S safe zones
    'Zodiark Adikia 2': '67D9',
    // very large circles that create N/S safe zones
    'Zodiark Algedon': '67D3',
    // move to corner large knockback attack
    'Zodiark Explosion': '67CD' // Astral Eclipse explosions

  },
  shareFail: {
    'Zodiark Ania': '6B62' // tank buster splash with headmarker

  },
  soloWarn: {
    'Zodiark Styx': '67DC' // multi-hit stack marker

  },
  triggers: [{
    id: 'Zodiark Algedon Push',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '67D3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'A été poussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const zodiark = (zodiark_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/oopsy_manifest.txt



















































































































































/* harmony default export */ const oopsy_manifest = ({'00-misc/general.ts': general,'00-misc/test.ts': test,'02-arr/trial/ifrit-nm.ts': ifrit_nm,'02-arr/trial/levi-ex.ts': levi_ex,'02-arr/trial/shiva-ex.ts': shiva_ex,'02-arr/trial/shiva-hm.ts': shiva_hm,'02-arr/trial/titan-ex.ts': titan_ex,'02-arr/trial/titan-hm.ts': titan_hm,'02-arr/trial/titan-nm.ts': titan_nm,'03-hw/alliance/weeping_city.ts': weeping_city,'03-hw/dungeon/aetherochemical_research_facility.ts': aetherochemical_research_facility,'03-hw/dungeon/baelsars_wall.ts': baelsars_wall,'03-hw/dungeon/fractal_continuum.ts': fractal_continuum,'03-hw/dungeon/gubal_library_hard.ts': gubal_library_hard,'03-hw/dungeon/sohm_al_hard.ts': sohm_al_hard,'03-hw/raid/a12n.ts': a12n,'03-hw/raid/a6n.ts': a6n,'04-sb/alliance/orbonne_monastery.ts': orbonne_monastery,'04-sb/alliance/ridorana_lighthouse.ts': ridorana_lighthouse,'04-sb/alliance/royal_city_of_rabanastre.ts': royal_city_of_rabanastre,'04-sb/dungeon/ala_mhigo.ts': ala_mhigo,'04-sb/dungeon/bardams_mettle.ts': bardams_mettle,'04-sb/dungeon/castrum_abania.ts': castrum_abania,'04-sb/dungeon/doma_castle.ts': doma_castle,'04-sb/dungeon/drowned_city_of_skalla.ts': drowned_city_of_skalla,'04-sb/dungeon/fractal_continuum_hard.ts': fractal_continuum_hard,'04-sb/dungeon/ghimlyt_dark.ts': ghimlyt_dark,'04-sb/dungeon/hells_lid.ts': hells_lid,'04-sb/dungeon/kugane_castle.ts': kugane_castle,'04-sb/dungeon/shisui_of_the_violet_tides.ts': shisui_of_the_violet_tides,'04-sb/dungeon/sirensong_sea.ts': sirensong_sea,'04-sb/dungeon/st_mocianne_hard.ts': st_mocianne_hard,'04-sb/dungeon/swallows_compass.ts': swallows_compass,'04-sb/dungeon/temple_of_the_fist.ts': temple_of_the_fist,'04-sb/dungeon/the_burn.ts': the_burn,'04-sb/raid/o10n.ts': o10n,'04-sb/raid/o10s.ts': o10s,'04-sb/raid/o11n.ts': o11n,'04-sb/raid/o11s.ts': o11s,'04-sb/raid/o12n.ts': o12n,'04-sb/raid/o12s.ts': o12s,'04-sb/raid/o1n.ts': o1n,'04-sb/raid/o1s.ts': o1s,'04-sb/raid/o2n.ts': o2n,'04-sb/raid/o2s.ts': o2s,'04-sb/raid/o3n.ts': o3n,'04-sb/raid/o3s.ts': o3s,'04-sb/raid/o4n.ts': o4n,'04-sb/raid/o4s.ts': o4s,'04-sb/raid/o5n.ts': o5n,'04-sb/raid/o5s.ts': o5s,'04-sb/raid/o6n.ts': o6n,'04-sb/raid/o6s.ts': o6s,'04-sb/raid/o7n.ts': o7n,'04-sb/raid/o7s.ts': o7s,'04-sb/raid/o8n.ts': o8n,'04-sb/raid/o8s.ts': o8s,'04-sb/raid/o9n.ts': o9n,'04-sb/raid/o9s.ts': o9s,'04-sb/trial/byakko.ts': byakko,'04-sb/trial/byakko-ex.ts': byakko_ex,'04-sb/trial/lakshmi.ts': lakshmi,'04-sb/trial/lakshmi-ex.ts': lakshmi_ex,'04-sb/trial/rathalos.ts': rathalos,'04-sb/trial/rathalos-ex.ts': rathalos_ex,'04-sb/trial/seiryu.ts': seiryu,'04-sb/trial/seiryu-ex.ts': seiryu_ex,'04-sb/trial/shinryu.ts': shinryu,'04-sb/trial/shinryu-ex.ts': shinryu_ex,'04-sb/trial/susano.ts': susano,'04-sb/trial/susano-ex.ts': susano_ex,'04-sb/trial/suzaku.ts': suzaku,'04-sb/trial/suzaku-ex.ts': suzaku_ex,'04-sb/trial/tsukuyomi.ts': tsukuyomi,'04-sb/trial/tsukuyomi-ex.ts': tsukuyomi_ex,'04-sb/trial/yojimbo.ts': yojimbo,'04-sb/ultimate/ultima_weapon_ultimate.ts': ultima_weapon_ultimate,'04-sb/ultimate/unending_coil_ultimate.ts': unending_coil_ultimate,'05-shb/alliance/the_copied_factory.ts': the_copied_factory,'05-shb/alliance/the_puppets_bunker.ts': the_puppets_bunker,'05-shb/alliance/the_tower_at_paradigms_breach.ts': the_tower_at_paradigms_breach,'05-shb/dungeon/akadaemia_anyder.ts': akadaemia_anyder,'05-shb/dungeon/amaurot.ts': amaurot,'05-shb/dungeon/anamnesis_anyder.ts': anamnesis_anyder,'05-shb/dungeon/dohn_mheg.ts': dohn_mheg,'05-shb/dungeon/heroes_gauntlet.ts': heroes_gauntlet,'05-shb/dungeon/holminster_switch.ts': holminster_switch,'05-shb/dungeon/malikahs_well.ts': malikahs_well,'05-shb/dungeon/matoyas_relict.ts': matoyas_relict,'05-shb/dungeon/mt_gulg.ts': mt_gulg,'05-shb/dungeon/paglthan.ts': paglthan,'05-shb/dungeon/qitana_ravel.ts': qitana_ravel,'05-shb/dungeon/the_grand_cosmos.ts': the_grand_cosmos,'05-shb/dungeon/twinning.ts': twinning,'05-shb/eureka/delubrum_reginae.ts': delubrum_reginae,'05-shb/eureka/delubrum_reginae_savage.ts': delubrum_reginae_savage,'05-shb/raid/e10n.ts': e10n,'05-shb/raid/e10s.ts': e10s,'05-shb/raid/e11n.ts': e11n,'05-shb/raid/e11s.ts': e11s,'05-shb/raid/e12n.ts': e12n,'05-shb/raid/e12s.ts': e12s,'05-shb/raid/e1n.ts': e1n,'05-shb/raid/e1s.ts': e1s,'05-shb/raid/e2n.ts': e2n,'05-shb/raid/e2s.ts': e2s,'05-shb/raid/e3n.ts': e3n,'05-shb/raid/e3s.ts': e3s,'05-shb/raid/e4n.ts': e4n,'05-shb/raid/e4s.ts': e4s,'05-shb/raid/e5n.ts': e5n,'05-shb/raid/e5s.ts': e5s,'05-shb/raid/e6n.ts': e6n,'05-shb/raid/e6s.ts': e6s,'05-shb/raid/e7n.ts': e7n,'05-shb/raid/e7s.ts': e7s,'05-shb/raid/e8n.ts': e8n,'05-shb/raid/e8s.ts': e8s,'05-shb/raid/e9n.ts': e9n,'05-shb/raid/e9s.ts': e9s,'05-shb/trial/diamond_weapon.ts': diamond_weapon,'05-shb/trial/diamond_weapon-ex.ts': diamond_weapon_ex,'05-shb/trial/emerald_weapon.ts': emerald_weapon,'05-shb/trial/emerald_weapon-ex.ts': emerald_weapon_ex,'05-shb/trial/hades.ts': hades,'05-shb/trial/hades-ex.ts': hades_ex,'05-shb/trial/innocence.ts': innocence,'05-shb/trial/innocence-ex.ts': innocence_ex,'05-shb/trial/levi-un.ts': levi_un,'05-shb/trial/ruby_weapon.ts': ruby_weapon,'05-shb/trial/ruby_weapon-ex.ts': ruby_weapon_ex,'05-shb/trial/shiva-un.ts': shiva_un,'05-shb/trial/titania.ts': titania,'05-shb/trial/titania-ex.ts': titania_ex,'05-shb/trial/titan-un.ts': titan_un,'05-shb/trial/varis-ex.ts': varis_ex,'05-shb/trial/wol.ts': wol,'05-shb/trial/wol-ex.ts': wol_ex,'05-shb/ultimate/the_epic_of_alexander.ts': the_epic_of_alexander,'06-ew/dungeon/smileton.ts': smileton,'06-ew/dungeon/the_aitiascope.ts': the_aitiascope,'06-ew/dungeon/the_tower_of_babil.ts': the_tower_of_babil,'06-ew/dungeon/the_tower_of_zot.ts': the_tower_of_zot,'06-ew/dungeon/vanaspati.ts': vanaspati,'06-ew/trial/hydaelyn-ex.ts': hydaelyn_ex,'06-ew/trial/zodiark.ts': zodiark,});

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPLDZCQUE2QixRQUFPLDZCQUE2QixRQUFPLHdCQUF3QixHQUFPLDJCQUEyQixNQUFPLDZDQUE2QyxxQkFBTyw4QkFBOEIsUUFBTyxvQ0FBb0MsY0FBTyx3Q0FBd0Msa0JBQU8sc0NBQXNDLGdCQUFPLCtCQUErQixTQUFPLCtCQUErQixXQUFPLDJCQUEyQixPQUFPLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMC1taXNjL2dlbmVyYWwudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDAtbWlzYy90ZXN0LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAyLWFyci90cmlhbC9pZnJpdC1ubS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvbGV2aS1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvc2hpdmEtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDItYXJyL3RyaWFsL3NoaXZhLWhtLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAyLWFyci90cmlhbC90aXRhbi1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvdGl0YW4taG0udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDItYXJyL3RyaWFsL3RpdGFuLW5tLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2FsbGlhbmNlL3dlZXBpbmdfY2l0eS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9kdW5nZW9uL2FldGhlcm9jaGVtaWNhbF9yZXNlYXJjaF9mYWNpbGl0eS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9kdW5nZW9uL2JhZWxzYXJzX3dhbGwudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDMtaHcvZHVuZ2Vvbi9mcmFjdGFsX2NvbnRpbnV1bS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9kdW5nZW9uL2d1YmFsX2xpYnJhcnlfaGFyZC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9kdW5nZW9uL3NvaG1fYWxfaGFyZC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9yYWlkL2ExMm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDMtaHcvcmFpZC9hNm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvYWxsaWFuY2Uvb3Jib25uZV9tb25hc3RlcnkudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvYWxsaWFuY2Uvcmlkb3JhbmFfbGlnaHRob3VzZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9hbGxpYW5jZS9yb3lhbF9jaXR5X29mX3JhYmFuYXN0cmUudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9hbGFfbWhpZ28udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9iYXJkYW1zX21ldHRsZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2Nhc3RydW1fYWJhbmlhLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vZG9tYV9jYXN0bGUudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9kcm93bmVkX2NpdHlfb2Zfc2thbGxhLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vZnJhY3RhbF9jb250aW51dW1faGFyZC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2doaW1seXRfZGFyay50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2hlbGxzX2xpZC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2t1Z2FuZV9jYXN0bGUudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9zaGlzdWlfb2ZfdGhlX3Zpb2xldF90aWRlcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL3NpcmVuc29uZ19zZWEudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9zdF9tb2NpYW5uZV9oYXJkLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vc3dhbGxvd3NfY29tcGFzcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL3RlbXBsZV9vZl90aGVfZmlzdC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL3RoZV9idXJuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzEwbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9yYWlkL28xMHMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMTFuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzExcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9yYWlkL28xMm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMTJzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzFuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzFzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzJuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzJzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzNuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzNzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzRuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzRzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzVuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzVzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzZuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzZzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzduLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzdzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzhuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzhzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzluLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzlzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL2J5YWtrby50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9ieWFra28tZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvbGFrc2htaS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9sYWtzaG1pLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3JhdGhhbG9zLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3JhdGhhbG9zLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3NlaXJ5dS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9zZWlyeXUtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvc2hpbnJ5dS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9zaGlucnl1LWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3N1c2Fuby50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9zdXNhbm8tZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvc3V6YWt1LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3N1emFrdS1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC90c3VrdXlvbWkudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvdHN1a3V5b21pLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3lvamltYm8udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdWx0aW1hdGUvdWx0aW1hX3dlYXBvbl91bHRpbWF0ZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi91bHRpbWF0ZS91bmVuZGluZ19jb2lsX3VsdGltYXRlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9hbGxpYW5jZS90aGVfY29waWVkX2ZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2FsbGlhbmNlL3RoZV9wdXBwZXRzX2J1bmtlci50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvYWxsaWFuY2UvdGhlX3Rvd2VyX2F0X3BhcmFkaWdtc19icmVhY2gudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vYWthZGFlbWlhX2FueWRlci50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9hbWF1cm90LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL2FuYW1uZXNpc19hbnlkZXIudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vZG9obl9taGVnLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL2hlcm9lc19nYXVudGxldC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9ob2xtaW5zdGVyX3N3aXRjaC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9tYWxpa2Foc193ZWxsLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL21hdG95YXNfcmVsaWN0LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL210X2d1bGcudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vcGFnbHRoYW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vcWl0YW5hX3JhdmVsLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL3RoZV9ncmFuZF9jb3Ntb3MudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vdHdpbm5pbmcudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2V1cmVrYS9kZWx1YnJ1bV9yZWdpbmFlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9ldXJla2EvZGVsdWJydW1fcmVnaW5hZV9zYXZhZ2UudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTEwbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMTBzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2UxMW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTExcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMTJuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2UxMnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTFuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2Uxcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTJzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2Uzbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lM3MudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTRuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U0cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lNW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTVzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U2bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lNnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTduLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U3cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lOG4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZThzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U5bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lOXMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2RpYW1vbmRfd2VhcG9uLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9kaWFtb25kX3dlYXBvbi1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvZW1lcmFsZF93ZWFwb24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2VtZXJhbGRfd2VhcG9uLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9oYWRlcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvaGFkZXMtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2lubm9jZW5jZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvaW5ub2NlbmNlLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9sZXZpLXVuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9ydWJ5X3dlYXBvbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvcnVieV93ZWFwb24tZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3NoaXZhLXVuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC90aXRhbmlhLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC90aXRhbmlhLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC90aXRhbi11bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvdmFyaXMtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3dvbC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvd29sLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi91bHRpbWF0ZS90aGVfZXBpY19vZl9hbGV4YW5kZXIudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDYtZXcvZHVuZ2Vvbi9zbWlsZXRvbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9kdW5nZW9uL3RoZV9haXRpYXNjb3BlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX2JhYmlsLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX3pvdC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9kdW5nZW9uL3ZhbmFzcGF0aS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC9oeWRhZWx5bi1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC96b2RpYXJrLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhL29vcHN5X21hbmlmZXN0LnR4dCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBsb3N0Rm9vZD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuLy8gR2VuZXJhbCBtaXN0YWtlczsgdGhlc2UgYXBwbHkgZXZlcnl3aGVyZS5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLk1hdGNoQWxsLFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIFRyaWdnZXIgaWQgZm9yIGludGVybmFsbHkgZ2VuZXJhdGVkIGVhcmx5IHB1bGwgd2FybmluZy5cclxuICAgICAgaWQ6ICdHZW5lcmFsIEVhcmx5IFB1bGwnLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdHZW5lcmFsIEZvb2QgQnVmZicsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIC8vIFdlbGwgRmVkXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc0OCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gUHJldmVudCBcIkVvcyBsb3NlcyB0aGUgZWZmZWN0IG9mIFdlbGwgRmVkIGZyb20gQ3JpdGxvIE1jZ2VlXCJcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcy50YXJnZXQgPT09IG1hdGNoZXMuc291cmNlO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEubG9zdEZvb2QgPz89IHt9O1xyXG4gICAgICAgIC8vIFdlbGwgRmVkIGJ1ZmYgaGFwcGVucyByZXBlYXRlZGx5IHdoZW4gaXQgZmFsbHMgb2ZmIChXSFkpLFxyXG4gICAgICAgIC8vIHNvIHN1cHByZXNzIG11bHRpcGxlIG9jY3VycmVuY2VzLlxyXG4gICAgICAgIGlmICghZGF0YS5pbkNvbWJhdCB8fCBkYXRhLmxvc3RGb29kW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBkYXRhLmxvc3RGb29kW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ2xvc3QgZm9vZCBidWZmJyxcclxuICAgICAgICAgICAgZGU6ICdOYWhydW5nc2J1ZmYgdmVybG9yZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0J1ZmYgbm91cnJpdHVyZSB0ZXJtaW7DqWUnLFxyXG4gICAgICAgICAgICBqYTogJ+mjr+WKueaenOOBjOWkseOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5aSx5Y676aOf54mpQlVGRicsXHJcbiAgICAgICAgICAgIGtvOiAn7J2M7IudIOuyhO2UhCDtlbTsoJwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdHZW5lcmFsIFdlbGwgRmVkJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzQ4JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmICghZGF0YS5sb3N0Rm9vZClcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBkZWxldGUgZGF0YS5sb3N0Rm9vZFttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0dlbmVyYWwgUmFiYml0IE1lZGl1bScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnOEUwJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5Jc1BsYXllcklkKG1hdGNoZXMuc291cmNlSWQpLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMuc291cmNlLFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMuc291cmNlSWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnYnVubnknLFxyXG4gICAgICAgICAgICBkZTogJ0hhc2UnLFxyXG4gICAgICAgICAgICBmcjogJ2xhcGluJyxcclxuICAgICAgICAgICAgamE6ICfjgYbjgZXjgY4nLFxyXG4gICAgICAgICAgICBjbjogJ+WFlOWtkCcsXHJcbiAgICAgICAgICAgIGtvOiAn7Yag64G8JyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGJvb3RDb3VudD86IG51bWJlcjtcclxuICBwb2tlQ291bnQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbi8vIFRlc3QgbWlzdGFrZSB0cmlnZ2Vycy5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLk1pZGRsZUxhTm9zY2VhLFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBCb3cnLFxyXG4gICAgICB0eXBlOiAnR2FtZUxvZycsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJ1lvdSBib3cgY291cnRlb3VzbHkgdG8gdGhlIHN0cmlraW5nIGR1bW15Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICdWb3VzIHZvdXMgaW5jbGluZXogZGV2YW50IGxlIG1hbm5lcXVpbiBkXFwnZW50cmHDrm5lbWVudC4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirjga/mnKjkurrjgavjgYrovp7lhIDjgZfjgZ8uKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q5oGt5pWs5Zyw5a+55pyo5Lq66KGM56S8Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhLbzogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuuCmOustOyduO2YleyXkOqyjCDqs7XshpDtlZjqsowg7J247IKs7ZWp64uI64ukLio/JyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3B1bGwnLFxyXG4gICAgICAgICAgYmxhbWU6IGRhdGEubWUsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQm93JyxcclxuICAgICAgICAgICAgZGU6ICdCb2dlbicsXHJcbiAgICAgICAgICAgIGZyOiAnU2FsdWVyJyxcclxuICAgICAgICAgICAgamE6ICfjgYrovp7lhIAnLFxyXG4gICAgICAgICAgICBjbjogJ+meoOi6rCcsXHJcbiAgICAgICAgICAgIGtvOiAn7J247IKsJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBXaXBlJyxcclxuICAgICAgdHlwZTogJ0dhbWVMb2cnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICdZb3UgYmlkIGZhcmV3ZWxsIHRvIHRoZSBzdHJpa2luZyBkdW1teS4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnVm91cyBmYWl0ZXMgdm9zIGFkaWV1eCBhdSBtYW5uZXF1aW4gZFxcJ2VudHJhw65uZW1lbnQuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q44Gv5pyo5Lq644Gr5Yil44KM44Gu5oyo5ou244KS44GX44GfLio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuWQkeacqOS6uuWRiuWIqy4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirrgpjrrLTsnbjtmJXsl5Dqsowg7J6R67OEIOyduOyCrOulvCDtlanri4jri6QuKj8nIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2lwZScsXHJcbiAgICAgICAgICBibGFtZTogZGF0YS5tZSxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQYXJ0eSBXaXBlJyxcclxuICAgICAgICAgICAgZGU6ICdHcnVwcGVud2lwZScsXHJcbiAgICAgICAgICAgIGZyOiAnUGFydHkgV2lwZScsXHJcbiAgICAgICAgICAgIGphOiAn44Ov44Kk44OXJyxcclxuICAgICAgICAgICAgY246ICflm6Lnga0nLFxyXG4gICAgICAgICAgICBrbzogJ+2MjO2LsCDsoITrqbgnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdUZXN0IEJvb3RzaGluZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzM1JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChtYXRjaGVzLnNvdXJjZSAhPT0gZGF0YS5tZSlcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICBjb25zdCBzdHJpa2luZ0R1bW15QnlMb2NhbGUgPSB7XHJcbiAgICAgICAgICBlbjogJ1N0cmlraW5nIER1bW15JyxcclxuICAgICAgICAgIGRlOiAnVHJhaW5pbmdzcHVwcGUnLFxyXG4gICAgICAgICAgZnI6ICdNYW5uZXF1aW4gZFxcJ2VudHJhw65uZW1lbnQnLFxyXG4gICAgICAgICAgamE6ICfmnKjkuronLFxyXG4gICAgICAgICAgY246ICfmnKjkuronLFxyXG4gICAgICAgICAga286ICfrgpjrrLTsnbjtmJUnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3Qgc3RyaWtpbmdEdW1teU5hbWVzID0gT2JqZWN0LnZhbHVlcyhzdHJpa2luZ0R1bW15QnlMb2NhbGUpO1xyXG4gICAgICAgIHJldHVybiBzdHJpa2luZ0R1bW15TmFtZXMuaW5jbHVkZXMobWF0Y2hlcy50YXJnZXQpO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuYm9vdENvdW50ID8/PSAwO1xyXG4gICAgICAgIGRhdGEuYm9vdENvdW50Kys7XHJcbiAgICAgICAgY29uc3QgdGV4dCA9IGAke21hdGNoZXMuYWJpbGl0eX0gKCR7ZGF0YS5ib290Q291bnR9KTogJHtkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpfWA7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogZGF0YS5tZSwgcmVwb3J0SWQ6IG1hdGNoZXMuc291cmNlSWQsIHRleHQ6IHRleHQgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBMZWFkZW4gRmlzdCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc3NDUnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBtYXRjaGVzLnNvdXJjZSA9PT0gZGF0YS5tZSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZ29vZCcsIGJsYW1lOiBkYXRhLm1lLCByZXBvcnRJZDogbWF0Y2hlcy5zb3VyY2VJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBPb3BzJyxcclxuICAgICAgdHlwZTogJ0dhbWVMb2cnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5lY2hvKHsgbGluZTogJy4qb29wcy4qJyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAxMCxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBkYXRhLm1lLCB0ZXh0OiBtYXRjaGVzLmxpbmUgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBQb2tlIENvbGxlY3QnLFxyXG4gICAgICB0eXBlOiAnR2FtZUxvZycsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJ1lvdSBwb2tlIHRoZSBzdHJpa2luZyBkdW1teS4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnVm91cyB0b3VjaGV6IGzDqWfDqHJlbWVudCBsZSBtYW5uZXF1aW4gZFxcJ2VudHJhw65uZW1lbnQgZHUgZG9pZ3QuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q44Gv5pyo5Lq644KS44Gk44Gk44GE44GfLio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKueUqOaJi+aMh+aIs+WQkeacqOS6ui4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirrgpjrrLTsnbjtmJXsnYQg7L+h7L+hIOywjOumheuLiOuLpC4qPycgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkYXRhLnBva2VDb3VudCA9IChkYXRhLnBva2VDb3VudCA/PyAwKSArIDE7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgUG9rZScsXHJcbiAgICAgIHR5cGU6ICdHYW1lTG9nJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnWW91IHBva2UgdGhlIHN0cmlraW5nIGR1bW15Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICdWb3VzIHRvdWNoZXogbMOpZ8OocmVtZW50IGxlIG1hbm5lcXVpbiBkXFwnZW50cmHDrm5lbWVudCBkdSBkb2lndC4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirjga/mnKjkurrjgpLjgaTjgaTjgYTjgZ8uKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q55So5omL5oyH5oiz5ZCR5pyo5Lq6Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhLbzogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuuCmOustOyduO2YleydhCDsv6Hsv6Eg7LCM66aF64uI64ukLio/JyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiA1LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIC8vIDEgcG9rZSBhdCBhIHRpbWUgaXMgZmluZSwgYnV0IG1vcmUgdGhhbiBvbmUgaW4gNSBzZWNvbmRzIGlzIChPQlZJT1VTTFkpIGEgbWlzdGFrZS5cclxuICAgICAgICBpZiAoIWRhdGEucG9rZUNvdW50IHx8IGRhdGEucG9rZUNvdW50IDw9IDEpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBkYXRhLm1lLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYFRvbyBtYW55IHBva2VzICgke2RhdGEucG9rZUNvdW50fSlgLFxyXG4gICAgICAgICAgICBkZTogYFp1IHZpZWxlIFBpZWtzZXIgKCR7ZGF0YS5wb2tlQ291bnR9KWAsXHJcbiAgICAgICAgICAgIGZyOiBgVHJvcCBkZSB0b3VjaGVzICgke2RhdGEucG9rZUNvdW50fSlgLFxyXG4gICAgICAgICAgICBqYTogYOOBhOOBo+OBseOBhOOBpOOBpOOBhOOBnyAoJHtkYXRhLnBva2VDb3VudH0pYCxcclxuICAgICAgICAgICAgY246IGDmiLPlpKrlpJrkuIvllaYgKCR7ZGF0YS5wb2tlQ291bnR9KWAsXHJcbiAgICAgICAgICAgIGtvOiBg64SI66y0IOunjuydtCDssIzrpoQgKCR7ZGF0YS5wb2tlQ291bnR967KIKWAsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IGRlbGV0ZSBkYXRhLnBva2VDb3VudCxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIElmcml0IFN0b3J5IE1vZGVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUJvd2xPZkVtYmVycyxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSWZyaXRObSBSYWRpYW50IFBsdW1lJzogJzJERScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdJZnJpdE5tIEluY2luZXJhdGUnOiAnMUM1JyxcclxuICAgICdJZnJpdE5tIEVydXB0aW9uJzogJzJERCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gSXQncyBoYXJkIHRvIGNhcHR1cmUgdGhlIHJlZmxlY3Rpb24gYWJpbGl0aWVzIGZyb20gTGV2aWF0aGFuJ3MgSGVhZCBhbmQgVGFpbCBpZiB5b3UgdXNlXHJcbi8vIHJhbmdlZCBwaHlzaWNhbCBhdHRhY2tzIC8gbWFnaWMgYXR0YWNrcyByZXNwZWN0aXZlbHksIGFzIHRoZSBhYmlsaXR5IG5hbWVzIGFyZSB0aGVcclxuLy8gYWJpbGl0eSB5b3UgdXNlZCBhbmQgZG9uJ3QgYXBwZWFyIHRvIHNob3cgdXAgaW4gdGhlIGxvZyBhcyBub3JtYWwgXCJhYmlsaXR5XCIgbGluZXMuXHJcbi8vIFRoYXQgc2FpZCwgZG90cyBzdGlsbCB0aWNrIGluZGVwZW5kZW50bHkgb24gYm90aCBzbyBpdCdzIGxpa2VseSB0aGF0IHBlb3BsZSB3aWxsIGF0YWNrXHJcbi8vIHRoZW0gYW55d2F5LlxyXG5cclxuLy8gVE9ETzogRmlndXJlIG91dCB3aHkgRHJlYWQgVGlkZSAvIFdhdGVyc3BvdXQgYXBwZWFyIGxpa2Ugc2hhcmVzIChpLmUuIDB4MTYgaWQpLlxyXG4vLyBEcmVhZCBUaWRlID0gODIzLzgyNC84MjUsIFdhdGVyc3BvdXQgPSA4MjlcclxuXHJcbi8vIExldmlhdGhhbiBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXaG9ybGVhdGVyRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTGV2aUV4IEdyYW5kIEZhbGwnOiAnODJGJywgLy8gdmVyeSBsYXJnZSBjaXJjdWxhciBhb2UgYmVmb3JlIHNwaW5ueSBkaXZlcywgYXBwbGllcyBoZWF2eVxyXG4gICAgJ0xldmlFeCBIeWRybyBTaG90JzogJzc0OCcsIC8vIFdhdmVzcGluZSBTYWhhZ2luIGFvZSB0aGF0IGdpdmVzIERyb3BzeSBlZmZlY3RcclxuICAgICdMZXZpRXggRHJlYWRzdG9ybSc6ICc3NDknLCAvLyBXYXZldG9vdGggU2FoYWdpbiBhb2UgdGhhdCBnaXZlcyBIeXN0ZXJpYSBlZmZlY3RcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdMZXZpRXggQm9keSBTbGFtJzogJzgyQScsIC8vIGxldmkgc2xhbSB0aGF0IHRpbHRzIHRoZSBib2F0XHJcbiAgICAnTGV2aUV4IFNwaW5uaW5nIERpdmUgMSc6ICc4OEEnLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgICAnTGV2aUV4IFNwaW5uaW5nIERpdmUgMic6ICc4OEInLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgICAnTGV2aUV4IFNwaW5uaW5nIERpdmUgMyc6ICc4MkMnLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdMZXZpRXggRHJvcHN5JzogJzExMCcsIC8vIHN0YW5kaW5nIGluIHRoZSBoeWRybyBzaG90IGZyb20gdGhlIFdhdmVzcGluZSBTYWhhZ2luXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdMZXZpRXggSHlzdGVyaWEnOiAnMTI4JywgLy8gc3RhbmRpbmcgaW4gdGhlIGRyZWFkc3Rvcm0gZnJvbSB0aGUgV2F2ZXRvb3RoIFNhaGFnaW5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTGV2aUV4IEJvZHkgU2xhbSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnODJBJyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNoaXZhIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFraEFmYWhBbXBoaXRoZWF0cmVFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIExhcmdlIHdoaXRlIGNpcmNsZXMuXHJcbiAgICAnU2hpdmFFeCBJY2ljbGUgSW1wYWN0JzogJ0JFQicsXHJcbiAgICAvLyBcImdldCBpblwiIGFvZVxyXG4gICAgJ1NoaXZhRXggV2hpdGVvdXQnOiAnQkVDJyxcclxuICAgIC8vIEF2b2lkYWJsZSB0YW5rIHN0dW4uXHJcbiAgICAnU2hpdmFFeCBHbGFjaWVyIEJhc2gnOiAnQkU5JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIDI3MCBkZWdyZWUgYXR0YWNrLlxyXG4gICAgJ1NoaXZhRXggR2xhc3MgRGFuY2UnOiAnQkRGJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgLy8gSGFpbHN0b3JtIHNwcmVhZCBtYXJrZXIuXHJcbiAgICAnU2hpdmFFeCBIYWlsc3Rvcm0nOiAnQkUyJyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gTGFzZXIuICBUT0RPOiBtYXliZSBibGFtZSB0aGUgcGVyc29uIGl0J3Mgb24/P1xyXG4gICAgJ1NoaXZhRXggQXZhbGFuY2hlJzogJ0JFMCcsXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgLy8gUGFydHkgc2hhcmVkIHRhbmtidXN0ZXJcclxuICAgICdTaGl2YUV4IEljZWJyYW5kJzogJ0JFMScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1NoaXZhRXggRGVlcCBGcmVlemUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBTaGl2YSBhbHNvIHVzZXMgYWJpbGl0eSBDOEEgb24geW91LCBidXQgaXQgaGFzIHRoZSB1bnRyYW5zbGF0ZWQgbmFtZVxyXG4gICAgICAvLyDpgI/mmI7vvJrjgrfjg7TjgqHvvJrlh43ntZDjg6zjgq/jg4jvvJrjg47jg4Pjgq/jg5Djg4Pjgq/nlKgv44OS44Ot44Kk44OD44KvLiBTbywgdXNlIHRoZSBlZmZlY3QgaW5zdGVhZCBmb3IgZnJlZSB0cmFuc2xhdGlvbi5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzFFNycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gVGhlIGludGVybWlzc2lvbiBhbHNvIGdldHMgdGhpcyBlZmZlY3QsIGJ1dCBmb3IgYSBzaG9ydGVyIGR1cmF0aW9uLlxyXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pID4gMjA7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHNlZW5EaWFtb25kRHVzdD86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8vIFNoaXZhIEhhcmRcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFraEFmYWhBbXBoaXRoZWF0cmVIYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIExhcmdlIHdoaXRlIGNpcmNsZXMuXHJcbiAgICAnU2hpdmFIbSBJY2ljbGUgSW1wYWN0JzogJzk5MycsXHJcbiAgICAvLyBBdm9pZGFibGUgdGFuayBzdHVuLlxyXG4gICAgJ1NoaXZhSG0gR2xhY2llciBCYXNoJzogJzlBMScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgIC8vIEtub2NrYmFjayB0YW5rIGNsZWF2ZS5cclxuICAgICdTaGl2YUhtIEhlYXZlbmx5IFN0cmlrZSc6ICc5QTAnLFxyXG4gICAgLy8gSGFpbHN0b3JtIHNwcmVhZCBtYXJrZXIuXHJcbiAgICAnU2hpdmFIbSBIYWlsc3Rvcm0nOiAnOTk4JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gVGFua2J1c3Rlci4gIFRoaXMgaXMgU2hpdmEgSGFyZCBtb2RlLCBub3QgU2hpdmEgRXh0cmVtZS4gIFBsZWFzZSFcclxuICAgICdTaGl2YUhtIEljZWJyYW5kJzogJzk5NicsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1NoaXZhSG0gRGlhbW9uZCBEdXN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc5OEEnIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zZWVuRGlhbW9uZER1c3QgPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGl2YUhtIERlZXAgRnJlZXplJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU2hpdmEgYWxzbyB1c2VzIGFiaWxpdHkgOUEzIG9uIHlvdSwgYnV0IGl0IGhhcyB0aGUgdW50cmFuc2xhdGVkIG5hbWVcclxuICAgICAgLy8g6YCP5piO77ya44K344O044Kh77ya5YeN57WQ44Os44Kv44OI77ya44OO44OD44Kv44OQ44OD44Kv55SoLiBTbywgdXNlIHRoZSBlZmZlY3QgaW5zdGVhZCBmb3IgZnJlZSB0cmFuc2xhdGlvbi5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzFFNycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+IHtcclxuICAgICAgICAvLyBUaGUgaW50ZXJtaXNzaW9uIGFsc28gZ2V0cyB0aGlzIGVmZmVjdCwgc28gb25seSBhIG1pc3Rha2UgYWZ0ZXIgdGhhdC5cclxuICAgICAgICAvLyBVbmxpa2UgZXh0cmVtZSwgdGhpcyBoYXMgdGhlIHNhbWUgMjAgc2Vjb25kIGR1cmF0aW9uIGFzIHRoZSBpbnRlcm1pc3Npb24uXHJcbiAgICAgICAgcmV0dXJuIGRhdGEuc2VlbkRpYW1vbmREdXN0O1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRpdGFuIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU5hdmVsRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5FeCBXZWlnaHQgT2YgVGhlIExhbmQnOiAnNUJFJyxcclxuICAgICdUaXRhbkV4IEJ1cnN0JzogJzVCRicsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVGl0YW5FeCBMYW5kc2xpZGUnOiAnNUJCJyxcclxuICAgICdUaXRhbkV4IEdhb2xlciBMYW5kc2xpZGUnOiAnNUMzJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1RpdGFuRXggUm9jayBCdXN0ZXInOiAnNUI3JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RpdGFuRXggTW91bnRhaW4gQnVzdGVyJzogJzVCOCcsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1RpdGFuRXggTGFuZHNsaWRlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNUJCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIHBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaXRhbiBIYXJkXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVOYXZlbEhhcmQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RpdGFuSG0gV2VpZ2h0IE9mIFRoZSBMYW5kJzogJzU1MycsXHJcbiAgICAnVGl0YW5IbSBCdXJzdCc6ICc0MUMnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RpdGFuSG0gTGFuZHNsaWRlJzogJzU1NCcsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdUaXRhbkhtIFJvY2sgQnVzdGVyJzogJzU1MCcsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUaXRhbkhtIE1vdW50YWluIEJ1c3Rlcic6ICcyODMnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaXRhbiBTdG9yeSBNb2RlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVOYXZlbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5ObSBXZWlnaHQgT2YgVGhlIExhbmQnOiAnM0NEJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaXRhbk5tIExhbmRzbGlkZSc6ICcyOEEnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVGl0YW5ObSBSb2NrIEJ1c3Rlcic6ICcyODEnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICB6b21iaWU/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgc2hpZWxkPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlV2VlcGluZ0NpdHlPZk1oYWNoLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdXZWVwaW5nIENyaXRpY2FsIEJpdGUnOiAnMTg0OCcsIC8vIFNhcnN1Y2h1cyBjb25lIGFvZVxyXG4gICAgJ1dlZXBpbmcgUmVhbG0gU2hha2VyJzogJzE4M0UnLCAvLyBGaXJzdCBEYXVnaHRlciBjaXJjbGUgYW9lXHJcbiAgICAnV2VlcGluZyBTaWxrc2NyZWVuJzogJzE4M0MnLCAvLyBGaXJzdCBEYXVnaHRlciBsaW5lIGFvZVxyXG4gICAgJ1dlZXBpbmcgU2lsa2VuIFNwcmF5JzogJzE4MjQnLCAvLyBBcmFjaG5lIEV2ZSByZWFyIGNvbmFsIGFvZVxyXG4gICAgJ1dlZXBpbmcgVHJlbWJsb3IgMSc6ICcxODM3JywgLy8gQXJhY2huZSBFdmUgZGlzYXBwZWFyIGNpcmNsZSBhb2UgMVxyXG4gICAgJ1dlZXBpbmcgVHJlbWJsb3IgMic6ICcxODM2JywgLy8gQXJhY2huZSBFdmUgZGlzYXBwZWFyIGNpcmNsZSBhb2UgMlxyXG4gICAgJ1dlZXBpbmcgVHJlbWJsb3IgMyc6ICcxODM1JywgLy8gQXJhY2huZSBFdmUgZGlzYXBwZWFyIGNpcmNsZSBhb2UgM1xyXG4gICAgJ1dlZXBpbmcgU3BpZGVyIFRocmVhZCc6ICcxODM5JywgLy8gQXJhY2huZSBFdmUgc3BpZGVyIGxpbmUgYW9lXHJcbiAgICAnV2VlcGluZyBGaXJlIElJJzogJzE4NEUnLCAvLyBCbGFjayBNYWdlIENvcnBzZSBjaXJjbGUgYW9lXHJcbiAgICAnV2VlcGluZyBOZWNyb3B1cmdlJzogJzE3RDcnLCAvLyBGb3JnYWxsIFNocml2ZWxlZCBUYWxvbiBsaW5lIGFvZVxyXG4gICAgJ1dlZXBpbmcgUm90dGVuIEJyZWF0aCc6ICcxN0QwJywgLy8gRm9yZ2FsbCBEYWhhayBjb25lIGFvZVxyXG4gICAgJ1dlZXBpbmcgTW93JzogJzE3RDInLCAvLyBGb3JnYWxsIEhhYWdlbnRpIHVubWFya2VkIGNsZWF2ZVxyXG4gICAgJ1dlZXBpbmcgRGFyayBFcnVwdGlvbic6ICcxN0MzJywgLy8gRm9yZ2FsbCBwdWRkbGUgbWFya2VyXHJcbiAgICAvLyAxODA2IGlzIGFsc28gRmxhcmUgU3RhciwgYnV0IGlmIHlvdSBnZXQgYnkgMTgwNSB5b3UgYWxzbyBnZXQgaGl0IGJ5IDE4MDY/XHJcbiAgICAnV2VlcGluZyBGbGFyZSBTdGFyJzogJzE4MDUnLCAvLyBPem1hIGN1YmUgcGhhc2UgZG9udXRcclxuICAgICdXZWVwaW5nIEV4ZWNyYXRpb24nOiAnMTgyOScsIC8vIE96bWEgdHJpYW5nbGUgbGFzZXJcclxuICAgICdXZWVwaW5nIEhhaXJjdXQgMSc6ICcxODBCJywgLy8gQ2Fsb2Zpc3RlcmkgMTgwIGNsZWF2ZSAxXHJcbiAgICAnV2VlcGluZyBIYWlyY3V0IDInOiAnMTgwRicsIC8vIENhbG9maXN0ZXJpIDE4MCBjbGVhdmUgMlxyXG4gICAgJ1dlZXBpbmcgRW50YW5nbGVtZW50JzogJzE4MUQnLCAvLyBDYWxvZmlzdGVyaSBsYW5kbWluZSBwdWRkbGUgcHJvY1xyXG4gICAgJ1dlZXBpbmcgRXZpbCBDdXJsJzogJzE4MTYnLCAvLyBDYWxvZmlzdGVyaSBheGVcclxuICAgICdXZWVwaW5nIEV2aWwgVHJlc3MnOiAnMTgxNycsIC8vIENhbG9maXN0ZXJpIGJ1bGJcclxuICAgICdXZWVwaW5nIERlcHRoIENoYXJnZSc6ICcxODIwJywgLy8gQ2Fsb2Zpc3RlcmkgY2hhcmdlIHRvIGVkZ2VcclxuICAgICdXZWVwaW5nIEZlaW50IFBhcnRpY2xlIEJlYW0nOiAnMTkyOCcsIC8vIENhbG9maXN0ZXJpIHNreSBsYXNlclxyXG4gICAgJ1dlZXBpbmcgRXZpbCBTd2l0Y2gnOiAnMTgxNScsIC8vIENhbG9maXN0ZXJpIGxhc2Vyc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnV2VlcGluZyBIeXN0ZXJpYSc6ICcxMjgnLCAvLyBBcmFjaG5lIEV2ZSBGcm9uZCBBZmZlYXJkXHJcbiAgICAnV2VlcGluZyBab21iaWZpY2F0aW9uJzogJzE3MycsIC8vIEZvcmdhbGwgdG9vIG1hbnkgem9tYmllIHB1ZGRsZXNcclxuICAgICdXZWVwaW5nIFRvYWQnOiAnMUI3JywgLy8gRm9yZ2FsbCBCcmFuZCBvZiB0aGUgRmFsbGVuIGZhaWx1cmVcclxuICAgICdXZWVwaW5nIERvb20nOiAnMzhFJywgLy8gRm9yZ2FsbCBIYWFnZW50aSBNb3J0YWwgUmF5XHJcbiAgICAnV2VlcGluZyBBc3NpbWlsYXRpb24nOiAnNDJDJywgLy8gT3ptYXNoYWRlIEFzc2ltaWxhdGlvbiBsb29rLWF3YXlcclxuICAgICdXZWVwaW5nIFN0dW4nOiAnOTUnLCAvLyBDYWxvZmlzdGVyaSBQZW5ldHJhdGlvbiBsb29rLWF3YXlcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1dlZXBpbmcgQXJhY2huZSBXZWInOiAnMTg1RScsIC8vIEFyYWNobmUgRXZlIGhlYWRtYXJrZXIgd2ViIGFvZVxyXG4gICAgJ1dlZXBpbmcgRWFydGggQWV0aGVyJzogJzE4NDEnLCAvLyBBcmFjaG5lIEV2ZSBvcmJzXHJcbiAgICAnV2VlcGluZyBFcGlncmFwaCc6ICcxODUyJywgLy8gSGVhZHN0b25lIHVudGVsZWdyYXBoZWQgbGFzZXIgbGluZSB0YW5rIGF0dGFja1xyXG4gICAgLy8gVGhpcyBpcyB0b28gbm9pc3kuICBCZXR0ZXIgdG8gcG9wIHRoZSBiYWxsb29ucyB0aGFuIHdvcnJ5IGFib3V0IGZyaWVuZHMuXHJcbiAgICAvLyAnV2VlcGluZyBFeHBsb3Npb24nOiAnMTgwNycsIC8vIE96bWFzcGhlcmUgQ3ViZSBvcmIgZXhwbG9zaW9uXHJcbiAgICAnV2VlcGluZyBTcGxpdCBFbmQgMSc6ICcxODBDJywgLy8gQ2Fsb2Zpc3RlcmkgdGFuayBjbGVhdmUgMVxyXG4gICAgJ1dlZXBpbmcgU3BsaXQgRW5kIDInOiAnMTgxMCcsIC8vIENhbG9maXN0ZXJpIHRhbmsgY2xlYXZlIDJcclxuICAgICdXZWVwaW5nIEJsb29kaWVkIE5haWwnOiAnMTgxRicsIC8vIENhbG9maXN0ZXJpIGF4ZS9idWxiIGFwcGVhcmluZ1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEZvcmdhbGwgR3JhZHVhbCBab21iaWZpY2F0aW9uIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNDE1JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuem9tYmllID8/PSB7fTtcclxuICAgICAgICBkYXRhLnpvbWJpZVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEZvcmdhbGwgR3JhZHVhbCBab21iaWZpY2F0aW9uIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNDE1JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuem9tYmllID0gZGF0YS56b21iaWUgfHwge307XHJcbiAgICAgICAgZGF0YS56b21iaWVbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1dlZXBpbmcgRm9yZ2FsbCBNZWdhIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcxN0NBJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS56b21iaWUgJiYgIWRhdGEuem9tYmllW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEhlYWRzdG9uZSBTaGllbGQgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxNUUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zaGllbGQgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuc2hpZWxkW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1dlZXBpbmcgSGVhZHN0b25lIFNoaWVsZCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzE1RScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNoaWVsZCA9IGRhdGEuc2hpZWxkIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuc2hpZWxkW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEZsYXJpbmcgRXBpZ3JhcGgnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzE4NTYnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnNoaWVsZCAmJiAhZGF0YS5zaGllbGRbbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGlzIGFiaWxpdHkgbmFtZSBpcyBoZWxwZnVsbHkgY2FsbGVkIFwiQXR0YWNrXCIgc28gbmFtZSBpdCBzb21ldGhpbmcgZWxzZS5cclxuICAgICAgaWQ6ICdXZWVwaW5nIE96bWEgVGFuayBMYXNlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHR5cGU6ICcyMicsIGlkOiAnMTgzMScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnVGFuayBMYXNlcicsXHJcbiAgICAgICAgICAgIGRlOiAnVGFuayBMYXNlcicsXHJcbiAgICAgICAgICAgIGZyOiAnVGFuayBMYXNlcicsXHJcbiAgICAgICAgICAgIGphOiAn44K/44Oz44Kv44Os44K244O8JyxcclxuICAgICAgICAgICAgY246ICflnablhYvmv4DlhYknLFxyXG4gICAgICAgICAgICBrbzogJ+2Dsey7pCDroIjsnbTsoIAnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIE96bWEgSG9seScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMTgyRScgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdTbGlkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ2lzdCBydW50ZXJnZXJ1dHNjaHQhJyxcclxuICAgICAgICAgICAgZnI6ICdBIGdsaXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDvvIEnLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBBZXRoZXJvY2hlbWljYWwgUmVzZWFyY2ggRmFjaWxpdHlcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFldGhlcm9jaGVtaWNhbFJlc2VhcmNoRmFjaWxpdHksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0FSRiBHcmFuZCBTd29yZCc6ICcyMTYnLCAvLyBDb25hbCBBb0UsIFNjcmFtYmxlZCBJcm9uIEdpYW50IHRyYXNoXHJcbiAgICAnQVJGIENlcm1ldCBEcmlsbCc6ICcyMEUnLCAvLyBMaW5lIEFvRSwgNnRoIExlZ2lvbiBNYWdpdGVrIFZhbmd1YXJkIHRyYXNoXHJcbiAgICAnQVJGIE1hZ2l0ZWsgU2x1Zyc6ICcxMERCJywgLy8gTGluZSBBb0UsIGJvc3MgMVxyXG4gICAgJ0FSRiBBZXRoZXJvY2hlbWljYWwgR3JlbmFkbyc6ICcxMEUyJywgLy8gTGFyZ2UgdGFyZ2V0ZWQgY2lyY2xlIEFvRSwgTWFnaXRlayBUdXJyZXQgSUksIGJvc3MgMVxyXG4gICAgJ0FSRiBNYWdpdGVrIFNwcmVhZCc6ICcxMERDJywgLy8gMjcwLWRlZ3JlZSByb29td2lkZSBBb0UsIGJvc3MgMVxyXG4gICAgJ0FSRiBFZXJpZSBTb3VuZHdhdmUnOiAnMTE3MCcsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIEN1bHR1cmVkIEVtcHVzYSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBUYWlsIFNsYXAnOiAnMTI1RicsIC8vIENvbmFsIEFvRSwgQ3VsdHVyZWQgRGFuY2VyIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIENhbGNpZnlpbmcgTWlzdCc6ICcxMjNBJywgLy8gQ29uYWwgQW9FLCBDdWx0dXJlZCBOYWdhIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIFB1bmN0dXJlJzogJzExNzEnLCAvLyBTaG9ydCBsaW5lIEFvRSwgQ3VsdHVyZWQgRW1wdXNhIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIFNpZGVzd2lwZSc6ICcxMUE3JywgLy8gQ29uYWwgQW9FLCBDdWx0dXJlZCBSZXB0b2lkIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIEd1c3QnOiAnMzk1JywgLy8gVGFyZ2V0ZWQgc21hbGwgY2lyY2xlIEFvRSwgQ3VsdHVyZWQgTWlycm9ya25pZ2h0IHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIE1hcnJvdyBEcmFpbic6ICdEMEUnLCAvLyBDb25hbCBBb0UsIEN1bHR1cmVkIENoaW1lcmEgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdBUkYgUmlkZGxlIE9mIFRoZSBTcGhpbngnOiAnMTBFNCcsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIGJvc3MgMlxyXG4gICAgJ0FSRiBLYSc6ICcxMDZFJywgLy8gQ29uYWwgQW9FLCBib3NzIDJcclxuICAgICdBUkYgUm90b3N3aXBlJzogJzExQ0MnLCAvLyBDb25hbCBBb0UsIEZhY2lsaXR5IERyZWFkbm91Z2h0IHRyYXNoLCBiZWZvcmUgYm9zcyAzXHJcbiAgICAnQVJGIEF1dG8tY2Fubm9ucyc6ICcxMkQ5JywgLy8gTGluZSBBb0UsIE1vbml0b3JpbmcgRHJvbmUgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdBUkYgRGVhdGhcXCdzIERvb3InOiAnNEVDJywgLy8gTGluZSBBb0UsIEN1bHR1cmVkIFNoYWJ0aSB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FSRiBTcGVsbHN3b3JkJzogJzRFQicsIC8vIENvbmFsIEFvRSwgQ3VsdHVyZWQgU2hhYnRpIHRyYXNoLCBiZWZvcmUgYm9zcyAzXHJcbiAgICAnQVJGIEVuZCBPZiBEYXlzJzogJzEwRkQnLCAvLyBMaW5lIEFvRSwgYm9zcyAzXHJcbiAgICAnQVJGIEJsaXp6YXJkIEJ1cnN0JzogJzEwRkUnLCAvLyBGaXhlZCBjaXJjbGUgQW9FcywgSWdleW9yaG0sIGJvc3MgM1xyXG4gICAgJ0FSRiBGaXJlIEJ1cnN0JzogJzEwRkYnLCAvLyBGaXhlZCBjaXJjbGUgQW9FcywgTGFoYWJyZWEsIGJvc3MgM1xyXG4gICAgJ0FSRiBTZWEgT2YgUGl0Y2gnOiAnMTJERScsIC8vIFRhcmdldGVkIHBlcnNpc3RlbnQgY2lyY2xlIEFvRXMsIGJvc3MgM1xyXG4gICAgJ0FSRiBEYXJrIEJsaXp6YXJkIElJJzogJzEwRjMnLCAvLyBSYW5kb20gY2lyY2xlIEFvRXMsIElnZXlvcmhtLCBib3NzIDNcclxuICAgICdBUkYgRGFyayBGaXJlIElJJzogJzEwRjgnLCAvLyBSYW5kb20gY2lyY2xlIEFvRXMsIExhaGFicmVhLCBib3NzIDNcclxuICAgICdBUkYgQW5jaWVudCBFcnVwdGlvbic6ICcxMTA0JywgLy8gU2VsZi10YXJnZXRlZCBjaXJjbGUgQW9FLCBib3NzIDRcclxuICAgICdBUkYgRW50cm9waWMgRmxhbWUnOiAnMTEwOCcsIC8vIExpbmUgQW9FcywgIGJvc3MgNFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQVJGIENodGhvbmljIEh1c2gnOiAnMTBFNycsIC8vIEluc3RhbnQgdGFuayBjbGVhdmUsIGJvc3MgMlxyXG4gICAgJ0FSRiBIZWlnaHQgT2YgQ2hhb3MnOiAnMTEwMScsIC8vIFRhbmsgY2xlYXZlLCBib3NzIDRcclxuICAgICdBUkYgQW5jaWVudCBDaXJjbGUnOiAnMTEwMicsIC8vIFRhcmdldGVkIGRvbnV0IEFvRXMsIGJvc3MgNFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdBUkYgUGV0cmlmYWN0aW9uJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzAxJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gQmFlbHNhcidzIFdhbGxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkJhZWxzYXJzV2FsbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQmFlbHNhciAzcmQgQ29ob3J0IExhcXVlcml1cyBPdmVycG93ZXInOiAnMkQwJywgLy8gQ29uYWwgQW9FLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnQmFlbHNhciAzcmQgQ29ob3J0IENhbmlzIFB1Z25heCBCZWxsb3dpbmcgR3J1bnQnOiAnMTUwJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0JhZWxzYXIgM3JkIENvaG9ydCBTaWduaWZpZXIgRGFyayBGaXJlIElJSSc6ICc1MTknLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBiZWZvcmUgYm9zcyAxXHJcblxyXG4gICAgJ0JhZWxzYXIgTWFnaXRlayBQcmVkYXRvciBNYWdpdGVrIFJheSc6ICcxQ0IzJywgLy8gTGluZSBBb0UsIGJvc3MgMVxyXG5cclxuICAgICdCYWVsc2FyIEFkYW1hbnRpdGUgQ2xhdyBTaHJlZCc6ICcxMjU3JywgLy8gUmVjdGFuZ2xlIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0JhZWxzYXIgTWFnaXRlayBDb2xvc3N1cyBFeGhhdXN0JzogJzU5MycsIC8vIExpbmUgQW9FLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQmFlbHNhciBNYWdpdGVrIENvbG9zc3VzIEdyYW5kIFN3b3JkJzogJzEyNkEnLCAvLyBDb25hbCBBb0UsIGJlZm9yZSBib3NzIDJcclxuXHJcbiAgICAnQmFlbHNhciBBcm1vcmVkIFdlYXBvbiBEeW5hbWljIFNlbnNvcnkgSmFtbWVyJzogJzFDQkEnLCAvLyBFeHRyZW1lIENhdXRpb24gZmFpbHVyZSwgYm9zcyAyXHJcbiAgICAnQmFlbHNhciBBcm1vcmVkIFdlYXBvbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICcxQ0JCJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgYm9zcyAyXHJcbiAgICAnQmFlbHNhciBNYWdpdGVrIEJpdCBBc3NhdWx0IENhbm5vbic6ICcxQ0MwJywgLy8gQ2hlY2tlcmJvYXJkIGxpbmUgQW9FcywgYm9zcyAyXHJcblxyXG4gICAgJ0JhZWxzYXIgTWFnaXRlayBHdW5zaGlwIENhcnBldCBCb21iJzogJzFDQ0YnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuICAgICdCYWVsc2FyIExhbmNlLVdpZWxkaW5nIExveWFsaXN0IEhlYXJ0c3RvcHBlcic6ICczNjInLCAvLyBSZWN0YW5nbGUgQW9FLCBhZnRlciBib3NzIDJcclxuXHJcbiAgICAnQmFlbHNhciBUaGUgR3JpZmZpbiBTYW5ndWluZSBCbGFkZSc6ICcxQ0M1JywgLy8gQXJlbmEgY2xlYXZlLCBib3NzIDNcclxuICAgICdCYWVsc2FyIEJsYWRlIE9mIFRoZSBHcmlmZmluIENvcnJvc2lvbic6ICcxQ0NDJywgLy8gQ2lyY2xlIEFvRSwgYm9zcyAzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdCYWVsc2FyIFRoZSBHcmlmZmluIEFjY3VyYWN5IERvd24nOiAnMUMnLCAvLyBGbGFzaCBQb3dkZXIgZmFpbHVyZSwgYm9zcyAzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEZyYWN0YWwgQ29udGludXVtXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVGcmFjdGFsQ29udGludXVtLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdGcmFjdGFsIERvdWJsZSBTZXZlcic6ICdGN0QnLCAvLyBDb25hbHMsIGJvc3MgMVxyXG4gICAgJ0ZyYWN0YWwgQWV0aGVyaWMgQ29tcHJlc3Npb24nOiAnRjgwJywgLy8gR3JvdW5kIEFvRSBjaXJjbGVzLCBib3NzIDFcclxuICAgICdGcmFjdGFsIDExLVRvbnplIFN3aXBlJzogJ0Y4MScsIC8vIEZyb250YWwgY29uZSwgYm9zcyAyXHJcbiAgICAnRnJhY3RhbCAxMC1Ub256ZSBTbGFzaCc6ICdGODMnLCAvLyBGcm9udGFsIGxpbmUsIGJvc3MgMlxyXG4gICAgJ0ZyYWN0YWwgMTExLVRvbnplIFN3aW5nJzogJ0Y4NycsIC8vIEdldC1vdXQgQW9FLCBib3NzIDJcclxuICAgICdGcmFjdGFsIEJyb2tlbiBHbGFzcyc6ICdGOEUnLCAvLyBHbG93aW5nIHBhbmVscywgYm9zcyAzXHJcbiAgICAnRnJhY3RhbCBNaW5lcyc6ICdGOTAnLFxyXG4gICAgJ0ZyYWN0YWwgU2VlZCBvZiB0aGUgUml2ZXJzJzogJ0Y5MScsIC8vIEdyb3VuZCBBb0UgY2lyY2xlcywgYm9zcyAzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdGcmFjdGFsIFNhbmN0aWZpY2F0aW9uJzogJ0Y4OScsIC8vIEluc3RhbnQgY29uYWwgYnVzdGVyLCBib3NzIDNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzSW1wPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlR3JlYXRHdWJhbExpYnJhcnlIYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdHdWJhbEhtIFRlcnJvciBFeWUnOiAnOTMwJywgLy8gQ2lyY2xlIEFvRSwgU3BpbmUgQnJlYWtlciB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gQmF0dGVyJzogJzE5OEEnLCAvLyBDaXJjbGUgQW9FLCB0cmFzaCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBDb25kZW1uYXRpb24nOiAnMzkwJywgLy8gQ29uYWwgQW9FLCBCaWJsaW92b3JlIHRyYXNoXHJcbiAgICAnR3ViYWxIbSBEaXNjb250aW51ZSAxJzogJzE5NDMnLCAvLyBGYWxsaW5nIGJvb2sgc2hhZG93LCBib3NzIDFcclxuICAgICdHdWJhbEhtIERpc2NvbnRpbnVlIDInOiAnMTk0MCcsIC8vIFJ1c2ggQW9FIGZyb20gZW5kcywgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBEaXNjb250aW51ZSAzJzogJzE5NDInLCAvLyBSdXNoIEFvRSBhY3Jvc3MsIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gRnJpZ2h0ZnVsIFJvYXInOiAnMTkzQicsIC8vIEdldC1PdXQgQW9FLCBib3NzIDFcclxuICAgICdHdWJhbEhtIElzc3VlIDEnOiAnMTkzRCcsIC8vIEluaXRpYWwgZW5kIGJvb2sgd2FybmluZyBBb0UsIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gSXNzdWUgMic6ICcxOTNGJywgLy8gSW5pdGlhbCBlbmQgYm9vayB3YXJuaW5nIEFvRSwgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBJc3N1ZSAzJzogJzE5NDEnLCAvLyBJbml0aWFsIHNpZGUgYm9vayB3YXJuaW5nIEFvRSwgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBEZXNvbGF0aW9uJzogJzE5OEMnLCAvLyBMaW5lIEFvRSwgQmlibGlvY2xhc3QgdHJhc2hcclxuICAgICdHdWJhbEhtIERvdWJsZSBTbWFzaCc6ICcyNkEnLCAvLyBDb25hbCBBb0UsIEJpYmxpb2NsYXN0IHRyYXNoXHJcbiAgICAnR3ViYWxIbSBEYXJrbmVzcyc6ICczQTAnLCAvLyBDb25hbCBBb0UsIElua3N0YWluIHRyYXNoXHJcbiAgICAnR3ViYWxIbSBGaXJld2F0ZXInOiAnM0JBJywgLy8gQ2lyY2xlIEFvRSwgQmlibGlvY2xhc3QgdHJhc2hcclxuICAgICdHdWJhbEhtIEVsYm93IERyb3AnOiAnQ0JBJywgLy8gQ29uYWwgQW9FLCBCaWJsaW9jbGFzdCB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gRGFyayc6ICcxOURGJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgSW5rc3RhaW4gdHJhc2hcclxuICAgICdHdWJhbEhtIFNlYWxzJzogJzE5NEEnLCAvLyBTdW4vTW9vbnNlYWwgZmFpbHVyZSwgYm9zcyAyXHJcbiAgICAnR3ViYWxIbSBXYXRlciBJSUknOiAnMUM2NycsIC8vIExhcmdlIGNpcmNsZSBBb0UsIFBvcm9nbyBQZWdpc3QgdHJhc2hcclxuICAgICdHdWJhbEhtIFJhZ2luZyBBeGUnOiAnMTcwMycsIC8vIFNtYWxsIGNvbmFsIEFvRSwgTWVjaGFub3NlcnZpdG9yIHRyYXNoXHJcbiAgICAnR3ViYWxIbSBNYWdpYyBIYW1tZXInOiAnMTk5MCcsIC8vIExhcmdlIGNpcmNsZSBBb0UsIEFwYW5kYSBtaW5pLWJvc3NcclxuICAgICdHdWJhbEhtIFByb3BlcnRpZXMgT2YgR3Jhdml0eSc6ICcxOTUwJywgLy8gQ2lyY2xlIEFvRSBmcm9tIGdyYXZpdHkgcHVkZGxlcywgYm9zcyAzXHJcbiAgICAnR3ViYWxIbSBQcm9wZXJ0aWVzIE9mIExldml0YXRpb24nOiAnMTk0RicsIC8vIENpcmNsZSBBb0UgZnJvbSBsZXZpdGF0aW9uIHB1ZGRsZXMsIGJvc3MgM1xyXG4gICAgJ0d1YmFsSG0gQ29tZXQnOiAnMTk2OScsIC8vIFNtYWxsIGNpcmNsZSBBb0UsIGludGVybWlzc2lvbiwgYm9zcyAzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnR3ViYWxIbSBFY2xpcHRpYyBNZXRlb3InOiAnMTk1QycsIC8vIExvUyBtZWNoYW5pYywgYm9zcyAzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdHdWJhbEhtIFNlYXJpbmcgV2luZCc6ICcxOTQ0JywgLy8gVGFuayBjbGVhdmUsIGJvc3MgMlxyXG4gICAgJ0d1YmFsSG0gVGh1bmRlcic6ICcxOVtBQl0nLCAvLyBTcHJlYWQgbWFya2VyLCBib3NzIDNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEZpcmUgZ2F0ZSBpbiBoYWxsd2F5IHRvIGJvc3MgMiwgbWFnbmV0IGZhaWx1cmUgb24gYm9zcyAyXHJcbiAgICAgIGlkOiAnR3ViYWxIbSBCdXJucycsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxMEInIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBIZWxwZXIgZm9yIFRodW5kZXIgMyBmYWlsdXJlc1xyXG4gICAgICBpZDogJ0d1YmFsSG0gSW1wIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNDZFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzSW1wID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0ltcFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdHdWJhbEhtIEltcCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzQ2RScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0ltcCA9IGRhdGEuaGFzSW1wIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzSW1wW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGFyZ2V0cyB3aXRoIEltcCB3aGVuIFRodW5kZXIgSUlJIHJlc29sdmVzIHJlY2VpdmUgYSB2dWxuZXJhYmlsaXR5IHN0YWNrIGFuZCBicmllZiBzdHVuXHJcbiAgICAgIGlkOiAnR3ViYWxIbSBJbXAgVGh1bmRlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzE5NVtBQl0nLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuaGFzSW1wPy5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2hvY2tlZCBJbXAnLFxyXG4gICAgICAgICAgICBkZTogJ1NjaG9ja2llcnRlciBJbXAnLFxyXG4gICAgICAgICAgICBqYTogJ+OCq+ODg+ODkeOCkuino+mZpOOBl+OBquOBi+OBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5rKz56ul54q25oCB5ZCD5LqG5pq06Zu3JyxcclxuICAgICAgICAgICAga286ICfrrLzsmpTsoJUg7IOB7YOcIO2VtOygnO2VmOyngCDslYrsnYwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdHdWJhbEhtIFF1YWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMTk1NicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gQWx3YXlzIGhpdHMgdGFyZ2V0LCBidXQgaWYgY29ycmVjdGx5IHJlc29sdmVkIHdpbGwgZGVhbCAwIGRhbWFnZVxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnR3ViYWxIbSBUb3JuYWRvJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMTk1Wzc4XScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gQWx3YXlzIGhpdHMgdGFyZ2V0LCBidXQgaWYgY29ycmVjdGx5IHJlc29sdmVkIHdpbGwgZGVhbCAwIGRhbWFnZVxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNvaG1BbEhhcmQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NvaG1BbEhtIERlYWRseSBWYXBvcic6ICcxREM5JywgLy8gRW52aXJvbm1lbnRhbCBjaXJjbGUgQW9Fc1xyXG4gICAgJ1NvaG1BbEhtIERlZXByb290JzogJzFDREEnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBCbG9vbWluZyBDaGljaHUgdHJhc2hcclxuICAgICdTb2htQWxIbSBPZGlvdXMgQWlyJzogJzFDREInLCAvLyBDb25hbCBBb0UsIEJsb29taW5nIENoaWNodSB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIEdsb3Jpb3VzIEJsYXplJzogJzFDMzMnLCAvLyBDaXJjbGUgQW9FLCBTbWFsbCBTcG9yZSBTYWMsIGJvc3MgMVxyXG4gICAgJ1NvaG1BbEhtIEZvdWwgV2F0ZXJzJzogJzExOEEnLCAvLyBDb25hbCBBb0UsIE1vdW50YWludG9wIE9wa2VuIHRyYXNoXHJcbiAgICAnU29obUFsSG0gUGxhaW4gUG91bmQnOiAnMTE4NycsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIE1vdW50YWludG9wIEhyb3BrZW4gdHJhc2hcclxuICAgICdTb2htQWxIbSBQYWxzeW55eGlzJzogJzExNjEnLCAvLyBDb25hbCBBb0UsIE92ZXJncm93biBEaWZmbHVnaWEgdHJhc2hcclxuICAgICdTb2htQWxIbSBTdXJmYWNlIEJyZWFjaCc6ICcxRTgwJywgLy8gQ2lyY2xlIEFvRSwgR2lhbnQgTmV0aGVyd29ybSB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIEZyZXNod2F0ZXIgQ2Fubm9uJzogJzExOUYnLCAvLyBMaW5lIEFvRSwgR2lhbnQgTmV0aGVyd29ybSB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIFRhaWwgU21hc2gnOiAnMUMzNScsIC8vIFVudGVsZWdyYXBoZWQgcmVhciBjb25hbCBBb0UsIEdvd3JvdywgYm9zcyAyXHJcbiAgICAnU29obUFsSG0gVGFpbCBTd2luZyc6ICcxQzM2JywgLy8gVW50ZWxlZ3JhcGhlZCBjaXJjbGUgQW9FLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIFJpcHBlciBDbGF3JzogJzFDMzcnLCAvLyBVbnRlbGVncmFwaGVkIGZyb250YWwgQW9FLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIFdpbmQgU2xhc2gnOiAnMUMzOCcsIC8vIENpcmNsZSBBb0UsIEdvd3JvdywgYm9zcyAyXHJcbiAgICAnU29obUFsSG0gV2lsZCBDaGFyZ2UnOiAnMUMzOScsIC8vIERhc2ggYXR0YWNrLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIEhvdCBDaGFyZ2UnOiAnMUMzQScsIC8vIERhc2ggYXR0YWNrLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIEZpcmViYWxsJzogJzFDM0InLCAvLyBVbnRlbGVncmFwaGVkIHRhcmdldGVkIGNpcmNsZSBBb0UsIEdvd3JvdywgYm9zcyAyXHJcbiAgICAnU29obUFsSG0gTGF2YSBGbG93JzogJzFDM0MnLCAvLyBVbnRlbGVncmFwaGVkIGNvbmFsIEFvRSwgR293cm93LCBib3NzIDJcclxuICAgICdTb2htQWxIbSBXaWxkIEhvcm4nOiAnMTUwNycsIC8vIENvbmFsIEFvRSwgQWJhbGF0aGlhbiBDbGF5IEdvbGVtIHRyYXNoXHJcbiAgICAnU29obUFsSG0gTGF2YSBCcmVhdGgnOiAnMUM0RCcsIC8vIENvbmFsIEFvRSwgTGF2YSBDcmFiIHRyYXNoXHJcbiAgICAnU29obUFsSG0gUmluZyBvZiBGaXJlJzogJzFDNEMnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBWb2xjYW5vIEFuYWxhIHRyYXNoXHJcbiAgICAnU29obUFsSG0gTW9sdGVuIFNpbGsgMSc6ICcxQzQzJywgLy8gMjcwLWRlZ3JlZSBmcm9udGFsIEFvRSwgTGF2YSBTY29ycGlvbiwgYm9zcyAzXHJcbiAgICAnU29obUFsSG0gTW9sdGVuIFNpbGsgMic6ICcxQzQ0JywgLy8gMjcwLWRlZ3JlZSByZWFyIEFvRSwgTGF2YSBTY29ycGlvbiwgYm9zcyAzXHJcbiAgICAnU29obUFsSG0gTW9sdGVuIFNpbGsgMyc6ICcxQzQyJywgLy8gUmluZyBBb0UsIExhdmEgU2NvcnBpb24sIGJvc3MgM1xyXG4gICAgJ1NvaG1BbEhtIFJlYWxtIFNoYWtlcic6ICcxQzQxJywgLy8gQ2lyY2xlIEFvRSwgTGF2YSBTY29ycGlvbiwgYm9zcyAzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBXYXJucyBpZiBwbGF5ZXJzIHN0ZXAgaW50byB0aGUgbGF2YSBwdWRkbGVzLiBUaGVyZSBpcyB1bmZvcnR1bmF0ZWx5IG5vIGRpcmVjdCBkYW1hZ2UgZXZlbnQuXHJcbiAgICAgIGlkOiAnU29obUFsSG0gQnVybnMnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMTFDJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgYXNzYXVsdD86IHN0cmluZ1tdO1xyXG59XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxleGFuZGVyVGhlU291bE9mVGhlQ3JlYXRvcixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQTEyTiBTYWNyYW1lbnQnOiAnMUFFNicsIC8vIENyb3NzIExhc2Vyc1xyXG4gICAgJ0ExMk4gR3Jhdml0YXRpb25hbCBBbm9tYWx5JzogJzFBRUInLCAvLyBHcmF2aXR5IFB1ZGRsZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0ExMk4gRGl2aW5lIFNwZWFyJzogJzFBRTMnLCAvLyBJbnN0YW50IGNvbmFsIHRhbmsgY2xlYXZlXHJcbiAgICAnQTEyTiBCbGF6aW5nIFNjb3VyZ2UnOiAnMUFFOScsIC8vIE9yYW5nZSBoZWFkIG1hcmtlciBzcGxhc2ggZGFtYWdlXHJcbiAgICAnQTEyTiBQbGFpbnQgT2YgU2V2ZXJpdHknOiAnMUFGMScsIC8vIEFnZ3JhdmF0ZWQgQXNzYXVsdCBzcGxhc2ggZGFtYWdlXHJcbiAgICAnQTEyTiBDb21tdW5pb24nOiAnMUFGQycsIC8vIFRldGhlciBQdWRkbGVzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0ExMk4gQXNzYXVsdCBDb2xsZWN0JyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzQ2MScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmFzc2F1bHQgPz89IFtdO1xyXG4gICAgICAgIGRhdGEuYXNzYXVsdC5wdXNoKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEl0IGlzIGEgZmFpbHVyZSBmb3IgYSBTZXZlcml0eSBtYXJrZXIgdG8gc3RhY2sgd2l0aCB0aGUgU29saWRhcml0eSBncm91cC5cclxuICAgICAgaWQ6ICdBMTJOIEFzc2F1bHQgRmFpbHVyZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzFBRjInLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuYXNzYXVsdD8uaW5jbHVkZXMobWF0Y2hlcy50YXJnZXQpLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnRGlkblxcJ3QgU3ByZWFkIScsXHJcbiAgICAgICAgICAgIGRlOiAnTmljaHQgdmVydGVpbHQhJyxcclxuICAgICAgICAgICAgZnI6ICdOZSBzXFwnZXN0IHBhcyBkaXNwZXJzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn5pWj6ZaL44GX44Gq44GL44Gj44GfIScsXHJcbiAgICAgICAgICAgIGNuOiAn5rKh5pyJ5pWj5byAIScsXHJcbiAgICAgICAgICAgIGtvOiAn7IKw6rCc7ZWY7KeAIOyViuyVmOydjCEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdBMTJOIEFzc2F1bHQgQ2xlYW51cCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc0NjEnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IDIwLFxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDUsXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkZWxldGUgZGF0YS5hc3NhdWx0O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8T29wc3lEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbGV4YW5kZXJUaGVDdWZmT2ZUaGVTb24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ01pbmVmaWVsZCc6ICcxNzBEJywgLy8gQ2lyY2xlIEFvRSwgbWluZXMuXHJcbiAgICAnTWluZSc6ICcxNzBFJywgLy8gTWluZSBleHBsb3Npb24uXHJcbiAgICAnU3VwZXJjaGFyZ2UnOiAnMTcxMycsIC8vIE1pcmFnZSBjaGFyZ2UuXHJcbiAgICAnSGVpZ2h0IEVycm9yJzogJzE3MUQnLCAvLyBJbmNvcnJlY3QgcGFuZWwgZm9yIEhlaWdodC5cclxuICAgICdFYXJ0aCBNaXNzaWxlJzogJzE3MjYnLCAvLyBDaXJjbGUgQW9FLCBmaXJlIHB1ZGRsZXMuXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVWx0cmEgRmxhc2gnOiAnMTcyMicsIC8vIFJvb20td2lkZSBkZWF0aCBBb0UsIGlmIG5vdCBMb1MnZC5cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0ljZSBNaXNzaWxlJzogJzE3MjcnLCAvLyBJY2UgaGVhZG1hcmtlciBBb0UgY2lyY2xlcy5cclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1NpbmdsZSBCdXN0ZXInOiAnMTcxNycsIC8vIFNpbmdsZSBsYXNlciBBdHRhY2htZW50LiBOb24tdGFua3MgYXJlICpwcm9iYWJseSogZGVhZC5cclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnRG91YmxlIEJ1c3Rlcic6ICcxNzE4JywgLy8gVHdpbiBsYXNlciBBdHRhY2htZW50LlxyXG4gICAgJ0VudW1lcmF0aW9uJzogJzE3MUUnLCAvLyBFbnVtZXJhdGlvbiBjaXJjbGUuXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBOb3RlOiBNdXN0YWRpbyBMYXN0IFRlc3RhbWVudCAoMzczNykgZG9lcyBkYW1hZ2Ugd2hldGhlciB5b3Ugc3VjY2VlZCBvciBmYWlsLFxyXG4vLyBidXQgaXMgbGV0aGFsIGlmIHlvdSBmYWlsLCBzbyBpdCBzaG91bGQgYmUgb2J2aW91cyB3aGVuIGZhaWxlZC5cclxuLy8gTm90ZTogU2ltaWxhcmx5IHNraXBwaW5nIEFncmlhcyBEdXNrYmxhZGUgKDM3NjEpLCB3aGljaCBhbHNvIH53aXBlcyB3aGVuIHRvd2VycyBhcmUgbWlzc2VkLlxyXG4vLyBOb3RlOiBza2lwcGluZyBBZ3JpYXMgRnJvc3RiaXRlICgxMUQpLCB3aGljaCBtYW55IHBlb3BsZSBnZXQgYSB0aWNrIG9mIHdoZW4gYWRkIGlzIG5lYXJseSBkZWFkLlxyXG4vLyBOb3RlOiBVbHRpbWEncyBBc3BlcnNvcnkgUGVydmFpbGluZyBDdXJyZW50ICgzOENDKSBoaXRzIGEgbG90IGZvciBsb3cgZGFtYWdlLCBzbyBza2lwcGluZy5cclxuXHJcbi8vIFRPRE86IERhcmsgQ3J1c2FkZXIgRGFyayBSaXRlICgzNzdGKSBnb2luZyBvZmYgaWYgdG93ZXJzIGFyZW4ndCBzdGVwcGVkIGluLlxyXG4vLyBUT0RPOiBCbGVlZGluZyBmcm9tIEFncmlhcyBTaGFkb3dibGFkZSBvcmJzIG1lcmdpbmcgYW5kIGV4cGxvZGluZz9cclxuLy8gVE9ETzogVWx0aW1hIERhcmsgQ2Fubm9uYWRlIGRvcml0byBzdGFjayBkb2VzIGRhbWFnZSBvbiBzdWNjZXNzIGFuZCBmYWlsdXJlLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVPcmJvbm5lTW9uYXN0ZXJ5LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPcmJvbm5lIEhhcnB5IEJsYXNwaGVtb3VzIEhvd2wnOiAnMzc3OScsIC8vIGxhcmdlIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ09yYm9ubmUgTW9uYXN0aWMgR2hvc3QgRGFyayBFcnVwdGlvbic6ICczQTE1JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnT3Jib25uZSBNb25hc3RpYyBHaG9zdCBMaW5nZXJpbmcgUmVzZW5lbnRtZW50JzogJzM3N0MnLCAvLyBsYXJnZSB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdPcmJvbm5lIE11c3RhZGlvIFJpZ2h0IEhhbmRnb25uZSc6ICczNzNFJywgLy8gbGVmdC9yaWdodCBoYWlyY3V0XHJcbiAgICAnT3Jib25uZSBNdXN0YWRpbyBMZWZ0IEhhbmRnb25uZSc6ICczNzNGJywgLy8gbGVmdC9yaWdodCBoYWlyY3V0XHJcbiAgICAnT3Jib25uZSBNdXN0YWRpbyBJcm9uIEdpYW50IENvbXByZXNzJzogJzM3NDAnLCAvLyBsaW5lIGFvZSBmcm9tIHRldGhlcmVkIElyb24gR2lhbnQgb24gb3V0c2lkZVxyXG4gICAgJ09yYm9ubmUgTXVzdGFkaW8gQmFsbGlzdGljIEltcGFjdCc6ICczNzQzJywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ09yYm9ubmUgTXVzdGFkaW8gU2VhcmNobGlnaHQnOiAnMzc0NCcsIC8vIGNoYXNpbmcgcmVkIGNpcmNsZSB0aGF0IGxvY2tzIGluXHJcbiAgICAnT3Jib25uZSBNdXN0YWRpbyBMZWcgU2hvdCc6ICczNzQyJywgLy8gbWluZXNcclxuICAgICdPcmJvbm5lIE11c3RhZGlvIEVhcmx5IFR1cnJldCBTYXRlbGxpdGUgQmVhbSc6ICczNzQxJywgLy8gcXVhZHJhbnQgZXhwbG9zaW9uIGZyb20gdGV0aGVyZWQgRWFybHkgVHVycmV0XHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgTm9ydGhzd2FpblxcJ3MgU3RyaWtlJzogJzM4NTMnLCAvLyBsaW5lIGFvZXMgZnJvbSBvdXRzaWRlIGFkZHMgZHVyaW5nIHN3b3JkK2NyeXN0YWxzIHBoYXNlXHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgSGFsbG93ZWQgQm9sdCBDaXJjbGUnOiAnMzg1QicsIC8vIHZlcnkgbGFyZ2UgY2lyY2xlXHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgSGFsbG93ZWQgQm9sdCBEb251dCc6ICczODVDJywgLy8gdmVyeSBsYXJnZSBkb251dFxyXG4gICAgJ09yYm9ubmUgRGFyayBDcnVzYWRlciBJbmZlcm5hbCBXYXZlJzogJzM3ODEnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ09yYm9ubmUgQ2lkIEhhbGxvd2VkIEJvbHQnOiAnMzc0QicsIC8vIGxpZ2h0bmluZyBwbGF0Zm9ybSBoaXQgZnJvbSBzd29yZCBhZnRlciBULkcuIEhvbHkgU3dvcmQgKDM3NDkpXHJcbiAgICAnT3Jib25uZSBDaWQgTm9ydGhzd2FpblxcJ3MgU3RyaWtlJzogJzNBRDMnLCAvLyBcImdldCBvdXRcIiBhZnRlciBULkcuIEhvbHkgU3dvcmQgKDM3NEYpXHJcbiAgICAnT3Jib25uZSBDaWQgSnVkZ21lbnQgQmxhZGUnOiAnM0FENCcsIC8vIFwiZ2V0IGluXCIgYWZ0ZXIgVC5HLiBIb2x5IFN3b3JkICgzNzRBKVxyXG4gICAgJ09yYm9ubmUgQ2lkIEFncmlhcyBTaGFkb3dibGFkZSBPcmJzJzogJzM3NUYnLCAvLyBmb2xsb3d1cCBoaXRzIGZyb20gZ3Jvd2luZyByZWQvYmxhY2sgb3Jic1xyXG4gICAgJ09yYm9ubmUgQ2lkIENydXNoIFdlYXBvbiAxJzogJzQ3NTYnLCAvLyBjaGFzaW5nIGNpcmNsZSBpbml0aWFsIGhpdFxyXG4gICAgJ09yYm9ubmUgQ2lkIENydXNoIFdlYXBvbiAyJzogJzQ3NTcnLCAvLyBjaGFzaW5nIGNpcmNsZVxyXG4gICAgJ09yYm9ubmUgQ2lkIEVwaGVtZXJhbCBLbmlnaHQgSGFsbG93ZWQgQm9sdCBEb251dCc6ICczNzY3JywgLy8gaW5pdGlhbCBkb251dCBmcm9tIEVwaGVtZXJhbCBLbmlnaHQgaGVhZG1hcmtlclxyXG4gICAgJ09yYm9ubmUgQ2lkIEVwaGVtZXJhbCBLbmlnaHQgSGFsbG93ZWQgQm9sdCBDaXJjbGUnOiAnMzc2NicsIC8vIGZvbGxvd3VwIGNpcmNsZSBmcm9tIEVwaGVtZXJhbCBLbmlnaHRcclxuICAgICdPcmJvbm5lIENpZCBDcnVzaCBBY2Nlc3NvcnknOiAnMzc1QicsIC8vIHBsYXRmb3JtIGFvZSB3aXRoIHNhZmUgc3BvdCBvbiBJY2V3b2xmIGFkZFxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEhvbHkgSVYnOiAnMzg5QScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEF1cmFsaWdodCBMaW5lJzogJzM4OTcnLCAvLyAzeCBsaW5lcyBkdXJpbmcgQXVyYWxpZ2h0ICgzOEVBKSBjYXN0IHRoYXQgdHVybiBpbnRvIGljZVxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEF1cmFsaWdodCBDaXJjbGUnOiAnMzg5OCcsIC8vIGNlbnRlcmVkIGNpcmNsZSBkdXJpbmcgQXVyYWxpZ2h0ICgzOEVBKSBjYXN0XHJcbiAgICAnT3Jib25uZSBVbHRpbWEgQXVyYWNpdGUgU2hhcmQgUGx1bW1ldCc6ICczOEFEJywgLy8gM3ggc2hhcmRzIGZhbGxpbmcgYmVmb3JlIEdyYW5kIENyb3NzICgzOEFDKVxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEF1cmFjaXRlIFNoYXJkIEdyYW5kIENyb3NzJzogJzM4QUUnLCAvLyBjcm9zcyBleHBsb3Npb24gZnJvbSBBdXJhY2l0ZSBTaGFyZHNcclxuICAgICdPcmJvbm5lIFVsdGltYSBEZW1pLUJlbGlhcyBUaW1lIEVydXB0aW9uIDEnOiAnMzhEMCcsIC8vIGZhc3Qvc2xvdyBjbG9ja3NcclxuICAgICdPcmJvbm5lIFVsdGltYSBEZW1pLUJlbGlhcyBUaW1lIEVydXB0aW9uIDInOiAnMzhEMScsIC8vIGZhc3Qvc2xvdyBjbG9ja3NcclxuICAgICdPcmJvbm5lIFVsdGltYSBEZW1pLUhhc2htYWwgVG93ZXJmYWxsJzogJzM4RDcnLCAvLyBjb250cm9sIHRvd2VyIGZhbGxpbmcgb3ZlclxyXG4gICAgJ09yYm9ubmEgVWx0aW1hIERlbWktSGFzaG1hbCBFeHRyZW1lIEVkZ2UgMSc6ICczOERBJywgLy8gbGVmdC9yaWdodCBjbGVhdmUgZGFzaFxyXG4gICAgJ09yYm9ubmEgVWx0aW1hIERlbWktSGFzaG1hbCBFeHRyZW1lIEVkZ2UgMic6ICczOERCJywgLy8gbGVmdC9yaWdodCBjbGVhdmUgZGFzaFxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERlbWktQmVsaWFzIEVydXB0aW9uJzogJzM3QzgnLCAvLyBoZWFkbWFya2VyIHdpdGggY2hhc2luZyB0ZWxlZ3JhcGhlZCBjaXJjbGUgYW9lc1xyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERvbWluaW9uIFJheSBPZiBMaWdodCc6ICczOEI3JywgLy8gbGluZ2VyaW5nIGxpbmUgYW9lIHdpdGggRWFzdHdhcmQvV2VzdHdhcmQgTWFyY2hcclxuICAgICdPcmJvbm5lIFVsdGltYSBFbWJyYWNlIEluaXRpYWwnOiAnMzhCOScsIC8vIGhpZGRlbiBibHVlIHRyYXBzIGJlaW5nIHBsYWNlZFxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEVtYnJhY2UgVHJpZ2dlcmVkJzogJzM4QkEnLCAvLyBoaWRkZW4gYmx1ZSB0cmFwcyBiZWluZyB0cmlnZ2VyZWRcclxuICAgICdPcmJvbm5lIFVsdGltYSBFeHBsb3Npb24nOiAnMzhFOScsIC8vIGZhaWxpbmcgdG8gc3RvcCBmb3IgQWNjZWxlcmF0aW9uIEJvbWJcclxuICAgICdPcmJvbm5lIFVsdGltYSBEb21pbmlvbiBCb21iYXJkbWVudCc6ICczOEJFJywgLy8gY2lyY2xlIGR1cmluZyBtaWRwaGFzZSBpY2UgbWF6ZVxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEhvbHknOiAnMzhBQicsIC8vIGNpcmNsZSBkdXJpbmcgbWlkcGhhc2UgaWNlIG1hemVcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPcmJvbm5lIENpZCBJY2V3b2xmIEJ1cnN0JzogJzM3NUMnLCAvLyBub3Qga2lsbGluZyBJY2V3b2xmIGFkZCBpbiB0aW1lXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdPcmJvbm5lIEhhcnB5IERldml0YWxpemUgRG9vbSc6ICczOEUnLCAvLyBIYXJweSBsb29rYXdheSBtZWNoYW5pY1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgQ2xlYW5zaW5nIEZsYW1lJzogJzM4NjUnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgU2hhZG93YmxhZGUgSW5pdGlhbCc6ICczNzVFJywgLy8gaW5pdGlhbCBoaXQgZnJvbSBnaWFudCByZWQvYmxhY2sgY2lyY2xlIGhlYWRtYXJrZXJcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ09yYm9ubmUgQWdyaWFzIFRodW5kZXIgU2xhc2gnOiAnMzg2NicsIC8vIGNvbmFsIHRhbmsgY2xlYXZlIHdpdGggbWFya2VyXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ09yYm9ubmUgQ2lkIEVwaGVtZXJhbCBLbmlnaHQgSGFsbG93ZWQgQm9sdCBTdGFjayc6ICczNzY4JywgLy8gc3RhY2sgbWFya2VyIGZyb20gRXBoZW1lcmFsIEtuaWdodFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gY2FzdGJhciB0aGF0IHlvdSBuZWVkIHRvIGhhdmUgSGVhdmVubHkgU2hpZWxkIHVwIGZvciwgb3IgeW91IGdldCBhIHZ1bG4gYW5kIGtub2NrYmFjay5cclxuICAgICAgaWQ6ICdPcmJvbm5lIEFncmlhcyBKdWRnbWVudCBCbGFkZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzM4NTcnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gc2FtZSBhcyBKdWRnbWVudCBCbGFkZSwgYnV0IGZyb20gU3dvcmQgS25pZ2h0XHJcbiAgICAgIGlkOiAnT3Jib25uZSBBZ3JpYXMgTW9ydGFsIEJsb3cnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczODVFJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBOb3RlOiBJZ25vcmluZyBGYW1mcml0IEpldCAoMkM1NCkgd2hpY2ggaXMgdGhlIHdhdGVyIGp1ZyBoaXQuICBJdCdzIGxvdyBkYW1hZ2UgYW5kIGZyZXF1ZW50LlxyXG4vLyBOb3RlOiBJZ25vcmluZyB0aGUgRmFtZnJpdCBEYXJrIFJhaW4gRXhwbG9zaW9uICgyQzU1KSwgc2luY2UgYWRkcyBhcmUgb2Z0ZW4gbm90IGtpbGxlZC5cclxuLy8gTm90ZTogSWdub3JpbmcgRmFtZnJpdCBEcm9wc3kgKDEyMSkgYXMgdGhvc2UgcHVkZGxlcyBjYW4gYXBwZWFyIG9uIHlvdSwgYW5kIGl0IGRyb3BzIHdoZW4gb3V0LlxyXG4vLyBOb3RlOiBJZ25vcmluZyBCZWxpYXMgdGV0aGVycywgYmVjYXVzZSBub3Qgc3VyZSB3aGF0IHNob3VsZCBiZSBjb25zaWRlcmVkIGFuIGVycm9yIHRoZXJlLlxyXG4vLyBOb3RlOiBJZ25vcmluZyBZaWF6bWF0IFR1cmJ1bGVuY2UgKDJDMzApLCB3aGljaCBpcyBsaWtlIEpldCBhbmQgdmVyeSBub2lzeS5cclxuXHJcbi8vIFRPRE86IERhcmsgQ2Fubm9uYWRlICgyQzQ0KSBpcyBhIGRvcml0byBzdGFjaywgYnV0IHlvdSB0YWtlIGRhbWFnZSBvbiBzdWNjZXNzIGFuZCBmYWlsdXJlLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVSaWRvcmFuYUxpZ2h0aG91c2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JpZG9yYW5hIEZhbWZyaXQgVHN1bmFtaSAxJzogJzJDNTEnLCAvLyB1bnRlbGVncmFwaGVkIDkwIGRlZ3JlZSBjb25hbCBmcm9tIGp1Z1xyXG4gICAgJ1JpZG9yYW5hIEZhbWZyaXQgVHN1bmFtaSAyJzogJzJDNTInLCAvLyB1bnRlbGVncmFwaGVkIDkwIGRlZ3JlZSBjb25hbCBmcm9tIGp1Z1xyXG4gICAgJ1JpZG9yYW5hIEZhbWZyaXQgRGFyayBSYWluJzogJzJDNDYnLCAvLyB0YXJnZXRlZCBtZWRpdW0gc2l6ZSBjaXJjbGVzXHJcbiAgICAnUmlkb3JhbmEgRmFtZnJpdCBEYXJrZW5pbmcgRGVsdWdlJzogJzJDNTQnLCAvLyByYWluIHB1ZGRsZXMgYWZ0ZXIgRGFya2VuaW5nIFJhaW5mdWxsXHJcbiAgICAnUmlkb3JhbmEgQnVuZSBUcmktQXR0YWNrJzogJzJDRUQnLCAvLyBjb25hbFxyXG4gICAgJ1JpZG9yYW5hIEJ1bmUgUHVsc2FyIFdhdmUnOiAnMkNFRScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBUaW1lIEVydXB0aW9uJzogJzJDREYnLCAvLyBleHBsb2RpbmcgY2xvY2tcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgQ3JpbXNvbiBDeWNsb25lIDEnOiAnMkNFMicsIC8vIGNsb25lIGRhc2hcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgQ3JpbXNvbiBDeWNsb25lIDInOiAnMkNFMycsIC8vIGNsb25lIGRhc2hcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgQ3JpbXNvbiBDeWNsb25lIDMnOiAnMkNFNCcsIC8vIGNsb25lIGRhc2hcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgQ3JpbXNvbiBDeWNsb25lIDQnOiAnMkQ1RicsIC8vIGNsb25lIGRhc2hcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgRXJ1cHRpb24nOiAnMkNERCcsIC8vIHNlcmllcyBvZiB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnUmlkb3JhbmEgQmVsaWFzIFRpbWUgQm9tYic6ICcyQ0U3JywgLy8gc3RvcHBhYmxlIGNsb2NrIHdpdGggdGltZSBjb25hbCBhdHRhY2tcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgUHVsdmVyaXplIENsb3NlJzogJzJDNjEnLCAvLyB1bnRlbGVncmFwaGVkIGNlbnRlcmVkIGNpcmNsZSBjbG9zZVxyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBQdWx2ZXJpemUgRmFyJzogJzJDNjInLCAvLyB0YXJnZXRlZCB0ZWxlZ3JhcGhlZCBjaXJjbGVzIGZhciBhd2F5XHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IENvbXByZXNzJzogJzJDNUMnLCAvLyBsb25nIHNraW5ueSBsaW5lXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IExvb3NlIENvZyBUcmlib2VsZWN0cmljaXR5JzogJzJDNkQnLCAvLyBibHVlIGNpcmNsZSBmcm9tIGNvZ3MgaW4gYWlyXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IERpc3Bvc2UnOiAnMkM2MCcsIC8vIHJvdGF0aW5nIGZpcmUgY29uYWxcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgRGlzcG9zZSBBbm5paGlsYXRpb24nOiAnMkNFQScsIC8vIHJvdGF0aW5nIGZpcmUgY29uYWwsIEFubmloaWxhdGlvbiBNb2RlXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IEFjY2VsZXJhdGlvbiBCb21iJzogJzJEMjcnLCAvLyBmYWlsaW5nIGFjY2VsZXJhdGlvbiBib21iIGluIG1pZHBoYXNlXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IFVsdHJhbWFnbmV0aXNtJzogJzJDRDYnLCAvLyBmYWlsaW5nIG1hZ25ldGljIHRldGhlcnMgaW4gbWlkcGhhc2VcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgTWlzc2lsZSBFeHBsb3Npb24nOiAnMkM2RicsIC8vIHJ1bm5pbmcgaW50byBhIG1pc3NpbGUgaW4gbWlkcGhhc2VcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IEd1c3QgRnJvbnQnOiAnMkMyNCcsIC8vIHRhcmdldGVkIGJsYWNrL3llbGxvdyBjaXJjbGVzXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBXaGl0ZSBCcmVhdGgnOiAnMkMzMScsIC8vIGdldCB1bmRlciBkb251dFxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgUmFrZSBDaGFyZ2UgMSc6ICcyQzNDJywgLy8gbGlrZSBhIGtuaWZlIHRocm91Z2ggYnV0dGVyXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIENoYXJnZSAyJzogJzJFMzInLFxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgUmFrZSBDaGFyZ2UgMyc6ICcyQzI4JyxcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFJha2UgQ2hhcmdlIDQnOiAnMkQ0RicsXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIENoYXJnZSA1JzogJzJDMjcnLFxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgQXJjaGFlb2RlbW9uIFVuaG9seSBEYXJrbmVzcyc6ICcyNjczJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBBcmNoYWVvZGVtb24gS2FybWEnOiAnMjY3MicsIC8vIGNvbmFsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBTdG9uZSBCcmVhdGgnOiAnMkMyOScsIC8vIHBldHJpZnlpbmcgY29uYWwgYnJlYXRoXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdSaWRvcmFuYSBGYW1mcml0IEJyaW55IENhbm5vbmFkZSc6ICcyQzQ1JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBJZ25pdGUnOiAnMkM2NycsIC8vIHNwcmVhZCBtYXJrZXJcclxuICAgICdSaWRvcmFuYSBJcm9uIEdvbGVtIE92YXRpb24nOiAnMkNGMycsIC8vIHVudGVsZWdyYXBoZWQgaW5zdGFudCBsaW5lIGF0dGFjayAoZm9yIHRhbmssIGlkZWFsbHkpXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBXaW5kIEF6ZXIgQW5jaWVudCBBZXJvJzogJzJDMzgnLCAvLyB0YXJnZXRlZCB0ZXRoZXIgbGluZSBhb2UgZnJvbSBBemVyIGFkZHNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgUmFrZSBCdXN0ZXIgMSc6ICcyQzI2JywgLy8gdW50ZWxlZ3JhcGhlZCB0YW5rYnVzdGVyIGNsZWF2ZVxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgUmFrZSBCdXN0ZXIgMic6ICcyREU0JywgLy8gdW50ZWxlZ3JhcGhlZCB0YW5rYnVzdGVyIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgQWNjZWxlcmF0ZSc6ICcyQzY1JywgLy8gc3RhY2sgbWFya2VyXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBEZWF0aCBTdHJpa2UnOiAnMkMzMycsIC8vIHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gQ29tcHV0YXRpb24gTW9kZSBlcnJvcnMuXHJcbiAgICAgIGlkOiAnUmlkb3JhbmEgQ29uc3RydWN0IE1hdGhzJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMDg5JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYE1hdGhzYCxcclxuICAgICAgICAgICAgZGU6IGBNYXRoZWAsXHJcbiAgICAgICAgICAgIGZyOiBgTWF0aHNgLFxyXG4gICAgICAgICAgICBqYTogYOeul+ihk2AsXHJcbiAgICAgICAgICAgIGNuOiBg566X5pWwYCxcclxuICAgICAgICAgICAga286ICfsgrDsiJjsmKTri7UnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIFRPRE86IGlzIE1hdGV1cydzIEF6dXJlIEd1YXJkIEZpbiBSYXlzICgyNjQyKSBhIHRhbmtidXN0ZXIgd2l0aG91dCBhIGNhc3RiYXI/IGEgY2xlYXZlP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVSb3lhbENpdHlPZlJhYmFuYXN0cmUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JhYmFuYXN0cmUgTWF0ZXVzIEljZSBBemVyIEh5cG90aGVybWFsIENvbWJ1c3Rpb24nOiAnMjYzOScsIC8vIGxhcmdlIGNlbnRlcmVkIGNpcmNsZSB3aGVuIEljZSBBemVyIGRpZXNcclxuICAgICdSYWJhbmFzdHJlIE1hdGV1cyBCbGl6emFyZCBTcGhlcmUgQ2hpbGwnOiAnMjY0NicsIC8vIGJhaXRlZCBsb25nIHNraW5ueSBjb25hbCBmcm9tIHRldGhlcmVkIEJsaXp6YXJkIFNwaGVyZXNcclxuICAgICdSYWJhbmFzdHJlIFNuaWZmaW5nIFNlZXEgQmFuZGl0IEx1bmdlJzogJzI2NzAnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ1JhYmFuYXN0cmUgUmFiYW5hc3RyYW4gTWltaWMgRGVhdGh0cmFwJzogJzc1RScsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1JhYmFuYXN0cmUgSGFzaG1hbCBKYWdnZWQgRWRnZSc6ICcyNUNEJywgLy8gcmVkIHB1cnBsZSBncm91bmQgY2lyY2xlc1xyXG4gICAgJ1JhYmFuYXN0cmUgSGFzaG1hbCBUb3dlcmZhbGwnOiAnMjVDQScsIC8vIGNvbnRyb2wgdG93ZXJzIGZhbGxpbmcgb3ZlclxyXG4gICAgJ1JhYmFuYXN0cmUgSGFzaG1hbCBFeHRyZW1lIEVkZ2UgMSc6ICcyNUQwJywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgRXh0cmVtZSBFZGdlIDInOiAnMjVDRScsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIEVhcnRoIFNoYWtlcic6ICcyNUM4JywgLy8gM3ggMS82IHBpZSBzbGljZXMgdGhhdCB1c3VhbGx5IGhhcHBlbiB0d2ljZSBpbiBhIHJvd1xyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlZGVtb24gVW5ob2x5IERhcmtuZXNzJzogJzI2NzMnLCAvLyB2ZXJ5IGxhcmdlIGNvbmFsIChhbHNvIGR1cmluZyBSb2ZvY2FsZSlcclxuICAgICdSYWJhbmFzdHJlIEFyY2hhZWRlbW9uIEthcm1hJzogJzI2NzInLCAvLyB0YXJnZXRlZCBjaXJjbGUgKGFsc28gZHVyaW5nIFJvZm9jYWxlKVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlb2xpb24gVGhlIERyYWdvblxcJ3MgQnJlYXRoJzogJzI3M0MnLCAvLyBjb25hbFxyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlb2xpb24gVGhlIFJhbVxcJ3MgQnJlYXRoJzogJzI3M0InLCAvLyBjb25hbFxyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlb2xpb24gVGhlIERyYWdvblxcJ3MgVm9pY2UnOiAnRDEwJywgLy8gaW50ZXJydXB0YWJsZSBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdSYWJhbmFzdHJlIEFyY2hhZW9saW9uIFRoZSBSYW1cXCdzIFZvaWNlJzogJ0QwRicsIC8vIGludGVycnVwdGFibGUgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBDcnVzaCBXZWFwb24nOiAnMjY4NCcsIC8vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIE1hdmVyaWNrJzogJzI2ODknLCAvLyBtdWx0aXBsZSB0ZWxlZ3JhcGhlZCBsaW5lIGNoYXJnZXMgd2hlbiB1bnRhcmdldGFibGUsIGFuZCBsYXRlciB0YXJnZXRhYmxlXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDEnOiAnMjY3NycsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDInOiAnMjY3OCcsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDMnOiAnMjY3OScsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDQnOiAnMjY3QScsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDUnOiAnMjY3QicsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDYnOiAnMjY3QycsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDcnOiAnMjY3RCcsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDgnOiAnMjY3RScsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBUcmFtcGxlIDknOiAnMjY3RicsXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBDcnkgb2YgVmljdG9yeSc6ICcyNjc1JywgLy8gMTgwIGNsZWF2ZVxyXG4gICAgJ1JhYmFuYXN0cmUgUm9mb2NhbGUgRW1icmFjZSBJbml0aWFsJzogJzI2ODYnLCAvLyBFbWJyYWNlIGluaXRpYWwgY2lyY2xlc1xyXG4gICAgJ1JhYmFuYXN0cmUgUm9mb2NhbGUgRW1icmFjZSBUcmlnZ2VyZWQnOiAnMjY4NycsIC8vIHJ1bm5pbmcgaW50byBFbWJyYWNlIGhpZGRlbiB0cmFwc1xyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIENydXNoIFdlYXBvbic6ICcyNzEzJywgLy8gc2FtZSBhcyBSb2ZvY2FsZSBDcnVzaCBXZWFwb25cclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBVbnJlbGVudGluZyc6ICcyNjJDJywgLy8gZml2ZSBmYW4gYW9lcyBpbiBhIGNvbmVcclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBIZWFydGxlc3MgSGVhcnRsZXNzJzogJzI2MzInLCAvLyBjcm9zcyBhb2UgZnJvbSBqdWRnbWVudCBibGFkZSBtYXJrZXJzXHJcbiAgICAnUmFiYW5hc3RyZSBBcmdhdGggU291bGZpeCc6ICcyNjJBJywgLy8gY2VudGVyZWQgY2lyY2xlLCBvZnRlbiBwYWlyZWQgd2l0aCBtaXNkaXJlY3RcclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBDb2xkYmxvb2QgUHV0dCBQdXR0JzogJzI2MjYnLCAvLyBob2xlIGluIG9uZSBtaXNkaXJlY3QgZG9udXRcclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBSYWlsIE9mIFRoZSBSb29zdGVyJzogJzI2MjMnLCAvLyB1bm5lcnZlZCBzdGFjayBmcm9tIG1lc3NpbmcgdXAgUmFpbCBPZiBUaGUgUmF0IHRvd2Vyc1xyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIFNlbGYtRGVzdHJ1Y3QnOiAnMjYyRicsIC8vIGV4cGxvc2lvbiBmcm9tIHNvbWVib2R5IHdobyBoYXMgaGl0IHRoZSB3YWxsIGFuZCB0dXJuZWQgaW50byBhIHpvbWJpZVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIFRoZSBXb3JkJzogJzI0QTAnLCAvLyBGYWlsaW5nIE1hc2sgT2YgVHJ1dGggLyBNYXNrIE9mIExpZXNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgVG8gRHVzdCc6ICcyNUM5JywgLy8gRmFpbGluZyB0byBraWxsIFNhbmQgU3BoZXJlIGFkZHNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIEJsZWVkaW5nJzogJzI4MicsIC8vIHN0YW5kaW5nIGluIEp1ZGdlbWVudCBCbGFkZSBzcXVhcmVzICgxNDAgaXMgaW5maW5pdGUgZWZmZWN0IHdoZW4gaW4sIDI4MiB3aGVuIG91dClcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ1JhYmFuYXN0cmUgTWF0ZXVzIERlZXAgRnJlZXplJzogJzRFNicsIC8vIEZyb3plbiBieSBpY2Ugc2thdGluZyBhZGRzXHJcbiAgICAnUmFiYW5hc3RyZSBUcmFuc2ZpZ3VyYXRpb24nOiAnNUIzJywgLy8gTWF0ZXVzIEJsaXp6YXJkIElJSSBUaGUgV2hpdGUgV2hpc3BlciAoMjcyRSkgLyBBcmdhdGggcnVubmluZyBpbnRvIHRoZSB3YWxsIGFuZCB0dXJuaW5nIGludG8gYSB6b21iaWVcclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBDcmF2ZW4nOiAnNThEJywgLy8gdHVybmluZyBpbnRvIGEgY2hpY2tlbiBmcm9tIDMgVW5uZXJ2ZWQgc3RhY2tzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdSYWJhbmFzdHJlIE1hdGV1cyBGbGFzaCBGcmVlemUnOiAnMjY0NycsIC8vIHVudGVsZWdyYXBoZWQgdGFuayBjb25hbCBjbGVhdmVcclxuICAgICdSYWJhbmFzdHJlIE1hdGV1cyBJY2ljbGUgU25vd3BpZXJjZSc6ICcyNjQwJywgLy8gdGFyZ2V0ZWQgdGVsZWdyYXBoZWQgc2tpbm55IGxpbmUgYW9lXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIFJvY2sgQ3V0dGVyJzogJzI1RDcnLCAvLyB1bnRlbGVncmFwaGVkIHRhbmsgY2xlYXZlXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIEZhbGxpbmcgUm9jayc6ICcyNUQzJywgLy8gU2FuZCBTcGhlcmUgc3ByZWFkXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBDaGFyaW90JzogJzI2NzQnLCAvLyB0YXJnZXRlZCBsaW5lIGFvZSB3aXRoIG1hcmtlciBiZWZvcmUgQ3J5IG9mIFZpY3RvcnlcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIEZhbGxpbmcgQm91bGRlcic6ICcyNUQyJywgLy8gU2FuZCBTcGhlcmUgc3RhY2tcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUmFiYW5hc3RyZSBNYXRldXMgQnJlYXRobGVzcycsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRlbiBzdGFja3Mgb2YgQnJlYXRobGVzcyBpcyBkZWF0aC5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU5NScsIGNvdW50OiAnMTAnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyB1bm5hbWVkIGRhbWFnZSBmcm9tIGJlaW5nIGhpdCBieSBSb2ZvY2FsZSBkcml2aW5nIGluIGNpcmNsZXMgZHVyaW5nIGFkZCBwaGFzZVxyXG4gICAgICBpZDogJ1JhYmFuYXN0cmUgUm9mb2NhbGUgQ2hhcmlvdCBSaW5nJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjY4QycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQ2hhcmlvdCcsXHJcbiAgICAgICAgICAgIGRlOiAnU3RyZWl0d2FnZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0NoYXJpb3QnLFxyXG4gICAgICAgICAgICBqYTogJ+aIpui7iicsXHJcbiAgICAgICAgICAgIGNuOiBg5oiY6L2mYCxcclxuICAgICAgICAgICAga286ICfqt7zsoJHqtJHsl63quLAnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxhTWhpZ28sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0FsYSBNaGlnbyBNYWdpdGVrIFJheSc6ICcyNENFJywgLy8gTGluZSBBb0UsIExlZ2lvbiBQcmVkYXRvciB0cmFzaCwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0FsYSBNaGlnbyBMb2NrIE9uJzogJzIwNDcnLCAvLyBIb21pbmcgY2lyY2xlcywgYm9zcyAxXHJcbiAgICAnQWxhIE1oaWdvIFRhaWwgTGFzZXIgMSc6ICcyMDQ5JywgLy8gRnJvbnRhbCBsaW5lIEFvRSwgYm9zcyAxXHJcbiAgICAnQWxhIE1oaWdvIFRhaWwgTGFzZXIgMic6ICcyMDRCJywgLy8gUmVhciBsaW5lIEFvRSwgYm9zcyAxXHJcbiAgICAnQWxhIE1oaWdvIFRhaWwgTGFzZXIgMyc6ICcyMDRDJywgLy8gUmVhciBsaW5lIEFvRSwgYm9zcyAxXHJcbiAgICAnQWxhIE1oaWdvIFNob3VsZGVyIENhbm5vbic6ICcyNEQwJywgLy8gQ2lyY2xlIEFvRSwgTGVnaW9uIEF2ZW5nZXIgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdBbGEgTWhpZ28gQ2Fubm9uZmlyZSc6ICcyM0VEJywgLy8gRW52aXJvbm1lbnRhbCBjaXJjbGUgQW9FLCBwYXRoIHRvIGJvc3MgMlxyXG4gICAgJ0FsYSBNaGlnbyBBZXRoZXJvY2hlbWljYWwgR3JlbmFkbyc6ICcyMDVBJywgLy8gQ2lyY2xlIEFvRSwgYm9zcyAyXHJcbiAgICAnQWxhIE1oaWdvIEludGVncmF0ZWQgQWV0aGVyb21vZHVsYXRvcic6ICcyMDVCJywgLy8gUmluZyBBb0UsIGJvc3MgMlxyXG4gICAgJ0FsYSBNaGlnbyBDaXJjbGUgT2YgRGVhdGgnOiAnMjRENCcsIC8vIFByb3hpbWl0eSBjaXJjbGUgQW9FLCBIZXhhZHJvbmUgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gRXhoYXVzdCc6ICcyNEQzJywgLy8gTGluZSBBb0UsIExlZ2lvbiBDb2xvc3N1cyB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FsYSBNaGlnbyBHcmFuZCBTd29yZCc6ICcyNEQyJywgLy8gQ29uYWwgQW9FLCBMZWdpb24gQ29sb3NzdXMgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gQXJ0IE9mIFRoZSBTdG9ybSAxJzogJzIwNjYnLCAvLyBQcm94aW1pdHkgY2lyY2xlIEFvRSwgcHJlLWludGVybWlzc2lvbiwgYm9zcyAzXHJcbiAgICAnQWxhIE1oaWdvIEFydCBPZiBUaGUgU3Rvcm0gMic6ICcyNTg3JywgLy8gUHJveGltaXR5IGNpcmNsZSBBb0UsIGludGVybWlzc2lvbiwgYm9zcyAzXHJcbiAgICAnQWxhIE1oaWdvIFZlaW4gU3BsaXR0ZXIgMSc6ICcyNEI2JywgLy8gUHJveGltaXR5IGNpcmNsZSBBb0UsIHByaW1hcnkgZW50aXR5LCBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gVmVpbiBTcGxpdHRlciAyJzogJzIwNkMnLCAvLyBQcm94aW1pdHkgY2lyY2xlIEFvRSwgaGVscGVyIGVudGl0eSwgYm9zcyAzXHJcbiAgICAnQWxhIE1oaWdvIExpZ2h0bGVzcyBTcGFyayc6ICcyMDZCJywgLy8gQ29uYWwgQW9FLCBib3NzIDNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0FsYSBNaGlnbyBEZW1pbWFnaWNrcyc6ICcyMDVFJyxcclxuICAgICdBbGEgTWhpZ28gVW5tb3ZpbmcgVHJvaWthJzogJzIwNjAnLFxyXG4gICAgJ0FsYSBNaGlnbyBBcnQgT2YgVGhlIFN3b3JkIDEnOiAnMjA2OScsXHJcbiAgICAnQWxhIE1oaWdvIEFydCBPZiBUaGUgU3dvcmQgMic6ICcyNTg5JyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEl0J3MgcG9zc2libGUgcGxheWVycyBtaWdodCBqdXN0IHdhbmRlciBpbnRvIHRoZSBiYWQgb24gdGhlIG91dHNpZGUsXHJcbiAgICAgIC8vIGJ1dCBub3JtYWxseSBwZW9wbGUgZ2V0IHB1c2hlZCBpbnRvIGl0LlxyXG4gICAgICBpZDogJ0FsYSBNaGlnbyBBcnQgT2YgVGhlIFN3ZWxsJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gRGFtYWdlIERvd25cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzJCOCcgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXIsIE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBGb3IgcmVhc29ucyBub3QgY29tcGxldGVseSB1bmRlcnN0b29kIGF0IHRoZSB0aW1lIHRoaXMgd2FzIG1lcmdlZCxcclxuLy8gYnV0IGxpa2VseSByZWxhdGVkIHRvIHRoZSBmYWN0IHRoYXQgbm8gbmFtZXBsYXRlcyBhcmUgdmlzaWJsZSBkdXJpbmcgdGhlIGVuY291bnRlcixcclxuLy8gYW5kIHRoYXQgbm90aGluZyBpbiB0aGUgZW5jb3VudGVyIGFjdHVhbGx5IGRvZXMgZGFtYWdlLFxyXG4vLyB3ZSBjYW4ndCB1c2UgZGFtYWdlV2FybiBvciBnYWluc0VmZmVjdCBoZWxwZXJzIG9uIHRoZSBCYXJkYW0gZmlnaHQuXHJcbi8vIEluc3RlYWQsIHdlIHVzZSB0aGlzIGhlbHBlciBmdW5jdGlvbiB0byBsb29rIGZvciBmYWlsdXJlIGZsYWdzLlxyXG4vLyBJZiB0aGUgZmxhZyBpcyBwcmVzZW50LGEgZnVsbCB0cmlnZ2VyIG9iamVjdCBpcyByZXR1cm5lZCB0aGF0IGRyb3BzIGluIHNlYW1sZXNzbHkuXHJcbmNvbnN0IGFiaWxpdHlXYXJuID0gKGFyZ3M6IHsgYWJpbGl0eUlkOiBzdHJpbmc7IGlkOiBzdHJpbmcgfSk6IE9vcHN5VHJpZ2dlcjxEYXRhPiA9PiB7XHJcbiAgaWYgKCFhcmdzLmFiaWxpdHlJZClcclxuICAgIGNvbnNvbGUuZXJyb3IoJ01pc3NpbmcgYWJpbGl0eSAnICsgSlNPTi5zdHJpbmdpZnkoYXJncykpO1xyXG4gIGNvbnN0IHRyaWdnZXI6IE9vcHN5VHJpZ2dlcjxEYXRhPiA9IHtcclxuICAgIGlkOiBhcmdzLmlkLFxyXG4gICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogYXJncy5hYmlsaXR5SWQgfSksXHJcbiAgICBjb25kaXRpb246IChfZGF0YSwgbWF0Y2hlcykgPT4gbWF0Y2hlcy5mbGFncy5zdWJzdHIoLTIpID09PSAnMEUnLFxyXG4gICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICB9LFxyXG4gIH07XHJcbiAgcmV0dXJuIHRyaWdnZXI7XHJcbn07XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQmFyZGFtc01ldHRsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQmFyZGFtIERpcnR5IENsYXcnOiAnMjFBOCcsIC8vIEZyb250YWwgY2xlYXZlLCBHdWxvIEd1bG8gdHJhc2hcclxuICAgICdCYXJkYW0gRXBpZ3JhcGgnOiAnMjNBRicsIC8vIExpbmUgQW9FLCBXYWxsIG9mIEJhcmRhbSB0cmFzaFxyXG4gICAgJ0JhcmRhbSBUaGUgRHVzayBTdGFyJzogJzIxODcnLCAvLyBDaXJjbGUgQW9FLCBlbnZpcm9ubWVudCBiZWZvcmUgZmlyc3QgYm9zc1xyXG4gICAgJ0JhcmRhbSBUaGUgRGF3biBTdGFyJzogJzIxODYnLCAvLyBDaXJjbGUgQW9FLCBlbnZpcm9ubWVudCBiZWZvcmUgZmlyc3QgYm9zc1xyXG4gICAgJ0JhcmRhbSBDcnVtYmxpbmcgQ3J1c3QnOiAnMUYxMycsIC8vIENpcmNsZSBBb0VzLCBHYXJ1bGEsIGZpcnN0IGJvc3NcclxuICAgICdCYXJkYW0gUmFtIFJ1c2gnOiAnMUVGQycsIC8vIExpbmUgQW9FcywgU3RlcHBlIFlhbWFhLCBmaXJzdCBib3NzLlxyXG4gICAgJ0JhcmRhbSBMdWxsYWJ5JzogJzI0QjInLCAvLyBDaXJjbGUgQW9FcywgU3RlcHBlIFNoZWVwLCBmaXJzdCBib3NzLlxyXG4gICAgJ0JhcmRhbSBIZWF2ZSc6ICcxRUY3JywgLy8gRnJvbnRhbCBjbGVhdmUsIEdhcnVsYSwgZmlyc3QgYm9zc1xyXG4gICAgJ0JhcmRhbSBXaWRlIEJsYXN0ZXInOiAnMjRCMycsIC8vIEVub3Jtb3VzIGZyb250YWwgY2xlYXZlLCBTdGVwcGUgQ29ldXJsLCBmaXJzdCBib3NzXHJcbiAgICAnQmFyZGFtIERvdWJsZSBTbWFzaCc6ICcyNkEnLCAvLyBDaXJjbGUgQW9FLCBNZXR0bGluZyBEaGFyYSB0cmFzaFxyXG4gICAgJ0JhcmRhbSBUcmFuc29uaWMgQmxhc3QnOiAnMTI2MicsIC8vIENpcmNsZSBBb0UsIFN0ZXBwZSBFYWdsZSB0cmFzaFxyXG4gICAgJ0JhcmRhbSBXaWxkIEhvcm4nOiAnMjIwOCcsIC8vIEZyb250YWwgY2xlYXZlLCBLaHVuIEd1cnZlbCB0cmFzaFxyXG4gICAgJ0JhcmRhbSBIZWF2eSBTdHJpa2UgMSc6ICcyNTc4JywgLy8gMSBvZiAzIDI3MC1kZWdyZWUgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICAnQmFyZGFtIEhlYXZ5IFN0cmlrZSAyJzogJzI1NzknLCAvLyAyIG9mIDMgMjcwLWRlZ3JlZSByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gSGVhdnkgU3RyaWtlIDMnOiAnMjU3QScsIC8vIDMgb2YgMyAyNzAtZGVncmVlIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBUcmVtYmxvciAxJzogJzI1N0InLCAvLyAxIG9mIDIgY29uY2VudHJpYyByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gVHJlbWJsb3IgMic6ICcyNTdDJywgLy8gMiBvZiAyIGNvbmNlbnRyaWMgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICAnQmFyZGFtIFRocm93aW5nIFNwZWFyJzogJzI1N0YnLCAvLyBDaGVja2VyYm9hcmQgQW9FLCBUaHJvd2luZyBTcGVhciwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gQmFyZGFtXFwncyBSaW5nJzogJzI1ODEnLCAvLyBEb251dCBBb0UgaGVhZG1hcmtlcnMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gQ29tZXQnOiAnMjU3RCcsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICAnQmFyZGFtIENvbWV0IEltcGFjdCc6ICcyNTgwJywgLy8gQ2lyY2xlIEFvRXMsIFN0YXIgU2hhcmQsIHNlY29uZCBib3NzXHJcbiAgICAnQmFyZGFtIElyb24gU3BoZXJlIEF0dGFjayc6ICcxNkI2JywgLy8gQ29udGFjdCBkYW1hZ2UsIElyb24gU3BoZXJlIHRyYXNoLCBiZWZvcmUgdGhpcmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBUb3JuYWRvJzogJzI0N0UnLCAvLyBDaXJjbGUgQW9FLCBLaHVuIFNoYXZhcmEgdHJhc2hcclxuICAgICdCYXJkYW0gUGluaW9uJzogJzFGMTEnLCAvLyBMaW5lIEFvRSwgWW9sIEZlYXRoZXIsIHRoaXJkIGJvc3NcclxuICAgICdCYXJkYW0gRmVhdGhlciBTcXVhbGwnOiAnMUYwRScsIC8vIERhc2ggYXR0YWNrLCBZb2wsIHRoaXJkIGJvc3NcclxuICAgICdCYXJkYW0gRmx1dHRlcmZhbGwgVW50YXJnZXRlZCc6ICcxRjEyJywgLy8gUm90YXRpbmcgY2lyY2xlIEFvRXMsIFlvbCwgdGhpcmQgYm9zc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQmFyZGFtIENvbmZ1c2VkJzogJzBCJywgLy8gRmFpbGVkIGdhemUgYXR0YWNrLCBZb2wsIHRoaXJkIGJvc3NcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ0JhcmRhbSBGZXR0ZXJzJzogJzU2RicsIC8vIEZhaWxpbmcgdHdvIG1lY2hhbmljcyBpbiBhbnkgb25lIHBoYXNlIG9uIEJhcmRhbSwgc2Vjb25kIGJvc3MuXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdCYXJkYW0gR2FydWxhIFJ1c2gnOiAnMUVGOScsIC8vIExpbmUgQW9FLCBHYXJ1bGEsIGZpcnN0IGJvc3MuXHJcbiAgICAnQmFyZGFtIEZsdXR0ZXJmYWxsIFRhcmdldGVkJzogJzFGMEMnLCAvLyBDaXJjbGUgQW9FIGhlYWRtYXJrZXIsIFlvbCwgdGhpcmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBXaW5nYmVhdCc6ICcxRjBGJywgLy8gQ29uYWwgQW9FIGhlYWRtYXJrZXIsIFlvbCwgdGhpcmQgYm9zc1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIC8vIDEgb2YgMyAyNzAtZGVncmVlIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBIZWF2eSBTdHJpa2UgMScsIGFiaWxpdHlJZDogJzI1NzgnIH0pLFxyXG4gICAgLy8gMiBvZiAzIDI3MC1kZWdyZWUgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIEhlYXZ5IFN0cmlrZSAyJywgYWJpbGl0eUlkOiAnMjU3OScgfSksXHJcbiAgICAvLyAzIG9mIDMgMjcwLWRlZ3JlZSByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gSGVhdnkgU3RyaWtlIDMnLCBhYmlsaXR5SWQ6ICcyNTdBJyB9KSxcclxuICAgIC8vIDEgb2YgMiBjb25jZW50cmljIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBUcmVtYmxvciAxJywgYWJpbGl0eUlkOiAnMjU3QicgfSksXHJcbiAgICAvLyAyIG9mIDIgY29uY2VudHJpYyByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gVHJlbWJsb3IgMicsIGFiaWxpdHlJZDogJzI1N0MnIH0pLFxyXG4gICAgLy8gQ2hlY2tlcmJvYXJkIEFvRSwgVGhyb3dpbmcgU3BlYXIsIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIFRocm93aW5nIFNwZWFyJywgYWJpbGl0eUlkOiAnMjU3RicgfSksXHJcbiAgICAvLyBHYXplIGF0dGFjaywgV2FycmlvciBvZiBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIEVtcHR5IEdhemUnLCBhYmlsaXR5SWQ6ICcxRjA0JyB9KSxcclxuICAgIC8vIERvbnV0IEFvRSBoZWFkbWFya2VycywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbVxcJ3MgUmluZycsIGFiaWxpdHlJZDogJzI1ODEnIH0pLFxyXG4gICAgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gQ29tZXQnLCBhYmlsaXR5SWQ6ICcyNTdEJyB9KSxcclxuICAgIC8vIENpcmNsZSBBb0VzLCBTdGFyIFNoYXJkLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBDb21ldCBJbXBhY3QnLCBhYmlsaXR5SWQ6ICcyNTgwJyB9KSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiB3ZSBjb3VsZCBjb3JyZWN0bHkgYmxhbWUgbWlzc2luZyBOdW0yNCB0b3dlcnMgZnJvbSAxRjFELzFGMUUvMUYxRiB3aGVuIHRoZXkgYXJlIHRha2VuLlxyXG4vLyBUT0RPOiAxMnRoIExlZ2lvbiBQYWNrZXIgUXVpY2sgQ2hhcmdlICgyMTI3KSBnb2luZyBvZmYgaXMgYSBtaXN0YWtlIChwcm9iYWJseSkuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNhc3RydW1BYmFuaWEsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gTGFxdWVhcml1cyBPdmVycG93ZXInOiAnMkQwJywgLy8gY29uYWxcclxuICAgICdDYXN0cnVtQWJhbmlhIDEydGggTGVnaW9uIEF2ZW5nZXIgU2hvdWxkZXIgQ2Fubm9uJzogJzIzMUMnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdDYXN0cnVtQWJhbmlhIDEydGggTGVnaW9uIFZhbmd1YXJkIENlcm1ldCBEcmlsbCc6ICcyMEUnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gU2lnbmlmaWVyIERhcmsgRmlyZSBJSUknOiAnNTE5JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBDYW5pcyBQdWduYXggUmVja2xhc3MgQ2hhcmdlJzogJzE0RicsIC8vIGxpbmUgYW9lXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBNYWduYSBSb2FkZXIgTWFnaXRlayBGaXJlIDInOiAnMUYxNScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgTWFnbmEgUm9hZGVyIFdpbGQgU3BlZWQnOiAnMUZGOCcsIC8vIDR4IGxpbmUgY2hhcmdlc1xyXG4gICAgJ0Nhc3RydW1BYmFuaWEgTWFnbmEgUm9hZGVyIE1hZ2l0ZWsgUHVsc2UgMSc6ICcyMDkwJywgLy8gTWFyayBYTElJSSBNaW5pIENhbm5vbiBhb2VzXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBNYWduYSBSb2FkZXIgTWFnaXRlayBQdWxzZSAyJzogJzFGMTknLCAvLyBNYXJrIFhMSUlJIE1pbmkgQ2Fubm9uIGFvZXNcclxuICAgICdDYXN0cnVtQWJhbmlhIEh5cGVydHVuZWQgQmxhc3QgV2F2ZSc6ICc0MkMnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gUm9hZGVyIFJ1c2gnOiAnMjA4QScsIC8vIGxvbmcgbGluZSBhb2Ugd2hlbiBSb2FkZXJzIGVudGVyXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBOdW1iZXIgWFhJViBHYWxlIEN1dCc6ICcyMDgzJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBOdW1iZXIgWFhJViBPdmVyZmxvdyc6ICcxRjIwJywgLy8gZmFpbGluZyB0byBnZXQgYSB0b3dlclxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gUmVhcmd1YXJkIENlcm1ldCBQaWxlJzogJzIzQUInLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnMjA5QycsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gQ29sb3NzdXMgR3JhbmQgU3dvcmQnOiAnMjRBNicsIC8vIGxhcmdlIGNvbmFsXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBDb2xvc3N1cyBFeGhhdXN0JzogJzI0QTgnLCAvLyBsYXJnZSBsaW5lIGFvZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSW5mZXJubyBSYWh1IEJsYXN0ZXIgMSc6ICcxRjI5JywgLy8gbGluZSBhb2UgKGF0IFJhaHUgMClcclxuICAgICdDYXN0cnVtQWJhbmlhIEluZmVybm8gUmFodSBCbGFzdGVyIDInOiAnMjA4RScsIC8vIGxpbmUgYW9lIChhdCBSYWh1IDEpXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBJbmZlcm5vIFJhaHUgQmxhc3RlciAzJzogJzIwOEYnLCAvLyBsaW5lIGFvZSAoYXQgUmFodSAyKVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSW5mZXJubyBLZXR1IFdhdmUnOiAnMUYyOCcsIC8vIGxhcmdlIGNpcmNsZSBkdXJpbmcgS2V0dSAmIFJhaHVcclxuICAgICdDYXN0cnVtQWJhbmlhIEluZmVybm8gS2V0dSBDdXR0ZXInOiAnMUYyNycsIC8vIDE4MC8zNjAgcGlud2hlZWwgZHVyaW5nIEtldHUgJiBSYWh1XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBOdW1iZXIgWFhJViBDb3VudGVyJzogJzFGMjQnLCAvLyBoYXZpbmcgdGhlIHdyb25nIGVsZW1lbnRcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSW5mZXJubyAxMnRoIExlZ2lvbiBEZWF0aCBDbGF3IFNlaXplZCc6ICc1MDcnLCAvLyBnZXR0aW5nIGdyYWJiZWQgYnkgdGV0aGVyZWQgRGVhdGggQ2xhd1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBJbmZlcm5vIFJhaHUgUmF5JzogJzFGMkEnLCAvLyByZWQgc3ByZWFkIGNpcmNsZVxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRG9tYUNhc3RsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRG9tYSBDYXN0bGUgRG9tYW4gQ29sb3NzdXMgR3JhbmQgU3dvcmQnOiAnMjE3OScsIC8vIGxhcmdlIHdpZGUgY29uYWxcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBHdW5zaGlwIEdhcmxlYW4gRmlyZSc6ICcyMTdDJywgLy8gdGFyZ2V0ZWQgY2lyY2xlIChjYW4gaGFwcGVuIG91dCBvZiBjb21iYXQpXHJcbiAgICAnRG9tYSBDYXN0bGUgTWFnaXRlayBSZWFyZ3VhcmQgR2FybGVhbiBGaXJlJzogJzIwOUYnLCAvLyBsaW5lIG9mIHRhcmdldGVkIGV4YWZsYXJlLXkgY2lyY2xlc1xyXG4gICAgJ0RvbWEgQ2FzdGxlIE1hZ2l0ZWsgUmVhcmd1YXJkIE1hZ2l0ZWsgUmF5JzogJzIwQTEnLCAvLyBSZWFyZ3VhcmQgQml0IGdyZWVuIGxpbmUgYW9lXHJcbiAgICAnRG9tYSBDYXN0bGUgTWFnaXRlayBSZWFyZ3VhcmQgU2VsZi1EZXRvbmF0ZSc6ICcyMEEwJywgLy8gcnVubmluZyBpbnRvIGEgUmVhcmd1YXJkIE1pbmVcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBWYW5ndWFyZCBPdmVyY2hhcmdlJzogJzIxN0UnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBWYW5ndWFyZCBEcmlsbCBDYW5ub25zJzogJzIxN0QnLCAvLyBmcm9udGFsIGxpbmVcclxuICAgICdEb21hIENhc3RsZSBNYXJrIFhMSUlJIEZpZWxkIENhbm5vbiBNYWdpdGVrIENhbm5vbic6ICcyNEU5JywgLy8gbGluZSBhb2VzIGZyb20gc3RhdGlvbmFyeSBjYW5ub25zXHJcbiAgICAnRG9tYSBDYXN0bGUgRG9tYW4gUmVhcGVyIE1hZ2l0ZWsgQ2Fubm9uJzogJzIxODEnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdEb21hIENhc3RsZSBIZXhhZHJvbmUgQml0IENoYWluIE1pbmUgMSc6ICcyNDQ3JywgLy8gRGVzdHJveWFibGUgbGFzZXIgdGhhdCBkb2VzIGtub2NrYmFjaywgYm90aCAyJjMgYm9zc1xyXG4gICAgJ0RvbWEgQ2FzdGxlIEhleGFkcm9uZSBCaXQgQ2hhaW4gTWluZSAyJzogJzIwQTcnLCAvLyBEZXN0cm95YWJsZSBsYXNlciB0aGF0IGRvZXMga25vY2tiYWNrLCBib3RoIDImMyBib3NzXHJcbiAgICAnRG9tYSBDYXN0bGUgTWFnaXRlayBIZXhhZHJvbmUgQ2lyY2xlIE9mIERlYXRoJzogJzIwQTInLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdEb21hIENhc3RsZSBNYWdpdGVrIEhleGFkcm9uZSBNYWdpdGVrIE1pc3NpbGVzJzogJzIwQTYnLCAvLyBmYWlsaW5nIHRvd2VyICgyMEE1IGlzIGNvcnJlY3QgdG93ZXIgZGFtYWdlKVxyXG4gICAgJ0RvbWEgQ2FzdGxlIERvbWFuIEhhc3RhdHVzIFRlbmthIEdva2VuJzogJzIxODInLCAvLyB3aWRlIGNvbmFsXHJcbiAgICAnRG9tYSBDYXN0bGUgRG9tYW4gQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnMjE4NCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIEh5cGVydHVuZWQgR3J5bmV3YWh0IENsZWFuIEN1dCc6ICcyMEIxJywgLy8gTWFnaXRlayBDaGFrcmFtIGxpbmVzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdEb21hIENhc3RsZSBIeXBlcnR1bmVkIEdyeW5ld2FodCBEZWxheS1BY3Rpb24gQ2hhcmdlJzogJzIwQUQnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0RvbWEgQ2FzdGxlIE1hZ2l0ZWsgSGV4YWRyb25lIDItVG9uemUgTWFnaXRlayBNaXNzaWxlJzogJzIwQTMnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZURyb3duZWRDaXR5T2ZTa2FsbGEsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0h5ZHJvY2Fubm9uJzogJzI2OTcnLCAvLyBMaW5lIEFvRSwgU2FsdCBTd2FsbG93IHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3RhZ25hbnQgU3ByYXknOiAnMjY5OScsIC8vIENvbmFsIEFvRSwgU2thbGxhIE5hbmthIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcblxyXG4gICAgJ0J1YmJsZSBCdXJzdCc6ICcyNjFCJywgLy8gQnViYmxlIGV4cGxvc2lvbiwgSHlkcm9zcGhlcmUsIGJvc3MgMVxyXG5cclxuICAgICdQbGFpbiBQb3VuZCc6ICcyNjlBJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgRGhhcmEgU2VudGluZWwgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdCb3VsZGVyIFRvc3MnOiAnMjY5QicsIC8vIFNtYWxsIGNpcmNsZSBBb0UsIFN0b25lIFBob2ViYWQgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdMYW5kc2xpcCc6ICcyNjlDJywgLy8gQ29uYWwgQW9FLCBTdG9uZSBQaG9lYmFkIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcblxyXG4gICAgJ015c3RpYyBMaWdodCc6ICcyNjU3JywgLy8gQ29uYWwgQW9FLCBUaGUgT2xkIE9uZSwgYm9zcyAyXHJcbiAgICAnTXlzdGljIEZsYW1lJzogJzI2NTknLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBUaGUgT2xkIE9uZSwgYm9zcyAyLiAyNjU4IGlzIHRoZSBjYXN0LXRpbWUgYWJpbGl0eS5cclxuXHJcbiAgICAnRGFyayBJSSc6ICcxMTBFJywgLy8gVGhpbiBjb25lIEFvRSwgTGlnaHRsZXNzIEhvbXVuY3VsdXMgdHJhc2gsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0ltcGxvc2l2ZSBDdXJzZSc6ICcyNjlFJywgLy8gQ29uYWwgQW9FLCBaYW5nYmV0byB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnVW5keWluZyBGSXJlJzogJzI2OUYnLCAvLyBDaXJjbGUgQW9FLCBaYW5nYmV0byB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnRmlyZSBJSSc6ICcyNkEwJywgLy8gQ2lyY2xlIEFvRSwgQWNjdXJzZWQgSWRvbCB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcblxyXG4gICAgJ1J1c3RpbmcgQ2xhdyc6ICcyNjYxJywgLy8gRnJvbnRhbCBjbGVhdmUsIEhyb2RyaWMgUG9pc29udG9uZ3VlLCBib3NzIDNcclxuICAgICdXb3JkcyBPZiBXb2UnOiAnMjY2MicsIC8vIEV5ZSBsYXNlcnMsIEhyb2RyaWMgUG9pc29udG9uZ3VlLCBib3NzIDNcclxuICAgICdUYWlsIERyaXZlJzogJzI2NjMnLCAvLyBSZWFyIGNsZWF2ZSwgSHJvZHJpYyBQb2lzb250b25ndWUsIGJvc3MgM1xyXG4gICAgJ1JpbmcgT2YgQ2hhb3MnOiAnMjY2NycsIC8vIFJpbmcgaGVhZG1hcmtlciwgSHJvZHJpYyBQb2lzb250b25ndWUsIGJvc3MgM1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1NlbGYtRGV0b25hdGUnOiAnMjY1QycsIC8vIFJvb213aWRlIGV4cGxvc2lvbiwgU3Vic2VydmllbnQsIGJvc3MgMlxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnRHJvcHN5JzogJzExQicsIC8vIFN0YW5kaW5nIGluIEJsb29keSBQdWRkbGVzLCBvciBiZWluZyBrbm9ja2VkIG91dHNpZGUgdGhlIGFyZW5hLCBib3NzIDFcclxuICAgICdDb25mdXNlZCc6ICcwQicsIC8vIEZhaWxpbmcgdGhlIGdhemUgYXR0YWNrLCBib3NzIDNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0Jsb29keSBQdWRkbGUnOiAnMjY1NScsIC8vIExhcmdlIHdhdGVyeSBzcHJlYWQgY2lyY2xlcywgS2VscGllLCBib3NzIDFcclxuICAgICdDcm9zcyBPZiBDaGFvcyc6ICcyNjY4JywgLy8gQ3Jvc3MgaGVhZG1hcmtlciwgSHJvZHJpYyBQb2lzb250b25ndWUsIGJvc3MgM1xyXG4gICAgJ0NpcmNsZSBPZiBDaGFvcyc6ICcyNjY5JywgLy8gU3ByZWFkIGNpcmNsZSBoZWFkbWFya2VyLCBIcm9kcmljIFBvaXNvbnRvbmd1ZSwgYm9zcyAzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogRGlzY2hvcmRhbnQgQ2xlYW5zaW5nICgyNzlDKSBmaXJzdCwgdGhlbiAyOTdBP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVGcmFjdGFsQ29udGludXVtSGFyZCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRnJhY3RhbEhhcmQgUHJvdG90eXBlIENsYXcgU2hyZWQnOiAnMTI1NycsIC8vIGxpbmUgYW9lXHJcbiAgICAnRnJhY3RhbEhhcmQgUHJvdG90eXBlIENsYXcgVGhlIEhhbmQnOiAnMTI1OCcsIC8vIGNvbmFsXHJcbiAgICAnRnJhY3RhbEhhcmQgU2Vydm9tZWNoYW5pY2FsIE1pbm90YXVyIDE2LVRvbnplIFN3aXBlJzogJzJBRTUnLCAvLyB1bnRlbGVncmFwaGVkIGNvbmFsXHJcbiAgICAnRnJhY3RhbEhhcmQgU2Vydm9tZWNoYW5pY2FsIE1pbm90YXVyIDEyOC1Ub256ZSBTd2luZyc6ICcyQUU0JywgLy8gdGVsZWdyYXBoZWQgbGFyZ2UgY2lyY2xlXHJcbiAgICAvLyBUaGVzZSBhcHBseSB0byBib3RoIFNlcnZvbWVjaGFuaWNhbCBDaGltZXJhIGFuZCBQcm90by1DaGltZXJhLlxyXG4gICAgJ0ZyYWN0YWxIYXJkIENoaW1lcmEgVGhlIFJhbVxccyBCcmVhdGgnOiAnMTIyQScsIC8vIGNvbmFsXHJcbiAgICAnRnJhY3RhbEhhcmQgQ2hpbWVyYSBUaGUgRHJhZ29uXFxzIEJyZWF0aCc6ICcxMjJCJywgLy8gY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBDaGltZXJhIFRoZSBEcmFnb25cXHMgVm9pY2UnOiAnODYxJywgLy8gdW50ZWxlZ3JhcGhlZCBkb251dFxyXG4gICAgJ0ZyYWN0YWxIYXJkIENoaW1lcmEgVGhlIFJhbVxcJ3MgVm9pY2UnOiAnODYwJywgLy8gdW50ZWxlZ3JhcGhlZCBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdGcmFjdGFsSGFyZCBDaGltZXJhIFRoZSBMaW9uXFwncyBCcmVhdGgnOiAnODVGJywgLy8gY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBNb3RoZXJiaXQgUHJvdG90eXBlIEJpdCBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyN0E4JywgLy8gbGluZSBhb2VcclxuICAgICdGcmFjdGFsSGFyZCBNb3RoZXJiaXQgUHJvdG90eXBlIEJpdCBIeXBlcmN1cnJlbnQnOiAnMjdBQycsIC8vIGhpdHRpbmcgdGhlIGJpdCBsaW5lIGxhc2VyIGR1cmluZyBDaXRhZGVsIEJ1c3RlclxyXG4gICAgJ0ZyYWN0YWxIYXJkIE1vdGhlcmJpdCBBbGxhZ2FuIEdyYXZpdHknOiAnMjdBNicsIC8vIHNwcmVhZCBtYXJrZXJcclxuICAgICdGcmFjdGFsSGFyZCBNb3RoZXJiaXQgQ2l0YWRlbCBCdXN0ZXInOiAnMjdBNScsIC8vIGZyb250IDE4MCBsYXNlclxyXG4gICAgJ0ZyYWN0YWxIYXJkIFByb3RvdHlwZSBNaXJyb3JrbmlnaHQgR3VzdCc6ICc4NjUnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdGcmFjdGFsSGFyZCBSaW5raGFscyBSZWdvcmdlJzogJzI1QjgnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdGcmFjdGFsSGFyZCBVbHRpbWEgV2FycmlvciBDaXRhZGVsIEJ1c3Rlcic6ICcyNzkyJywgLy8gdW50ZWxlZ3JhcGhlZCBmcm9udCBsaW5lIGxhc2VyXHJcbiAgICAnRnJhY3RhbEhhcmQgVWx0aW1hIFdhcnJpb3IgRWluIFNvZic6ICcyNzk4JywgLy8gU2VwaGlyb3QgcGhhc2UgYmVpbmcgaW4gdGhlIGdyZWVuIGdyb3dpbmcgYnViYmxlXHJcbiAgICAnRnJhY3RhbEhhcmQgQmlvbWFudWZhY3R1cmVkIE1pbm90YXVyIDExLVRvbnplIFN3aXBlJzogJzI5QTInLCAvLyB1bnRlbGVncmFwaGVkIGNvbmFsXHJcbiAgICAnRnJhY3RhbEhhcmQgQmlvbWFudWZhY3R1cmVkIE1pbm90YXVyIDExMS1Ub256ZSBTd2luZyc6ICcyOUExJywgLy8gdGVsZWdyYXBoZWQgbGFyZ2UgY2lyY2xlXHJcbiAgICAnRnJhY3RhbGhhcmQgVWx0aW1hIEJlYXN0IERlYXRoIFNwaW4nOiAnMjdBRCcsIC8vIG1lbGVlIHJhbmdlIHVudGVsZWdyYXBoZWQgY2lyY2xlXHJcbiAgICAnRnJhY3RhbGhhcmQgVWx0aW1hIEJlYXN0IEFldGhlciBCZW5kJzogJzI3QUYnLCAvLyBnZXQgdW5kZXIgZG9udXRcclxuICAgICdGcmFjdGFsaGFyZCBVbHRpbWEgQmVhc3QgTGlnaHQgUGlsbGFyIDEnOiAnMjI3QkEnLCAvLyBpbml0aWFsIHBvaW50IG9mIGxpZ2h0IHBpbGxhciBjaXJjbGVzXHJcbiAgICAnRnJhY3RhbGhhcmQgVWx0aW1hIEJlYXN0IExpZ2h0IFBpbGxhciAyJzogJzI3QkInLCAvLyBmb2xsb3cgdXAgbGlnaHQgcGlsbGFyIGhpdHNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdGcmFjdGFsSGFyZCBNb3RoZXJiaXQgRmFsc2UgR3Jhdml0eSc6ICcyN0E3JywgLy8gc3RhbmRpbmcgaW4gQWxsYWdhbiBHcmF2aXR5IHB1ZGRsZSwgZ2l2ZXMgSGVhdnlcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0ZyYWN0YWxIYXJkIFVsdGltYSBXYXJyaW9yIEluZmluaXRlIEFuZ3Vpc2gnOiAnNDg3JywgLy8gUGVyc29uYWxseSBmYWlsaW5nIFp1cnZhbiB0b3dlcnNcclxuICAgICdGcmFjdGFsSGFyZCBVbHRpbWEgV2FycmlvciBSZWR1Y2VkIEltbXVuaXR5JzogJzE0MycsIC8vIEZhaWxpbmcgU29waGlhIERpc2Nob3JkYW50IENsZWFuc2luZ1xyXG4gICAgJ0ZyYWN0YWxoYXJkIFVsdGltYSBCZWFzdCBCdXJucyc6ICcxMUMnLCAvLyBzdGFuZGluZyBpbiBmaXJlIGZyb20gRmxhcmUgU3RhclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRnJhY3RhbEhhcmQgVWx0aW1hIFdhcnJpb3IgQWV0aGVyb3BsYXNtJzogJzI3OTMnLCAvLyB0YW5rYnVzdGVyIGNsZWF2ZVxyXG4gICAgJ0ZyYWN0YWxIYXJkIFVsdGltYSBXYXJyaW9yIFJhdHpvbic6ICcyNzk3JywgLy8gU2VwaGlyb3QgcGhhc2UgYnViYmxlIGRyb3BcclxuICAgICdGcmFjdGFsaGFyZCBVbHRpbWEgQmVhc3QgQWxsYWdhbiBHcmF2aXR5JzogJzI3QjknLCAvLyBzcHJlYWRcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnRnJhY3RhbEhhcmQgVWx0aW1hIFdhcnJpb3IgTWFzcyBBZXRoZXJvcGxhc20nOiAnMjc5NScsIC8vIHRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gU2Nob2xhIFNjb3JwaW9uIEhvbWluZyBNaXNzaWxlICgzQTY1KSBpcyBoYXJkIG5vdCB0byBoaXQgUGlwaW4vTHlzZSBzbyBqdXN0IGlnbm9yZS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlR2hpbWx5dERhcmssXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0doaW1seXQgQWlyYm9ybmUgRXhwbG9zaW9uJzogJzM4ODEnLCAvLyBzZW1pLXRhcmdldGVkIHJlZCBjaXJjbGVcclxuICAgICdHaGltbHl0IFNjaG9sYSBHdW5zaGlwIEdhcmxlYW4gRmlyZSc6ICczQTZDJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgTWFnaXRlayBTbGFzaCAxJzogJzM3NzQnLCAvLyBzcGlubmluZyBwaWUgc2xpY2VzXHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgTWFnaXRlayBTbGFzaCAyJzogJzM3NzUnLCAvLyBzcGlubmluZyBwaWUgc2xpY2VzXHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgTWFnaXRlayBTbGFzaCAzJzogJzM5NEUnLCAvLyBzcGlubmluZyBwaWUgc2xpY2VzXHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgTWFnaXRlayBTbGFzaCA0JzogJzM5NEYnLCAvLyBzcGlubmluZyBwaWUgc2xpY2VzXHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgRXhoYXVzdCc6ICczNzcwJywgLy8gbGluZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIEFybW9yZWQgV2VhcG9uIERpZmZyYWN0aXZlIExhc2VyJzogJzNBNzQnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdHaGltbHl0IFByb21ldGhldXMgTmVlZGxlIEd1bic6ICczNDVBJywgLy8gZnJvbnQgOTAgZGVncmVlIGNvbmFsXHJcbiAgICAnR2hpbWx5dCBQcm9tZXRoZXVzIE9pbCBTaG93ZXInOiAnMzQ1NicsIC8vIGJhY2sgMjcwIGRlZ3JlZVxyXG4gICAgJ0doaW1seXQgUHJvbWV0aGV1cyBIZWF0JzogJzM0NTgnLCAvLyB3YWxsIGxhc2VyXHJcbiAgICAnR2hpbWx5dCBTY2hvbGEgQ29sb3NzdXMgR3JhbmQgU3RyaWtlJzogJzNBNzUnLCAvLyB0aGluIGxpbmVcclxuICAgICdHaGltbHl0IFNjaG9sYSBIZXhhZHJvbmUgU3dvb3AnOiAnMzg4MicsIC8vIGxpbmUgYW9lIGVudGVyaW5nIGFyZW5hXHJcbiAgICAnR2hpbWx5dCBTY2hvbGEgSGV4YWRyb25lIDItVG9uemUgTWFnaXRlayBNaXNzaWxlJzogJzNBNzEnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdHaGltbHl0IFNjaG9sYSBIZXhhZHJvbmUgQ2lyY2xlIG9mIERlYXRoJzogJzNBNzAnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdHaGltbHl0IFNjaG9sYSBNYXJrIElJIENvbG9zc3VzIEV4aGF1c3QnOiAnM0E3NicsIC8vIGxpbmVcclxuICAgICdHaGltbHl0IFNjaG9sYSBNYXJrIElJIENvbG9zc3VzIEdyYW5kIFN3b3JkJzogJzNBNzcnLCAvLyB3aWRlIGNvbmFsXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBBbmdyeSBTYWxhbWFuZGVyJzogJzM3MkMnLCAvLyB0YXJnZXRlZCBsaW5lXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBDcm9zc2JvbmVzJzogJzNDODAnLCAvLyB0YXJnZXRlZCBsaW5lIHdpdGgga25vY2tiYWNrXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBCb21iYXJkbWVudCc6ICczQzcxJywgLy8gbGFyZ2UgY2lyY2xlcyBkdXJpbmcgT3JkZXIgdG8gQm9tYmFyZFxyXG4gICAgJ0doaW1seXQgU29yYW51cyBEdW8gU3R1bm5pbmcgU3dlZXAnOiAnM0M3MicsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0doaW1seXQgU29yYW51cyBEdW8gQ3Jvc3NoYXRjaCc6ICczNzIyJywgLy8gcmVwZWF0ZWQgWCBjaGFyZ2VzIGR1cmluZyBpbnRlcm1pc3Npb25zXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBDZXJ1bGV1bSBUYW5rIEJ1cnN0JzogJzM3MUEnLCAvLyBjZXJ1bGV1bSB0YW5rIGNpcmNsZSBleHBsb3Npb25zXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBRdWF0ZXJuaXR5JzogJzM3MzMnLCAvLyBzZXJpZXMgb2YgWCBsaW5lIGNoYXJnZXNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0doaW1seXQgTWFyayBJSUktQiBNYWdpdGVrIENvbG9zc3VzIEJ1cm5zJzogJzFGNycsIC8vIHN0YW5kaW5nIGluIE1hZ2l0ZWsgU2xhc2ggZmlyZSBwaWUgc2xpY2VcclxuICAgICdHaGltbHl0IFByb21ldGhldXMgQnVybnMnOiAnMTFDJywgLy8gc3RhbmRpbmcgaW4gb3V0c2lkZSBmaXJlIGNpcmNsZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgSmFycmluZyBCbG93JzogJzM3NkUnLCAvLyB0YW5rIGJ1c3RlciBjb25hbCBjbGVhdmVcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBXaWxkIEZpcmUgQmVhbSc6ICczNzcyJywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ0doaW1seXQgU2Nob2xhIENvbG9zc3VzIEhvbWluZyBMYXNlcic6ICczODg0JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBNYWdpdGVrIFJheSc6ICczNzZGJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5IZWxsc0xpZCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSGVsbHNMaWQgTnVyaWthYmUgRmlyZSBJSSc6ICcyOTlGJywgLy8gdGFyZ2V0ZWQgY2lyY2xlJ1xyXG4gICAgJ0hlbGxzTGlkIE1hZ21hJzogJzI4ODInLCAvLyBsaW5lIGF0dGFja3MgZnJvbSB3YWxsXHJcbiAgICAnSGVsbHNMaWQgSGVsbGlzaCBMaW9uIEhvd2xpbmcgV2FpbCc6ICcyOTlEJywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnSGVsbHNMaWQgSGVsbGZpcmUgU2hpa2lnYW1pIEZsdWlkIFN3aW5nJzogJzI5OUUnLCAvLyBjb25hbFxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgMTAwLXRvbnplIFN3aW5nJzogJzI3QkUnLCAvLyB1bnRlbGVncmFwaGVkIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgVm9sY2FuaWMgRGVicmlzJzogJzI3QzUnLCAvLyBhbWJpZW50IGNpcmNsZXMgb24gZmxvb3JcclxuICAgICdIZWxsc0xpZCBPdGFrZS1tYXJ1IDEwLXRvbnplIFNsYXNoJzogJzI3QkYnLCAvLyB0ZWxlZ3JhcGhlZCBjb25hbFxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgRGlzcm9iZSc6ICcyN0MyJywgLy8gc21hbGwgY2lyY2xlcyBhcHBlYXJpbmcgYWZ0ZXIgcHJleSBtYXJrZXJcclxuICAgICdIZWxsc0xpZCBPdGFrZS1tYXJ1IFN0b25lIEN1ZGdlbCc6ICcyN0MzJywgLy8gc3BpbiBhdHRhY2sgd2hlbiB0b3VjaGluZyBzd29yZC9zaGllbGRcclxuICAgICdIZWxsc0xpZCBPdGFrZS1tYXJ1IExpcXVpZCBDYXJhcGFjZSc6ICcyN0MwJywgLy8gYmVpbmcgdG9vIGNsb3NlIHRvIGJvc3MgZHVyaW5nIHByZXkgRGlzcm9iZSBwaGFzZVxyXG4gICAgJ0hlbGxzTGlkIEhlbGxpc2ggWXVtZW1pIEJsYW5rZXQgVGh1bmRlcic6ICcyMUIzJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnSGVsbHNMaWQgS2FqYSBFbGVjdHJvZ2VuZXNpcyc6ICcxMUMyJywgLy8gdGFyZ2V0ZWQgbGFyZ2UgY2lyY2xlLCBieSBib3RoIEthamEgYW5kIEthamEgb2YgdGhlIFNldmVuIEZsYW1lc1xyXG4gICAgJ0hlbGxzTGlkIEthbWFpdGFjaGkgQ2lyY2xpbmcgV2luZHMnOiAnMjdDOCcsIC8vIHdpbmQgZG9udXRcclxuICAgICdIZWxsc0xpZCBLYW1haXRhY2hpIFJvbGxpbmcgV2luZHMnOiAnMjdDOScsIC8vIGxhcmdlIGJhY2svZnJvbnQgbGluZVxyXG4gICAgJ0hlbGxzTGlkIEthbWFpdGFjaGkgVGhlIFBhdGllbnQgQmxhZGUnOiAnMjdDNycsIC8vIGZyb250IDE4MCBjbGVhdmVcclxuICAgICdIZWxsc0xpZCBLYW1haXRhY2hpIE5vcnRoZXJseSc6ICcyN0NEJywgLy8gdW50YXJnZXRhYmxlIHRyaWdnZXJlZCB3aW5kIHNwcml0ZSBrbm9ja2JhY2sgZXhwbG9zaW9uXHJcbiAgICAnSGVsbHNMaWQgS2FtYWl0YWNoaSBUc3VtdWppLUthemUgVG9ybmFkbyc6ICcyNDdFJywgLy8gbGFyZ2UgdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnSGVsbHNMaWQgS2FtYWl0YWNoaSBMYXRlIEhhcnZlc3QnOiAnMjdDQycsIC8vIGRhc2hlc1xyXG4gICAgJ0hlbGxzTGlkIEthbWFpdGFjaGkgR2FsZSBUaGUgU3Rvcm1cXCdzIEdyaXAnOiAnMjdDRScsIC8vIHN0YW5kaW5nIGluIHRoZSB0b3JuYWRvXHJcbiAgICAnSGVsbHNMaWQgU2hpa2lnYW1pIG9mIHRoZSBTcHJpbmcgQnJpbmUgQm9tYic6ICcyOUEwJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnSGVsbHNMaWQgU3RpbGx3aW5kIE51ZSBUd2lzdGVyJzogJzI5NjUnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBCb2x0c3Rvcm0gTnVlIFNjeXRoZSBUYWlsJzogJzJBMDgnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBCb2x0c3Rvcm0gTnVlIEJ1dGNoZXInOiAnMjk2NCcsIC8vIGxhcmdlIHdpZGUgY29uYWxcclxuICAgICdIZWxsc0xpZCBCb2x0c3Rvcm0gTnVlIFNwYXJrJzogJzI5NjQnLCAvLyBkb251dCB3aXRoIGEgdmVyeSBsYXJnZSBob2xlXHJcbiAgICAnSGVsbHNMaWQgR2VuYnUgU2luaXN0ZXIgVGlkZSc6ICcyN0Q1JywgLy8gbGlnaHQgdXAgYXJyb3cgaGV4ZXNcclxuICAgICdIZWxsc0xpZCBHZW5idSBIZWxsIG9mIFdhdGVyJzogJzI3RDAnLCAvLyBjcm9zcyBhb2VcclxuICAgICdIZWxsc0xpZCBHZW5idSBTaGVsbCBTaG93ZXInOiAnMjg1MCcsIC8vIGxpZ2h0IHVwIGhleCBzcXVhcmVzIGR1cmluZyBDaGVsb25pYW4gR2F0ZSBtaWRwaGFzZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnSGVsbHNMaWQgR2VuYnUgSGVsbCBvZiBXYXN0ZSc6ICcyN0QyJywgLy8gdmVyeSBsYXJnZSBzcHJlYWQgbWFya2VyXHJcbiAgICAnSGVsbHNMaWQgUmVpc2VuIFRhdHN1bm9rbyBIeWRyYXRlJzogJzIxMzQnLCAvLyB1bnRlbGVncmFwaGVkIGNsZWF2ZSBmcm9tIHNuYWtlIG1vYlxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuS3VnYW5lQ2FzdGxlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdLdWdhbmUgQ2FzdGxlIFRlbmthIEdva2tlbic6ICcyMzI5JywgLy8gRnJvbnRhbCBjb25lIEFvRSwgIEpvaSBCbGFkZSB0cmFzaCwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgS2Vua2kgUmVsZWFzZSBUcmFzaCc6ICcyMzMwJywgLy8gQ2hhcmlvdCBBb0UsIEpvaSBLaXlvZnVzYSB0cmFzaCwgYmVmb3JlIGJvc3MgMVxyXG5cclxuICAgICdLdWdhbmUgQ2FzdGxlIENsZWFyb3V0JzogJzFFOTInLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBadWlrby1NYXJ1LCBib3NzIDFcclxuICAgICdLdWdhbmUgQ2FzdGxlIEhhcmEtS2lyaSAxJzogJzFFOTYnLCAvLyBHaWFudCBjaXJjbGUgQW9FLCBIYXJha2lyaSBLb3NobywgYm9zcyAxXHJcbiAgICAnS3VnYW5lIENhc3RsZSBIYXJhLUtpcmkgMic6ICcyNEY5JywgLy8gR2lhbnQgY2lyY2xlIEFvRSwgSGFyYWtpcmkgS29zaG8sIGJvc3MgMVxyXG5cclxuICAgICdLdWdhbmUgQ2FzdGxlIEp1amkgU2h1cmlrZW4gMSc6ICcyMzJEJywgLy8gTGluZSBBb0UsIEthcmFrdXJpIE9ubWl0c3UgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdLdWdhbmUgQ2FzdGxlIDEwMDAgQmFyYnMnOiAnMjE5OCcsIC8vIExpbmUgQW9FLCBKb2kgS29qYSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG5cclxuICAgICdLdWdhbmUgQ2FzdGxlIEp1amkgU2h1cmlrZW4gMic6ICcxRTk4JywgLy8gTGluZSBBb0UsIERvanVuIE1hcnUsIGJvc3MgMlxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgVGF0YW1pLUdhZXNoaSc6ICcxRTlEJywgLy8gRmxvb3IgdGlsZSBsaW5lIGF0dGFjaywgRWxraXRlIE9ubWl0c3UsIGJvc3MgMlxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSnVqaSBTaHVyaWtlbiAzJzogJzFFQTAnLCAvLyBMaW5lIEFvRSwgRWxpdGUgT25taXRzdSwgYm9zcyAyXHJcblxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgQXV0byBDcm9zc2Jvdyc6ICcyMzMzJywgLy8gRnJvbnRhbCBjb25lIEFvRSwgS2FyYWt1cmkgSGFueWEgdHJhc2gsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSGFyYWtpcmkgMyc6ICcyM0M5JywgLy8gR2lhbnQgQ2lyY2xlIEFvRSwgSGFyYWtpcmkgIEhhbnlhIHRyYXNoLCBhZnRlciBib3NzIDJcclxuXHJcbiAgICAnS3VnYW5lIENhc3RsZSBJYWktR2lyaSc6ICcxRUEyJywgLy8gQ2hhcmlvdCBBb0UsIFlvamltYm8sIGJvc3MgM1xyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgRnJhZ2lsaXR5JzogJzFFQUEnLCAvLyBDaGFyaW90IEFvRSwgSW5vc2hpa2FjaG8sIGJvc3MgM1xyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgRHJhZ29uZmlyZSc6ICcxRUFCJywgLy8gTGluZSBBb0UsIERyYWdvbiBIZWFkLCBib3NzIDNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSXNzZW4nOiAnMUU5NycsIC8vIEluc3RhbnQgZnJvbnRhbCBjbGVhdmUsIERvanVuIE1hcnUsIGJvc3MgMlxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgQ2xvY2t3b3JrIFJhaXRvbic6ICcxRTlCJywgLy8gTGFyZ2UgbGlnaHRuaW5nIHNwcmVhZCBjaXJjbGVzLCBEb2p1biBNYXJ1LCBib3NzIDJcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnS3VnYW5lIENhc3RsZSBIZWxtIENyYWNrJzogJzFFOTQnLCAvLyBTdGFjayBtYXJrZXIsIFp1aWtvIE1hcnUsIGJvc3MgMVxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IGNhbiBNdWNhbCBHbG9iICgxRjczKSBoaXQgbXVsdGlwbGUgcGVvcGxlP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaGlzdWlPZlRoZVZpb2xldFRpZGVzLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTaGlzdWkgVmlvbGV0IENvcmFsc2hlbGwgQnViYmxlIFNob3dlcic6ICcyMzYnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnU2hpc3VpIEhpa2FnaXJpIERlZmlicmlsbGF0ZSc6ICcxMUMxJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnU2hpc3VpIEJ1cmllZCBNb25rZmlzaCBGaXNoIE91dCBPZiBXYXRlcic6ICcxRjg4JywgLy8gdW50ZWxlZ3JhcGhlZCB0cmlnZ2VyZWQgbW9ua2Zpc2ggbWluZVxyXG4gICAgJ1NoaXN1aSBBbmdvIEZsb3VuZGVyJzogJzkxRicsIC8vIGxpbmUgYW9lXHJcbiAgICAnU2hpc3VpIEhpa2FnaXJpIEVsZWN0cm9nZW5lc2lzJzogJzExQzInLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdTaGlzdWkgQW1pa2lyaSBTaHVjayc6ICcxRjc1JywgLy8gbm90IGtpbGxpbmcgQW1pa2lyaSdzIGxlZ1xyXG4gICAgJ1NoaXN1aSBQYWxhY2UgR3VhcmQgSGVhcnRzdG9wcGVyJzogJzM2MicsIC8vIGRyYWdvb24gZ3VhcmQgbGluZSBhb2VcclxuICAgICdTaGlzdWkgUGFsYWNlIEd1YXJkIEZpcmUgQXJyb3cnOiAnMUY4OScsIC8vIGFtYmllbnQgdW50YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnU2hpc3VpIENhcHRhaW4gT2YgVGhlIEd1YXJkIFRlbmthIEdva2VuJzogJzIzQjcnLCAvLyB3aWRlIGNvbmFsXHJcbiAgICAnU2hpc3VpIFJ1YnkgUHJpbmNlc3MgQ29yaW9saXMgS2ljayc6ICcxRjdCJywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlIChzZWR1Y2UgYWx3YXlzIHBhaXJlZCB3aXRoIHRoaXMpXHJcbiAgICAnU2hpc3VpIFJ1YnkgUHJpbmNlc3MgQWJ5c3NhbCBWb2xjYW5vJzogJzFGN0MnLCAvLyBjZW50ZXJlZCBjaXJjbGUgcGFpcmVkIHdpdGggY2hhc2UgYW9lXHJcbiAgICAnU2hpc3VpIFJ1YnkgUHJpbmNlc3MgR2VvdGhlcm1hbCBGbGF0dWxlbmNlIDEnOiAnMjRENycsIC8vIGNoYXNlIGFvZSBpbml0aWFsXHJcbiAgICAnU2hpc3VpIFJ1YnkgUHJpbmNlc3MgR2VvdGhlcm1hbCBGbGF0dWxlbmNlIDInOiAnMUY3RCcsIC8vIGNoYXNlIGFvZSB4MTBcclxuICAgICdTaGlzdWkgVmlvbGV0IEJvbWJmaXNoIDEwMDAgU3BpbmVzJzogJzFGRjcnLCAvLyByb2FtaW5nIGJvbWJmaXNoIHRyaWdnZXJlZCBjaXJjbGVcclxuICAgICdTaGlzdWkgQmx1ZSBVbmtpdSBGbHVzaCc6ICcyMUE0JywgLy8gaW50ZXJydXB0aWJsZSBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdTaGlzdWkgU2hpc3VpIFlvaGkgQmxhY2sgVGlkZSc6ICcxRjgxJywgLy8gcmVhcHBlYXJhbmNlIGFmdGVyIHRoaWNrIGZvZ1xyXG4gICAgJ1NoaXN1aSBTaGlzdWkgWW9oaSBDaHVybiBCdWJibGUgQnVyc3QnOiAnMUY4NCcsIC8vIG5vdCBraWxsaW5nIGJ1YmJsZSBkdXJpbmcgdGhpY2sgZm9nXHJcbiAgICAnU2hpc3VpIFNoaXN1aSBZb2hpIE5haXNoaS1Oby1LYW1pIEJpdGUgQW5kIFJ1bic6ICcxRjg1JywgLy8gbm90IGtpbGxpbmcgc2hhcmsgYWRkXHJcbiAgICAnU2hpc3VpIFNoaXN1aSBZb2hpIE5haXNoaS1Oby1KbyBCaXRlIEFuZCBSdW4nOiAnMUY4NicsIC8vIG5vdCBraWxsaW5nIHNtYWxsIHNoYXJrIGFkZFxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAvLyBOb3RlOiBEcm9wc3kgKDIxMywgd2l0aCBjb3VudCBmaWVsZCkgaXMgdGhlIGVmZmVjdCBkdXJpbmcgU2hpc3VpIFlvaGkgVGhpY2sgRm9nXHJcbiAgICAnU2hpc3VpIERyb3BzeSc6ICcxMjEnLCAvLyBzdGFuZGluZyBpbiBLYW1pa2lyaSBkaWdlc3RpdmUgZmx1aWQgcHVkZGxlXHJcbiAgICAnU2hpc3VpIEh5c3RlcmlhJzogJzEyOCcsIC8vIGZhaWxpbmcgU2hpc3VpIFlvaGkgTWFkIFN0YXJlICgxRjgyKVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnU2hpc3VpIEFtaWtpcmkgRGlnZXN0JzogJzFGNzknLCAvLyBLYW1pa2lyaSBkaWdlc3RpdmUgZmx1aWQgcHVkZGxlIGxhbmRpbmdcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVNpcmVuc29uZ1NlYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU2lyZW5zb25nIEFuY2llbnQgWW1pciBIZWFkIFNuYXRjaCc6ICcyMzUzJywgLy8gZnJvbnRhbCBjb25hbFxyXG4gICAgJ1NpcmVuc29uZyBSZWZsZWN0aW9uIG9mIEthcmxhYm9zIFRhaWwgU2NyZXcnOiAnMTJCNycsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1NpcmVuc29uZyBMdWdhdCBBbW9ycGhvdXMgQXBwbGF1c2UnOiAnMUY1NicsIC8vIGZyb250YWwgMTgwIGNsZWF2ZVxyXG4gICAgJ1NpcmVuc29uZyBMdWdhdCBDb25jdXNzaXZlIE9zY2lsbGF0aW9uJzogJzFGNUInLCAvLyA1IG9yIDcgY2lyY2xlc1xyXG4gICAgJ1NpcmVuc29uZyBUaGUgSmFuZSBHdXkgQmFsbCBvZiBNYWxpY2UnOiAnMUY2QScsIC8vIGFtYmllbnQgY2Fubm9uIGNpcmNsZVxyXG4gICAgJ1NpcmVuc29uZyBEYXJrJzogJzE5REYnLCAvLyBTa2lubGVzcyBTa2lwcGVyIC8gRmxlc2hsZXNzIENhcHRpdmUgdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnU2lyZW5zb25nIFRoZSBHb3Zlcm5vciBTaGFkb3dzdHJpa2UnOiAnMUY1RCcsIC8vIHN0YW5kaW5nIGluIHNoYWRvd3NcclxuICAgICdTaXJlbnNvbmcgVW5kZWFkIFdhcmRlbiBNYXJjaCBvZiB0aGUgRGVhZCc6ICcyMzUxJywgLy8gZnJvbnRhbCBjb25hbFxyXG4gICAgJ1NpcmVuc29uZyBGbGVzaGxlc3MgQ2FwdGl2ZSBGbG9vZCc6ICcyMThCJywgLy8gY2VudGVyZWQgY2lyY2xlIGFmdGVyIHNlZHVjdGl2ZSBzY3JlYW1cclxuICAgICdTaXJlbnNvbmcgTG9yZWxlaSBWb2lkIFdhdGVyIElJSSc6ICcxRjY4JywgLy8gbGFyZ2UgdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TYWludE1vY2lhbm5lc0FyYm9yZXR1bUhhcmQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgTXVkc3RyZWFtJzogJzMwRDknLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBJbW1hY3VsYXRlIEFwYSB0cmFzaCwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgU2lsa2VuIFNwcmF5JzogJzMzODUnLCAvLyBSZWFyIGNvbmUgQW9FLCBXaXRoZXJlZCBCZWxsYWRvbm5hIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBNdWRkeSBQdWRkbGVzJzogJzMwREEnLCAvLyBTbWFsbCB0YXJnZXRlZCBjaXJjbGUgQW9FcywgRG9ycG9ra3VyIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBPZGlvdXMgQWlyJzogJzJFNDknLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBOdWxsY2h1LCBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFNMdWRnZSBCb21iJzogJzJFNEUnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FcywgTnVsbGNodSwgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBPZGlvdXMgQXRtb3NwaGVyZSc6ICcyRTUxJywgLy8gQ2hhbm5lbGVkIDMvNCBhcmVuYSBjbGVhdmUsIE51bGxjaHUsIGJvc3MgMVxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgQ3JlZXBpbmcgSXZ5JzogJzMxQTUnLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBXaXRoZXJlZCBLdWxhayB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgUm9ja3NsaWRlJzogJzMxMzQnLCAvLyBMaW5lIEFvRSwgU2lsdCBHb2xlbSwgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBFYXJ0aHF1YWtlIElubmVyJzogJzMxMkUnLCAvLyBDaGFyaW90IEFvRSwgTGFraGFtdSwgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBFYXJ0aHF1YWtlIE91dGVyJzogJzMxMkYnLCAvLyBEeW5hbW8gQW9FLCBMYWtoYW11LCBib3NzIDJcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEVtYmFsbWluZyBFYXJ0aCc6ICczMUE2JywgLy8gTGFyZ2UgQ2hhcmlvdCBBb0UsIE11ZGR5IE1hdGEsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgUXVpY2ttaXJlJzogJzMxMzYnLCAvLyBTZXdhZ2Ugc3VyZ2UgYXZvaWRlZCBvbiBwbGF0Zm9ybXMsIFRva2thcGNoaSwgYm9zcyAzXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBRdWFnbWlyZSBQbGF0Zm9ybXMnOiAnMzEzOScsIC8vIFF1YWdtaXJlIGV4cGxvc2lvbiBvbiBwbGF0Zm9ybXMsIFRva2thcGNoaSwgYm9zcyAzXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBGZWN1bGVudCBGbG9vZCc6ICczMTNDJywgLy8gVGFyZ2V0ZWQgdGhpbiBjb25lIEFvRSwgVG9ra2FwY2hpLCBib3NzIDNcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIENvcnJ1cHR1cmUnOiAnMzNBMCcsIC8vIE11ZCBTbGltZSBleHBsb3Npb24sIGJvc3MgMy4gKE5vIGV4cGxvc2lvbiBpZiBkb25lIGNvcnJlY3RseS4pXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFNlZHVjZWQnOiAnM0RGJywgLy8gR2F6ZSBmYWlsdXJlLCBXaXRoZXJlZCBCZWxsYWRvbm5hIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBQb2xsZW4nOiAnMTMnLCAvLyBTbHVkZ2UgcHVkZGxlcywgTnVsbGNodSwgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBUcmFuc2ZpZ3VyYXRpb24nOiAnNjQ4JywgLy8gUm9seS1Qb2x5IEFvRSBjaXJjbGUgZmFpbHVyZSwgQkxvb21pbmcgQmlsb2tvIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBIeXN0ZXJpYSc6ICcxMjgnLCAvLyBHYXplIGZhaWx1cmUsIExha2hhbXUsIGJvc3MgMlxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgU3RhYiBXb3VuZCc6ICc0NUQnLCAvLyBBcmVuYSBvdXRlciB3YWxsIGVmZmVjdCwgYm9zcyAyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFRhcHJvb3QnOiAnMkU0QycsIC8vIExhcmdlIG9yYW5nZSBzcHJlYWQgY2lyY2xlcywgTnVsbGNodSwgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBFYXJ0aCBTaGFrZXInOiAnMzEzMScsIC8vIEVhcnRoIFNoYWtlciwgTGFraGFtdSwgYm9zcyAyXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgRmF1bHQgV2FycmVuJzogJzJFNEEnLCAvLyBTdGFjayBtYXJrZXIsIE51bGxjaHUsIGJvc3MgMVxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVTd2FsbG93c0NvbXBhc3MsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgSXZ5IEZldHRlcnMnOiAnMkMwNCcsIC8vIENpcmNsZSBncm91bmQgQW9FLCBTYWkgVGFpc3VpIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBXaWxkc3dpbmQgMSc6ICcyQzA1JywgLy8gVG9ybmFkbyBncm91bmQgQW9FLCBwbGFjZWQgYnkgU2FpIFRhaXN1aSB0cmFzaCwgYmVmb3JlIGJvc3MgMVxyXG5cclxuICAgICdTd2FsbG93cyBDb21wYXNzIFlhbWEtS2FndXJhJzogJzJCOTYnLCAvLyBGcm9udGFsIGxpbmUgQW9FLCBPdGVuZ3UsIGJvc3MgMVxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgRmxhbWVzIE9mIEhhdGUnOiAnMkI5OCcsIC8vIEZpcmUgb3JiIGV4cGxvc2lvbnMsIGJvc3MgMVxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgQ29uZmxhZ3JhdGUnOiAnMkI5OScsIC8vIENvbGxpc2lvbiB3aXRoIGZpcmUgb3JiLCBib3NzIDFcclxuXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBVcHdlbGwnOiAnMkMwNicsIC8vIFRhcmdldGVkIGNpcmNsZSBncm91bmQgQW9FLCBTYWkgVGFpc3VpIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCYWQgQnJlYXRoJzogJzJDMDcnLCAvLyBGcm9udGFsIGNsZWF2ZSwgSmlubWVuanUgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBHcmVhdGVyIFBhbG0gMSc6ICcyQjlEJywgLy8gSGFsZiBhcmVuYSByaWdodCBjbGVhdmUsIERhaWRhcmFib3RjaGksIGJvc3MgMlxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgR3JlYXRlciBQYWxtIDInOiAnMkI5RScsIC8vIEhhbGYgYXJlbmEgbGVmdCBjbGVhdmUsIERhaWRhcmFib3RjaGksIGJvc3MgMlxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgVHJpYnV0YXJ5JzogJzJCQTAnLCAvLyBUYXJnZXRlZCB0aGluIGNvbmFsIGdyb3VuZCBBb0VzLCBEYWlkYXJhYm90Y2hpLCBib3NzIDJcclxuXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBXaWxkc3dpbmQgMic6ICcyQzA2JywgLy8gQ2lyY2xlIGdyb3VuZCBBb0UsIGVudmlyb25tZW50LCBhZnRlciBib3NzIDJcclxuICAgICdTd2FsbG93cyBDb21wYXNzIFdpbGRzd2luZCAzJzogJzJDMDcnLCAvLyBDaXJjbGUgZ3JvdW5kIEFvRSwgcGxhY2VkIGJ5IFNhaSBUYWlzdWkgdHJhc2gsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgRmlsb3BsdW1lcyc6ICcyQzc2JywgLy8gRnJvbnRhbCByZWN0YW5nbGUgQW9FLCBEcmFnb24gQmkgRmFuZyB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcblxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgQm90aCBFbmRzIDEnOiAnMkJBOCcsIC8vIENoYXJpb3QgQW9FLCBRaXRpYW4gRGFzaGVuZywgYm9zcyAzXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCb3RoIEVuZHMgMic6ICcyQkE5JywgLy8gRHluYW1vIEFvRSwgUWl0aWFuIERhc2hlbmcsIGJvc3MgM1xyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgQm90aCBFbmRzIDMnOiAnMkJBRScsIC8vIENoYXJpb3QgQW9FLCBTaGFkb3cgT2YgVGhlIFNhZ2UsIGJvc3MgM1xyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgQm90aCBFbmRzIDQnOiAnMkJBRicsIC8vIER5bmFtbyBBb0UsIFNoYWRvdyBPZiBUaGUgU2FnZSwgYm9zcyAzXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBFcXVhbCBPZiBIZWF2ZW4nOiAnMkJCNCcsIC8vIFNtYWxsIGNpcmNsZSBncm91bmQgQW9FcywgUWl0aWFuIERhc2hlbmcsIGJvc3MgM1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBIeXN0ZXJpYSc6ICcxMjgnLCAvLyBHYXplIGF0dGFjayBmYWlsdXJlLCBPdGVuZ3UsIGJvc3MgMVxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgQmxlZWRpbmcnOiAnMTEyRicsIC8vIFN0ZXBwaW5nIG91dHNpZGUgdGhlIGFyZW5hLCBib3NzIDNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgTWlyYWdlJzogJzJCQTInLCAvLyBQcmV5LWNoYXNpbmcgcHVkZGxlcywgRGFpZGFyYWJvdGNoaSwgYm9zcyAyXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBNb3VudGFpbiBGYWxscyc6ICcyQkE1JywgLy8gQ2lyY2xlIHNwcmVhZCBtYXJrZXJzLCBEYWlkYXJhYm90Y2hpLCBib3NzIDJcclxuICAgICdTd2FsbG93cyBDb21wYXNzIFRoZSBMb25nIEVuZCc6ICcyQkE3JywgLy8gTGFzZXIgdGV0aGVyLCBRaXRpYW4gRGFzaGVuZyAgYm9zcyAzXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBUaGUgTG9uZyBFbmQgMic6ICcyQkFEJywgLy8gTGFzZXIgVGV0aGVyLCBTaGFkb3dzIE9mIFRoZSBTYWdlLCBib3NzIDNcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBGaXZlIEZpbmdlcmVkIFB1bmlzaG1lbnQgMSc6ICcyQkFCJywgLy8gU3RhY2sgbWFya2VyLCBib3NzIDNcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEZpdmUgRmluZ2VyZWQgUHVuaXNobWVudCAyJzogJzJCQjAnLCAvLyBTdGFjayBtYXJrZXIsIGJvc3MgM1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gU3RhbmRpbmcgaW4gdGhlIGxha2UsIERpYWRhcmFib3RjaGksIGJvc3MgMlxyXG4gICAgICBpZDogJ1N3YWxsb3dzIENvbXBhc3MgU2l4IEZ1bG1zIFVuZGVyJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzIzNycgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlVGVtcGxlT2ZUaGVGaXN0LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdUZW1wbGUgRmlyZSBCcmVhayc6ICcyMUVEJywgLy8gQ29uYWwgQW9FLCBCbG9vZGdsaWRlciBNb25rIHRyYXNoXHJcbiAgICAnVGVtcGxlIFJhZGlhbCBCbGFzdGVyJzogJzFGRDMnLCAvLyBDaXJjbGUgQW9FLCBib3NzIDFcclxuICAgICdUZW1wbGUgV2lkZSBCbGFzdGVyJzogJzFGRDQnLCAvLyBDb25hbCBBb0UsIGJvc3MgMVxyXG4gICAgJ1RlbXBsZSBDcmlwcGxpbmcgQmxvdyc6ICcyMDE2JywgLy8gTGluZSBBb0VzLCBlbnZpcm9ubWVudGFsLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnVGVtcGxlIEJyb2tlbiBFYXJ0aCc6ICcyMzZFJywgLy8gQ2lyY2xlIEFvRSwgU2luZ2hhIHRyYXNoXHJcbiAgICAnVGVtcGxlIFNoZWFyJzogJzFGREQnLCAvLyBEdWFsIGNvbmFsIEFvRSwgYm9zcyAyXHJcbiAgICAnVGVtcGxlIENvdW50ZXIgUGFycnknOiAnMUZFMCcsIC8vIFJldGFsaWF0aW9uIGZvciBpbmNvcnJlY3QgZGlyZWN0aW9uIGFmdGVyIEtpbGxlciBJbnN0aW5jdCwgYm9zcyAyXHJcbiAgICAnVGVtcGxlIFRhcGFzJzogJycsIC8vIFRyYWNraW5nIGNpcmN1bGFyIGdyb3VuZCBBb0VzLCBib3NzIDJcclxuICAgICdUZW1wbGUgSGVsbHNlYWwnOiAnMjAwRicsIC8vIFJlZC9CbHVlIHN5bWJvbCBmYWlsdXJlLCBib3NzIDJcclxuICAgICdUZW1wbGUgUHVyZSBXaWxsJzogJzIwMTcnLCAvLyBDaXJjbGUgQW9FLCBTcGlyaXQgRmxhbWUgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdUZW1wbGUgTWVnYWJsYXN0ZXInOiAnMTYzJywgLy8gQ29uYWwgQW9FLCBDb2V1cmwgUHJhbmEgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdUZW1wbGUgV2luZGJ1cm4nOiAnMUZFOCcsIC8vIENpcmNsZSBBb0UsIFR3aXN0ZXIgd2luZCwgYm9zcyAzXHJcbiAgICAnVGVtcGxlIEh1cnJpY2FuZSBLaWNrJzogJzFGRTUnLCAvLyAyNzAtZGVncmVlIGZyb250YWwgQW9FLCBib3NzIDNcclxuICAgICdUZW1wbGUgU2lsZW50IFJvYXInOiAnMUZFQicsIC8vIEZyb250YWwgbGluZSBBb0UsIGJvc3MgM1xyXG4gICAgJ1RlbXBsZSBNaWdodHkgQmxvdyc6ICcxRkVBJywgLy8gQ29udGFjdCB3aXRoIGNvZXVybCBoZWFkLCBib3NzIDNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1RlbXBsZSBIZWF0IExpZ2h0bmluZyc6ICcxRkQ3JywgLy8gUHVycGxlIHNwcmVhZCBjaXJjbGVzLCBib3NzIDFcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUJ1cm4sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RoZSBCdXJuIEZhbGxpbmcgUm9jayc6ICczMUEzJywgLy8gRW52aXJvbm1lbnRhbCBsaW5lIEFvRVxyXG4gICAgJ1RoZSBCdXJuIEFldGhlcmlhbCBCbGFzdCc6ICczMjhCJywgLy8gTGluZSBBb0UsIEt1a3Vsa2FuIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gTW9sZS1hLXdoYWNrJzogJzMyOEQnLCAvLyBDaXJjbGUgQW9FLCBEZXNlcnQgRGVzbWFuIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gSGVhZCBCdXR0JzogJzMyOEUnLCAvLyBTbWFsbCBjb25hbCBBb0UsIERlc2VydCBEZXNtYW4gdHJhc2hcclxuICAgICdUaGUgQnVybiBTaGFyZGZhbGwnOiAnMzE5MScsIC8vIFJvb213aWRlIEFvRSwgTG9TIGZvciBzYWZldHksIEhlZGV0ZXQsIGJvc3MgMVxyXG4gICAgJ1RoZSBCdXJuIERpc3NvbmFuY2UnOiAnMzE5MicsIC8vIERvbnV0IEFvRSwgSGVkZXRldCwgYm9zcyAxXHJcbiAgICAnVGhlIEJ1cm4gQ3J5c3RhbGxpbmUgRnJhY3R1cmUnOiAnMzE5NycsIC8vIENpcmNsZSBBb0UsIERpbSBDcnlzdGFsLCBib3NzIDFcclxuICAgICdUaGUgQnVybiBSZXNvbmFudCBGcmVxdWVuY3knOiAnMzE5OCcsIC8vIENpcmNsZSBBb0UsIERpbSBDcnlzdGFsLCBib3NzIDFcclxuICAgICdUaGUgQnVybiBSb3Rvc3dpcGUnOiAnMzI5MScsIC8vIEZyb250YWwgY29uZSBBb0UsIENoYXJyZWQgRHJlYWRuYXVnaHQgdHJhc2hcclxuICAgICdUaGUgQnVybiBXcmVja2luZyBCYWxsJzogJzMyOTInLCAvLyBDaXJjbGUgQW9FLCBDaGFycmVkIERyZWFkbmF1Z2h0IHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gU2hhdHRlcic6ICczMjk0JywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgQ2hhcnJlZCBEb2JseW4gdHJhc2hcclxuICAgICdUaGUgQnVybiBBdXRvLUNhbm5vbnMnOiAnMzI5NScsIC8vIExpbmUgQW9FLCBDaGFycmVkIERyb25lIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gU2VsZi1EZXRvbmF0ZSc6ICczMjk2JywgLy8gQ2lyY2xlIEFvRSwgQ2hhcnJlZCBEcm9uZSB0cmFzaFxyXG4gICAgJ1RoZSBCdXJuIEZ1bGwgVGhyb3R0bGUnOiAnMkQ3NScsIC8vIExpbmUgQW9FLCBEZWZlY3RpdmUgRHJvbmUsIGJvc3MgMlxyXG4gICAgJ1RoZSBCdXJuIFRocm90dGxlJzogJzJENzYnLCAvLyBMaW5lIEFvRSwgTWluaW5nIERyb25lIGFkZHMsIGJvc3MgMlxyXG4gICAgJ1RoZSBCdXJuIEFkaXQgRHJpdmVyJzogJzJENzgnLCAvLyBMaW5lIEFvRSwgUm9jayBCaXRlciBhZGRzLCBib3NzIDJcclxuICAgICdUaGUgQnVybiBUcmVtYmxvcic6ICczMjk3JywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgVmVpbGVkIEdpZ2F3b3JtIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gRGVzZXJ0IFNwaWNlJzogJzMyOTgnLCAvLyBUaGUgZnJvbnRhbCBjbGVhdmVzIG11c3QgZmxvd1xyXG4gICAgJ1RoZSBCdXJuIFRveGljIFNwcmF5JzogJzMyOUEnLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBHaWdhd29ybSBTdGFsa2VyIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gVmVub20gU3ByYXknOiAnMzI5QicsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIEdpZ2F3b3JtIFN0YWxrZXIgdHJhc2hcclxuICAgICdUaGUgQnVybiBXaGl0ZSBEZWF0aCc6ICczMTQzJywgLy8gUmVhY3RpdmUgZHVyaW5nIGludnVsbmVyYWJpbGl0eSwgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gICAgJ1RoZSBCdXJuIEZvZyBQbHVtZSAxJzogJzMxNDUnLCAvLyBTdGFyIEFvRSwgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gICAgJ1RoZSBCdXJuIEZvZyBQbHVtZSAyJzogJzMxNDYnLCAvLyBMaW5lIEFvRXMgYWZ0ZXIgc3RhcnMsIE1pc3QgRHJhZ29uLCBib3NzIDNcclxuICAgICdUaGUgQnVybiBDYXV0ZXJpemUnOiAnMzE0OCcsIC8vIExpbmUvU3dvb3AgQW9FLCBNaXN0IERyYWdvbiwgYm9zcyAzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVGhlIEJ1cm4gQ29sZCBGb2cnOiAnMzE0MicsIC8vIEdyb3dpbmcgY2lyY2xlIEFvRSwgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnVGhlIEJ1cm4gTGVhZGVuJzogJzQzJywgLy8gUHVkZGxlIGVmZmVjdCwgYm9zcyAyLiAoQWxzbyBpbmZsaWN0cyAxMUYsIFNsdWRnZS4pXHJcbiAgICAnVGhlIEJ1cm4gUHVkZGxlIEZyb3N0Yml0ZSc6ICcxMUQnLCAvLyBJY2UgcHVkZGxlIGVmZmVjdCwgYm9zcyAzLiAoTk9UIHRoZSBjb25hbC1pbmZsaWN0ZWQgb25lLCAxMEMuKVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVGhlIEJ1cm4gSGFpbGZpcmUnOiAnMzE5NCcsIC8vIEhlYWQgbWFya2VyIGxpbmUgQW9FLCBIZWRldGV0LCBib3NzIDFcclxuICAgICdUaGUgQnVybiBTaGFyZHN0cmlrZSc6ICczMTk1JywgLy8gT3JhbmdlIHNwcmVhZCBoZWFkIG1hcmtlcnMsIEhlZGV0ZXQsIGJvc3MgMVxyXG4gICAgJ1RoZSBCdXJuIENoaWxsaW5nIEFzcGlyYXRpb24nOiAnMzE0RCcsIC8vIEhlYWQgbWFya2VyIGNsZWF2ZSwgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gICAgJ1RoZSBCdXJuIEZyb3N0IEJyZWF0aCc6ICczMTRDJywgLy8gVGFuayBjbGVhdmUsIE1pc3QgRHJhZ29uLCBib3NzIDNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogQWtoIFJoYWkgKDM2MjQpIGlzIG5vdCB1bnVzdWFsIHRvIHRha2UgfjEgaGl0IGZyb20sIHNvIGRvbid0IGxpc3QuXHJcblxyXG4vLyBPMTBOIC0gQWxwaGFzY2FwZSAyLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbHBoYXNjYXBlVjIwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMTBOIEF6dXJlIFdpbmdzJzogJzMxQ0QnLCAvLyBPdXRcclxuICAgICdPMTBOIFN0eWdpYW4gTWF3JzogJzMxQ0YnLCAvLyBJblxyXG4gICAgJ08xME4gSG9ycmlkIFJvYXInOiAnMzFEMycsIC8vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdPMTBOIEJsb29kaWVkIE1hdyc6ICczMUQwJywgLy8gQ29ybmVyc1xyXG4gICAgJ08xME4gQ2F1dGVyaXplJzogJzMyNDEnLCAvLyBkaXZlYm9tYiBhdHRhY2tcclxuICAgICdPMTBOIFNjYXJsZXQgVGhyZWFkJzogJzM2MkInLCAvLyBvcmIgd2FmZmxlIGxpbmVzXHJcbiAgICAnTzEwTiBFeGFmbGFyZSAxJzogJzM2MkQnLFxyXG4gICAgJ08xME4gRXhhZmxhcmUgMic6ICczNjJGJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xME4gRWFydGggU2hha2VyJzogJzMxRDEnLCAvLyBhcyBpdCBzYXlzIG9uIHRoZSB0aW5cclxuICAgICdPMTBOIEZyb3N0IEJyZWF0aCc6ICczM0VFJywgLy8gQW5jaWVudCBEcmFnb24gZnJvbnRhbCBjb25hbFxyXG4gICAgJ08xME4gVGh1bmRlcnN0b3JtJzogJzMxRDInLCAvLyBwdXJwbGUgc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IERlYXRoIEZyb20gQWJvdmUgLyBEZWF0aCBGcm9tIEJlbG93IHRhbmsgZGVidWZmIHByb2JsZW1zXHJcbi8vIFRPRE86IEFraCBSaGFpICgzNjIzKSBpcyBub3QgdW51c3VhbCB0byB0YWtlIH4xIGhpdCBmcm9tLCBzbyBkb24ndCBsaXN0LlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbHBoYXNjYXBlVjIwU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMTBTIEF6dXJlIFdpbmdzJzogJzMxQjInLCAvLyBPdXRcclxuICAgICdPMTBTIFN0eWdpYW4gTWF3JzogJzMxQjAnLCAvLyBJblxyXG4gICAgJ08xMFMgQmxvb2RpZWQgTWF3JzogJzMxQjUnLCAvLyBDb3JuZXJzXHJcbiAgICAnTzEwUyBDcmltc29uIFdpbmdzJzogJzMxQjMnLCAvLyBDYXJkaW5hbHNcclxuICAgICdPMTBTIEhvcnJpZCBSb2FyJzogJzMxQjknLCAvLyB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnTzEwUyBEYXJrIFdhdmUnOiAnMzQxQScsIC8vIEFuY2llbnQgRHJhZ29uIGNpcmNsZSB1cG9uIGRlYXRoXHJcbiAgICAnTzEwUyBDYXV0ZXJpemUnOiAnMzI0MCcsIC8vIGRpdmVib21iIGF0dGFja1xyXG4gICAgJ08xMFMgRmxhbWUgQmxhc3QnOiAnMzFDMScsIC8vIGJvbWJzXHJcbiAgICAnTzEwTiBTY2FybGV0IFRocmVhZCc6ICczNjJCJywgLy8gb3JiIHdhZmZsZSBsaW5lc1xyXG4gICAgJ08xME4gRXhhZmxhcmUgMSc6ICczNjJDJyxcclxuICAgICdPMTBOIEV4YWZsYXJlIDInOiAnMzYyRScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPMTBTIEVhcnRoIFNoYWtlcic6ICczMUI2JywgLy8gYXMgaXQgc2F5cyBvbiB0aGUgdGluXHJcbiAgICAnTzEwUyBGcm9zdCBCcmVhdGgnOiAnMzNGMScsIC8vIEFuY2llbnQgRHJhZ29uIGZyb250YWwgY29uYWxcclxuICAgICdPMTBTIFRodW5kZXJzdG9ybSc6ICczMUI4JywgLy8gcHVycGxlIHNwcmVhZCBtYXJrZXJcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ08xMFMgQ3JpbXNvbiBCcmVhdGgnOiAnMzFCQycsIC8vIGZsYW1lIGJyZWF0aCBkb2RnZWQgd2l0aCBBbmNpZW50IEJ1bHdhcmtcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTzExTiAtIEFscGhhc2NhcGUgMy4wIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxwaGFzY2FwZVYzMCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzExTiBTdGFyYm9hcmQgV2F2ZSBDYW5ub24gMSc6ICczMjgxJywgLy8gaW5pdGlhbCByaWdodCBjbGVhdmVcclxuICAgICdPMTFOIFN0YXJib2FyZCBXYXZlIENhbm5vbiAyJzogJzMyODInLCAvLyBmb2xsb3ctdXAgcmlnaHQgY2xlYXZlXHJcbiAgICAnTzExTiBMYXJib2FyZCBXYXZlIENhbm5vbiAxJzogJzMyODMnLCAvLyBpbml0aWFsIGxlZnQgY2xlYXZlXHJcbiAgICAnTzExTiBMYXJib2FyZCBXYXZlIENhbm5vbiAyJzogJzMyODQnLCAvLyBmb2xsb3ctdXAgbGVmdCBjbGVhdmVcclxuICAgICdPMTFOIEZsYW1lIFRocm93ZXInOiAnMzI3RCcsIC8vIHBpbndoZWVsIGNvbmFsc1xyXG4gICAgJ08xMU4gQ3JpdGljYWwgU3RvcmFnZSBWaW9sYXRpb24nOiAnMzI3OScsIC8vIG1pc3NpbmcgbWlkcGhhc2UgdG93ZXJzXHJcbiAgICAnTzExTiBMZXZlbCBDaGVja2VyIFJlc2V0JzogJzM1QUEnLCAvLyBcImdldCBvdXRcIiBjaXJjbGVcclxuICAgICdPMTFOIExldmVsIENoZWNrZXIgUmVmb3JtYXQnOiAnMzVBOScsIC8vIFwiZ2V0IGluXCIgZG9udXRcclxuICAgICdPMTFOIFJvY2tldCBQdW5jaCBSdXNoJzogJzM2MDYnLCAvLyBnaWFudCBoYW5kIDEvMyBhcmVuYSBsaW5lIGFvZXNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ08xMU4gQnVybnMnOiAnRkEnLCAvLyBzdGFuZGluZyBpbiBiYWxsaXN0aWMgbWlzc2lsZSBmaXJlIHB1ZGRsZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnTzExTiBNZW1vcnkgTG9zcyc6ICc2NUEnLCAvLyBmYWlsaW5nIHRvIGNsZWFuc2UgTG9vcGVyIGluIGEgdG93ZXJcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xMU4gQmFsbGlzdGljIEltcGFjdCc6ICczMjdGJywgLy8gc3ByZWFkIG1hcmtlcnNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ08xMU4gQmxhc3Rlcic6ICczMjgwJywgLy8gdGFuayB0ZXRoZXJcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnTzExTiBFbGVjdHJpYyBTbGlkZSc6ICczMjg1JywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogQXBvY2FseXB0aWMgRXhwbG9zaW9uICgyNzlCKSBmcm9tIG5vdCBoYW5kbGluZyBSb2NrZXQgUHVuY2ggYWRkcywgYnV0XHJcbi8vICAgICAgIGlmIGRvaW5nIHRoaXMgdW5zeW5jZWQsIHlvdSBjYW4ganVzdCBpZ25vcmUgdGhlbSBhbmQgdGhhdCdzIHNwYW1teS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxwaGFzY2FwZVYzMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzExUyBBZnRlcmJ1cm5lcic6ICczMjVFJywgLy8gZm9sbG93dXAgdG8gRmxhbWUgVGhyb3dlclxyXG4gICAgJ08xMVMgUm9ja2V0IFB1bmNoIElyb24gS2lzcyAxJzogJzM2MDgnLCAvLyBSb2NrZXQgUHVuY2ggaGFuZCBjaXJjbGUgZnJvbSBQZXJpcGhlcmFsIFN5bnRoZXNpcyAjMVxyXG4gICAgJ08xMVMgUm9ja2V0IFB1bmNoIElyb24gS2lzcyAyJzogJzM2RjQnLCAvLyBSb2NrZXQgUHVuY2ggaGFuZCBjaXJjbGUgZnJvbSBQZXJpcGhlcmFsIFN5bnRoZXNpcyAjM1xyXG4gICAgJ08xMVMgU3RhcmJvYXJkIFdhdmUgQ2Fubm9uIDEnOiAnMzI2MicsXHJcbiAgICAnTzExUyBTdGFyYm9hcmQgV2F2ZSBDYW5ub24gMic6ICczMjYzJyxcclxuICAgICdPMTFTIExhcmJvYXJkIFdhdmUgQ2Fubm9uIDEnOiAnMzI2NCcsXHJcbiAgICAnTzExUyBMYXJib2FyZCBXYXZlIENhbm5vbiAyJzogJzMyNjUnLFxyXG4gICAgJ08xMVMgU3RhcmJvYXJkIFdhdmUgQ2Fubm9uIFN1cmdlIDEnOiAnMzI2NicsXHJcbiAgICAnTzExUyBTdGFyYm9hcmQgV2F2ZSBDYW5ub24gU3VyZ2UgMic6ICczMjY3JyxcclxuICAgICdPMTFTIExhcmJvYXJkIFdhdmUgQ2Fubm9uIFN1cmdlIDEnOiAnMzI2OCcsXHJcbiAgICAnTzExUyBMYXJib2FyZCBXYXZlIENhbm5vbiBTdXJnZSAyJzogJzMyNjknLFxyXG4gICAgJ08xMVMgQ3JpdGljYWwgRHVhbCBTdG9yYWdlIFZpb2xhdGlvbic6ICczMjU4JywgLy8gZmFpbGluZyBhIHRvd2VyXHJcbiAgICAnTzExUyBMZXZlbCBDaGVja2VyIFJlc2V0JzogJzMyNjgnLCAvLyBcImdldCBvdXRcIiBjaXJjbGVcclxuICAgICdPMTFTIExldmVsIENoZWNrZXIgUmVmb3JtYXQnOiAnMzI2NycsIC8vIFwiZ2V0IGluXCIgZG9udXRcclxuICAgICdPMTFTIEJhbGxpc3RpYyBJbXBhY3QnOiAnMzcwQicsIC8vIGNpcmNsZXMgZHVyaW5nIFBhbnRvIDFcclxuICAgICdPMTFTIEZsYW1lIFRocm93ZXIgUGFudG8nOiAnMzcwNycsIC8vIHBpbndoZWVsIGR1cmluZyBQYW50byAyXHJcbiAgICAnTzExUyBHdWlkZWQgTWlzc2lsZSBLeXJpb3MnOiAnMzcwQScsIC8vIFBhbnRvIDIgYmFpdGVkIGNpcmNsZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnTzExUyBCdXJucyc6ICdGQScsIC8vIHN0YW5kaW5nIGluIGJhbGxpc3RpYyBtaXNzaWxlIGZpcmUgcHVkZGxlXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdPMTFTIE1lbW9yeSBMb3NzJzogJzY1QScsIC8vIGZhaWxpbmcgdG8gY2xlYW5zZSBMb29wZXIgaW4gYSB0b3dlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzExUyBGbGFtZSBUaHJvd2VyJzogJzMyNUQnLCAvLyBwcm90ZWFuIHdhdmVcclxuICAgICdPMTFTIFJvY2tldCBQdW5jaCBSdXNoJzogJzMyNTAnLCAvLyB0ZXRoZXJlZCBSb2NrZXQgUHVuY2ggY2hhcmdlIGZyb20gUGVyaXBoZXJhbCBTeW50aGVzaXMgIzJcclxuICAgICdPMTFTIFdhdmUgQ2Fubm9uIEt5cmlvcyc6ICczNzA1JywgLy8gUGFudG8gMiBkaXN0YW5jZSBiYWl0ZWQgbGFzZXJzXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdPMTFTIE11c3RhcmQgQm9tYic6ICczMjZEJywgLy8gdGFuayBidXN0ZXJcclxuICAgICdPMTFTIEJsYXN0ZXInOiAnMzI2MScsIC8vIHRldGhlcmVkIGV4cGxvc2lvblxyXG4gICAgJ08xMVMgRGlmZnVzZSBXYXZlIENhbm5vbiBLeXJpb3MnOiAnMzcwNScsIC8vIFBhbnRvIDIgdGFuayBsYXNlcnNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMTJOIC0gQWxwaGFzY2FwZSA0LjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbHBoYXNjYXBlVjQwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMTJOIEZsb29kbGlnaHQnOiAnMzMwOScsIC8vIHRhcmdldGVkIGNpcmN1bGFyIGFvZXMgYWZ0ZXIgUHJvZ3JhbSBBbHBoYVxyXG4gICAgJ08xMk4gRWZmaWNpZW50IEJsYWRld29yayc6ICczMkZGJywgLy8gdGVsZWdyYXBoZWQgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnTzEyTiBFZmZpY2llbnQgQmxhZGV3b3JrIFVudGVsZWdyYXBoZWQnOiAnMzJGMycsIC8vIGNlbnRlcmVkIGNpcmNsZSBhZnRlciB0cmFuc2Zvcm1hdGlvblxyXG4gICAgJ08xMk4gT3B0aW1pemVkIEJsaXp6YXJkIElJSSc6ICczMzAzJywgLy8gY3Jvc3MgYW9lXHJcbiAgICAnTzEyTiBTdXBlcmxpbWluYWwgU3RlZWwgMSc6ICczMzA2JywgLy8gc2lkZXMgb2YgdGhlIHJvb21cclxuICAgICdPMTJOIFN1cGVybGltaW5hbCBTdGVlbCAyJzogJzMzMDcnLCAvLyBzaWRlcyBvZiB0aGUgcm9vbVxyXG4gICAgJ08xMk4gQmV5b25kIFN0cmVuZ3RoJzogJzMzMDAnLCAvLyBkb251dFxyXG4gICAgJ08xMk4gT3B0aWNhbCBMYXNlcic6ICczMzIwJywgLy8gbGluZSBhb2UgZnJvbSBleWVcclxuICAgICdPMTJOIE9wdGltaXplZCBTYWdpdHRhcml1cyBBcnJvdyc6ICczMzIzJywgLy8gbGluZSBhb2UgZnJvbSBPbWVnYS1NXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPMTJOIFNvbGFyIFJheSc6ICczMzBGJywgLy8gY2lyY3VsYXIgdGFua2J1c3RlclxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdPMTJOIFNwb3RsaWdodCc6ICczMzBBJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ08xMk4gRGlzY2hhcmdlciBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzJGNicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgdnVsbj86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuLy8gVE9ETzogY291bGQgYWRkIFBhdGNoIHdhcm5pbmdzIGZvciBkb3VibGUvdW5icm9rZW4gdGV0aGVyc1xyXG4vLyBUT0RPOiBIZWxsbyBXb3JsZCBjb3VsZCBoYXZlIGFueSB3YXJuaW5ncyAoc29ycnkpXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxwaGFzY2FwZVY0MFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzEyUzEgU3VwZXJsaW1pbmFsIE1vdGlvbiAxJzogJzMzMzQnLCAvLyAzMDArIGRlZ3JlZSBjbGVhdmUgd2l0aCBiYWNrIHNhZmUgYXJlYVxyXG4gICAgJ08xMlMxIEVmZmljaWVudCBCbGFkZXdvcmsgMSc6ICczMzI5JywgLy8gT21lZ2EtTSBcImdldCBvdXRcIiBjZW50ZXJlZCBhb2UgYWZ0ZXIgc3BsaXRcclxuICAgICdPMTJTMSBFZmZpY2llbnQgQmxhZGV3b3JrIDInOiAnMzMyQScsIC8vIE9tZWdhLU0gXCJnZXQgb3V0XCIgY2VudGVyZWQgYW9lIGR1cmluZyBibGFkZXNcclxuICAgICdPMTJTMSBCZXlvbmQgU3RyZW5ndGgnOiAnMzMyOCcsIC8vIE9tZWdhLU0gXCJnZXQgaW5cIiBjZW50ZXJlZCBhb2UgZHVyaW5nIHNoaWVsZFxyXG4gICAgJ08xMlMxIFN1cGVybGltaW5hbCBTdGVlbCAxJzogJzMzMzAnLCAvLyBPbWVnYS1GIFwiZ2V0IGZyb250L2JhY2tcIiBibGFkZXMgcGhhc2VcclxuICAgICdPMTJTMSBTdXBlcmxpbWluYWwgU3RlZWwgMic6ICczMzMxJywgLy8gT21lZ2EtRiBcImdldCBmcm9udC9iYWNrXCIgYmxhZGVzIHBoYXNlXHJcbiAgICAnTzEyUzEgT3B0aW1pemVkIEJsaXp6YXJkIElJSSc6ICczMzMyJywgLy8gT21lZ2EtRiBnaWFudCBjcm9zc1xyXG4gICAgJ08xMlMyIERpZmZ1c2UgV2F2ZSBDYW5ub24nOiAnMzM2OScsIC8vIGJhY2svc2lkZXMgbGFzZXJzXHJcbiAgICAnTzEyUzIgUmlnaHQgQXJtIFVuaXQgSHlwZXIgUHVsc2UgMSc6ICczMzVBJywgLy8gUm90YXRpbmcgQXJjaGl2ZSBQZXJpcGhlcmFsIGxhc2Vyc1xyXG4gICAgJ08xMlMyIFJpZ2h0IEFybSBVbml0IEh5cGVyIFB1bHNlIDInOiAnMzM1QicsIC8vIFJvdGF0aW5nIEFyY2hpdmUgUGVyaXBoZXJhbCBsYXNlcnNcclxuICAgICdPMTJTMiBSaWdodCBBcm0gVW5pdCBDb2xvc3NhbCBCbG93JzogJzMzNUYnLCAvLyBFeHBsb2RpbmcgQXJjaGl2ZSBBbGwgaGFuZHNcclxuICAgICdPMTJTMiBMZWZ0IEFybSBVbml0IENvbG9zc2FsIEJsb3cnOiAnMzM2MCcsIC8vIEV4cGxvZGluZyBBcmNoaXZlIEFsbCBoYW5kc1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ08xMlMxIE9wdGljYWwgTGFzZXInOiAnMzM0NycsIC8vIG1pZGRsZSBsYXNlciBmcm9tIGV5ZVxyXG4gICAgJ08xMlMxIEFkdmFuY2VkIE9wdGljYWwgTGFzZXInOiAnMzM0QScsIC8vIGdpYW50IGNpcmNsZSBjZW50ZXJlZCBvbiBleWVcclxuICAgICdPMTJTMiBSZWFyIFBvd2VyIFVuaXQgUmVhciBMYXNlcnMgMSc6ICczMzYxJywgLy8gQXJjaGl2ZSBBbGwgaW5pdGlhbCBsYXNlclxyXG4gICAgJ08xMlMyIFJlYXIgUG93ZXIgVW5pdCBSZWFyIExhc2VycyAyJzogJzMzNjInLCAvLyBBcmNoaXZlIEFsbCByb3RhdGluZyBsYXNlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzEyUzEgT3B0aW1pemVkIEZpcmUgSUlJJzogJzMzMzcnLCAvLyBmaXJlIHNwcmVhZFxyXG4gICAgJ08xMlMyIEh5cGVyIFB1bHNlIFRldGhlcic6ICczMzVDJywgLy8gSW5kZXggQW5kIEFyY2hpdmUgUGVyaXBoZXJhbCB0ZXRoZXJzXHJcbiAgICAnTzEyUzIgV2F2ZSBDYW5ub24nOiAnMzM2QicsIC8vIEluZGV4IEFuZCBBcmNoaXZlIFBlcmlwaGVyYWwgYmFpdGVkIGxhc2Vyc1xyXG4gICAgJ08xMlMyIE9wdGltaXplZCBGaXJlIElJSSc6ICczMzc5JywgLy8gQXJjaGl2ZSBBbGwgc3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdPMTJTMSBPcHRpbWl6ZWQgU2FnaXR0YXJpdXMgQXJyb3cnOiAnMzM0RCcsIC8vIE9tZWdhLU0gYmFyZCBsaW1pdCBicmVha1xyXG4gICAgJ08xMlMyIE92ZXJzYW1wbGVkIFdhdmUgQ2Fubm9uJzogJzMzNjYnLCAvLyBNb25pdG9yIHRhbmsgYnVzdGVyc1xyXG4gICAgJ08xMlMyIFNhdmFnZSBXYXZlIENhbm5vbic6ICczMzZEJywgLy8gVGFuayBidXN0ZXIgd2l0aCB0aGUgdnVsbiBmaXJzdFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdPMTJTMSBEaXNjaGFyZ2VyIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICczMzI3JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ08xMlMxIE1hZ2ljIFZ1bG5lcmFiaWxpdHkgVXAgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc0NzInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS52dWxuID8/PSB7fTtcclxuICAgICAgICBkYXRhLnZ1bG5bbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzEyUzEgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzQ3MicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnZ1bG4gPSBkYXRhLnZ1bG4gfHwge307XHJcbiAgICAgICAgZGF0YS52dWxuW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPMTJTMSBNYWdpYyBWdWxuZXJhYmlsaXR5IERhbWFnZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gMzMyRSA9IFBpbGUgUGl0Y2ggc3RhY2tcclxuICAgICAgLy8gMzMzRSA9IEVsZWN0cmljIFNsaWRlIChPbWVnYS1NIHNxdWFyZSAxLTQgZGFzaGVzKVxyXG4gICAgICAvLyAzMzNGID0gRWxlY3RyaWMgU2xpZGUgKE9tZWdhLUYgdHJpYW5nbGUgMS00IGRhc2hlcylcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyczMzJFJywgJzMzM0UnLCAnMzMzRiddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEudnVsbiAmJiBkYXRhLnZ1bG5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh3aXRoIHZ1bG4pYCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKG1pdCBWZXJ3dW5kYmFya2VpdClgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoYXZlYyBWdWxuw6lyYWJpbGl0w6kpYCxcclxuICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOiiq+ODgOODoeODvOOCuOS4iuaYhylgLFxyXG4gICAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5bim5piT5LykKWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjrsJvtlLzspp0g7IOB7YOc7JeQ7IScIO2UvOqyqSlgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTzFOIC0gRGVsdGFzY2FwZSAxLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EZWx0YXNjYXBlVjEwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMU4gQnVybic6ICcyM0Q1JywgLy8gRmlyZWJhbGwgZXhwbG9zaW9uIGNpcmNsZSBBb0VzXHJcbiAgICAnTzFOIENsYW1wJzogJzIzRTInLCAvLyBGcm9udGFsIHJlY3RhbmdsZSBrbm9ja2JhY2sgQW9FLCBBbHRlIFJvaXRlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPMU4gTGV2aW5ib2x0JzogJzIzREEnLCAvLyBzbWFsbCBzcHJlYWQgY2lyY2xlc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMVMgLSBEZWx0YXNjYXBlIDEuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMTBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xUyBUdXJidWxlbmNlJzogJzI1ODQnLCAvLyBzdGFuZGluZyB1bmRlciB0aGUgYm9zcyBiZWZvcmUgZG93bmJ1cnN0XHJcbiAgICAnTzFTIEJhbGwgT2YgRmlyZSBCdXJuJzogJzFFQ0InLCAvLyBmaXJlYmFsbCBleHBsb3Npb25cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPMVMgQ2xhbXAnOiAnMUVERScsIC8vIGxhcmdlIGZyb250YWwgbGluZSBhb2VcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xUyBMZXZpbmJvbHQnOiAnMUVEMicsIC8vIGxpZ2h0bmluZyBzcHJlYWRcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMk4gLSBEZWx0YXNjYXBlIDIuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMjAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08yTiBNYWluIFF1YWtlJzogJzI0QTUnLCAvLyBOb24tdGVsZWdyYXBoZWQgY2lyY2xlIEFvRSwgRmxlc2h5IE1lbWJlclxyXG4gICAgJ08yTiBFcm9zaW9uJzogJzI1OTAnLCAvLyBTbWFsbCBjaXJjbGUgQW9FcywgRmxlc2h5IE1lbWJlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzJOIFBhcmFub3JtYWwgV2F2ZSc6ICcyNTBFJywgLy8gSW5zdGFudCB0YW5rIGNsZWF2ZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gV2UgY291bGQgdHJ5IHRvIHNlcGFyYXRlIG91dCB0aGUgbWlzdGFrZSB0aGF0IGxlZCB0byB0aGUgcGxheWVyIGJlaW5nIHBldHJpZmllZC5cclxuICAgICAgLy8gSG93ZXZlciwgaXQncyBOb3JtYWwgbW9kZSwgd2h5IG92ZXJ0aGluayBpdD9cclxuICAgICAgaWQ6ICdPMk4gUGV0cmlmaWNhdGlvbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcyNjInIH0pLFxyXG4gICAgICAvLyBUaGUgdXNlciBtaWdodCBnZXQgaGl0IGJ5IGFub3RoZXIgcGV0cmlmeWluZyBhYmlsaXR5IGJlZm9yZSB0aGUgZWZmZWN0IGVuZHMuXHJcbiAgICAgIC8vIFRoZXJlJ3Mgbm8gcG9pbnQgaW4gbm90aWZ5aW5nIGZvciB0aGF0LlxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDEwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ08yTiBFYXJ0aHF1YWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjUxNScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gVGhpcyBkZWFscyBkYW1hZ2Ugb25seSB0byBub24tZmxvYXRpbmcgdGFyZ2V0cy5cclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIE8yUyAtIERlbHRhc2NhcGUgMi4wIFNhdmFnZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRGVsdGFzY2FwZVYyMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzJTIFdlaWdodGVkIFdpbmcnOiAnMjNFRicsIC8vIFVuc3RhYmxlIEdyYXZpdHkgZXhwbG9zaW9ucyBvbiBwbGF5ZXJzIChhZnRlciBMb25nIERyb3ApXHJcbiAgICAnTzJTIEdyYXZpdGF0aW9uYWwgRXhwbG9zaW9uIDEnOiAnMjM2NycsIC8vIGZhaWxpbmcgRm91ciBGb2xkIFNhY3JpZmljZSA0IHBlcnNvbiBzdGFja1xyXG4gICAgJ08yUyBHcmF2aXRhdGlvbmFsIEV4cGxvc2lvbiAyJzogJzIzNjgnLCAvLyBmYWlsaW5nIEZvdXIgRm9sZCBTYWNyaWZpY2UgNCBwZXJzb24gc3RhY2tcclxuICAgICdPMlMgTWFpbiBRdWFrZSc6ICcyMzU5JywgLy8gdW50ZWxlZ3JhcGhlZCBleHBsb3Npb25zIGZyb20gZXBpY2VudGVyIHRlbnRhY2xlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnTzJTIFN0b25lIEN1cnNlJzogJzU4OScsIC8vIGZhaWxpbmcgRGVhdGgncyBHYXplIG9yIHRha2luZyB0b28gbWFueSB0YW5rYnVzdGVyIHN0YWNrc1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gZ3JvdW5kIGJsdWUgYXJlbmEgY2lyY2xlczsgKHByb2JhYmx5Pykgb25seSBkbyBkYW1hZ2UgaWYgbm90IGZsb2F0aW5nXHJcbiAgICAgIC8vIFRPRE86IHVzdWFsbHkgdGhpcyBqdXN0IGRvZXNuJ3QgaGl0IGFueWJvZHkgYXQgYWxsLCBkdWUgdG8gcGF0dGVybnMuXHJcbiAgICAgIC8vIEZsb2F0aW5nIG92ZXIgb25lIGlzIHVudGVzdGVkLlxyXG4gICAgICBpZDogJ08yUyBQZXRyb3NwaGVyZSBFeHBsb3Npb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNDVEJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIGZsb2F0aW5nIHllbGxvdyBhcmVuYSBjaXJjbGVzOyBvbmx5IGRvIGRhbWFnZSBpZiBmbG9hdGluZ1xyXG4gICAgICBpZDogJ08yUyBQb3RlbnQgUGV0cm9zcGhlcmUgRXhwbG9zaW9uJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjM2MicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBNdXN0IGJlIGZsb2F0aW5nIHRvIHN1cnZpdmU7IGhpdHMgZXZlcnlvbmUgYnV0IG9ubHkgZG9lcyBkYW1hZ2UgaWYgbm90IGZsb2F0aW5nLlxyXG4gICAgICBpZDogJ08yUyBFYXJ0aHF1YWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjQ3QScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBpbml0aWFsaXplZD86IGJvb2xlYW47XHJcbiAgcGhhc2VOdW1iZXI/OiBudW1iZXI7XHJcbiAgZ2FtZUNvdW50PzogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBPM04gLSBEZWx0YXNjYXBlIDMuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMzAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08zTiBTcGVsbGJsYWRlIEZpcmUgSUlJJzogJzI0NjAnLCAvLyBEb251dCBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gU3BlbGxibGFkZSBCbGl6emFyZCBJSUknOiAnMjQ2MScsIC8vIENpcmNsZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gU3BlbGxibGFkZSBUaHVuZGVyIElJSSc6ICcyNDYyJywgLy8gTGluZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gQ3Jvc3MgUmVhcGVyJzogJzI0NkInLCAvLyBDaXJjbGUgQW9FLCBTb3VsIFJlYXBlclxyXG4gICAgJ08zTiBHdXN0aW5nIEdvdWdlJzogJzI0NkMnLCAvLyBHcmVlbiBsaW5lIEFvRSwgU291bCBSZWFwZXJcclxuICAgICdPM04gU3dvcmQgRGFuY2UnOiAnMjQ3MCcsIC8vIFRhcmdldGVkIHRoaW4gY29uZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gVXBsaWZ0JzogJzI0NzMnLCAvLyBHcm91bmQgc3BlYXJzLCBRdWVlbidzIFdhbHR6IGVmZmVjdCwgSGFsaWNhcm5hc3N1c1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ08zTiBVbHRpbXVtJzogJzI0NzcnLCAvLyBJbnN0YW50IGtpbGwuIFVzZWQgaWYgdGhlIHBsYXllciBkb2VzIG5vdCBleGl0IHRoZSBzYW5kIG1hemUgZmFzdCBlbm91Z2guXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPM04gSG9seSBCbHVyJzogJzI0NjMnLCAvLyBTcHJlYWQgY2lyY2xlcy5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzNOIFBoYXNlIFRyYWNrZXInLFxyXG4gICAgICB0eXBlOiAnU3RhcnRzVXNpbmcnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGljYXJuYXNzdXMnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhEZTogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGlrYXJuYXNzb3MnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGljYXJuYXNzZScsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLnN0YXJ0c1VzaW5nKHsgaWQ6ICcyMzA0Jywgc291cmNlOiAn44OP44Oq44Kr44Or44OK44OD44K944K5JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzIzMDQnLCBzb3VyY2U6ICflk4jliKnljaHnurPoi4/mlq8nLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhLbzogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ+2VoOumrOy5tOultOuCmOyGjOyKpCcsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiBkYXRhLnBoYXNlTnVtYmVyID0gKGRhdGEucGhhc2VOdW1iZXIgPz8gMCkgKyAxLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhlcmUncyBhIGxvdCB0byB0cmFjaywgYW5kIGluIG9yZGVyIHRvIG1ha2UgaXQgYWxsIGNsZWFuLCBpdCdzIHNhZmVzdCBqdXN0IHRvXHJcbiAgICAgIC8vIGluaXRpYWxpemUgaXQgYWxsIHVwIGZyb250IGluc3RlYWQgb2YgdHJ5aW5nIHRvIGd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIGNvbXBhcmlzb25zLlxyXG4gICAgICBpZDogJ08zTiBJbml0aWFsaXppbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzM2NycsIHNvdXJjZTogJ0hhbGljYXJuYXNzdXMnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhEZTogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICczNjcnLCBzb3VyY2U6ICdIYWxpa2FybmFzc29zJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAnSGFsaWNhcm5hc3NlJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn44OP44Oq44Kr44Or44OK44OD44K944K5JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn5ZOI5Yip5Y2h57qz6IuP5pavJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn7ZWg66as7Lm066W064KY7IaM7IqkJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+ICFkYXRhLmluaXRpYWxpemVkLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5nYW1lQ291bnQgPSAwO1xyXG4gICAgICAgIC8vIEluZGV4aW5nIHBoYXNlcyBhdCAxIHNvIGFzIHRvIG1ha2UgcGhhc2VzIG1hdGNoIHdoYXQgaHVtYW5zIGV4cGVjdC5cclxuICAgICAgICAvLyAxOiBXZSBzdGFydCBoZXJlLlxyXG4gICAgICAgIC8vIDI6IENhdmUgcGhhc2Ugd2l0aCBVcGxpZnRzLlxyXG4gICAgICAgIC8vIDM6IFBvc3QtaW50ZXJtaXNzaW9uLCB3aXRoIGdvb2QgYW5kIGJhZCBmcm9ncy5cclxuICAgICAgICBkYXRhLnBoYXNlTnVtYmVyID0gMTtcclxuICAgICAgICBkYXRhLmluaXRpYWxpemVkID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzNOIFJpYmJpdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjQ2NicgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBXZSBETyB3YW50IHRvIGJlIGhpdCBieSBUb2FkL1JpYmJpdCBpZiB0aGUgbmV4dCBjYXN0IG9mIFRoZSBHYW1lXHJcbiAgICAgICAgLy8gaXMgNHggdG9hZCBwYW5lbHMuXHJcbiAgICAgICAgY29uc3QgZ2FtZUNvdW50ID0gZGF0YS5nYW1lQ291bnQgPz8gMDtcclxuICAgICAgICByZXR1cm4gIShkYXRhLnBoYXNlTnVtYmVyID09PSAzICYmIGdhbWVDb3VudCAlIDIgPT09IDApICYmIG1hdGNoZXMudGFyZ2V0SWQgIT09ICdFMDAwMDAwMCc7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGVyZSdzIGEgbG90IHdlIGNvdWxkIGRvIHRvIHRyYWNrIGV4YWN0bHkgaG93IHRoZSBwbGF5ZXIgZmFpbGVkIFRoZSBHYW1lLlxyXG4gICAgICAvLyBXaHkgb3ZlcnRoaW5rIE5vcm1hbCBtb2RlLCBob3dldmVyP1xyXG4gICAgICBpZDogJ08zTiBUaGUgR2FtZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gR3Vlc3Mgd2hhdCB5b3UganVzdCBsb3N0P1xyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyNDZEJyB9KSxcclxuICAgICAgLy8gSWYgdGhlIHBsYXllciB0YWtlcyBubyBkYW1hZ2UsIHRoZXkgZGlkIHRoZSBtZWNoYW5pYyBjb3JyZWN0bHkuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgICBydW46IChkYXRhKSA9PiBkYXRhLmdhbWVDb3VudCA9IChkYXRhLmdhbWVDb3VudCA/PyAwKSArIDEsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IGhhbmRsZSBSaWJiaXQgKDIyRjcpLCBPaW5rICgyMkY5LCBpZiBkYW1hZ2UpLCBTcXVlbGNoICgyMkY4LCBpZiBkYW1hZ2UpXHJcbi8vICAgICAgIHdoaWNoIGlzIGFuIGVycm9yIGV4Y2VwdCBkdXJpbmcgdGhlIHNlY29uZCBnYW1lXHJcblxyXG4vLyBPM1MgLSBEZWx0YXNjYXBlIDMuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMzBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08zUyBTcGVsbGJsYWRlIEZpcmUgSUlJJzogJzIyRUMnLCAvLyBkb251dFxyXG4gICAgJ08zUyBTcGVsbGJsYWRlIFRodW5kZXIgSUlJJzogJzIyRUUnLCAvLyBsaW5lXHJcbiAgICAnTzNTIFNwZWxsYmxhZGUgQmxpenphcmQgSUlJJzogJzIyRUQnLCAvLyBjaXJjbGVcclxuICAgICdPM1MgVXBsaWZ0JzogJzIzMEQnLCAvLyBub3Qgc3RhbmRpbmcgb24gYmx1ZSBzcXVhcmVcclxuICAgICdPM1MgU291bCBSZWFwZXIgR3VzdGluZyBHb3VnZSc6ICcyMkZGJywgLy8gcmVhcGVyIGxpbmUgYW9lIGR1cmluZyBjYXZlIHBoYXNlXHJcbiAgICAnTzNTIFNvdWwgUmVhcGVyIENyb3NzIFJlYXBlcic6ICcyMkZEJywgLy8gbWlkZGxlIHJlYXBlciBjaXJjbGVcclxuICAgICdPM1MgU291bCBSZWFwZXIgU3RlbmNoIG9mIERlYXRoJzogJzIyRkUnLCAvLyBvdXRzaWRlIHJlYXBlcnMgKGR1cmluZyBmaW5hbCBwaGFzZSlcclxuICAgICdPM1MgQXBhbmRhIE1hZ2ljIEhhbW1lcic6ICcyMzE1JywgLy8gYm9va3MgcGhhc2UgbWFnaWMgaGFtbWVyIGNpcmNsZVxyXG4gICAgJ08zUyBCcmlhciBUaG9ybic6ICcyMzA5JywgLy8gbm90IGJyZWFraW5nIHRldGhlcnMgZmFzdCBlbm91Z2hcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08zUyBIb2x5IEVkZ2UnOiAnMjJGMCcsIC8vIFNwZWxsYmxhZGUgSG9seSBzcHJlYWRcclxuICAgICdPM1MgU3dvcmQgRGFuY2UnOiAnMjMwNycsIC8vIHByb3RlYW4gd2F2ZVxyXG4gICAgJ08zUyBHcmVhdCBEcmFnb24gRnJvc3QgQnJlYXRoJzogJzIzMTInLCAvLyB0YW5rIGNsZWF2ZSBmcm9tIEdyZWF0IERyYWdvblxyXG4gICAgJ08zUyBJcm9uIEdpYW50IEdyYW5kIFN3b3JkJzogJzIzMTYnLCAvLyB0YW5rIGNsZWF2ZSBmcm9tIElyb24gR2lhbnRcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ08zUyBGb2xpbyc6ICcyMzBGJywgLy8gYm9va3MgYm9va3MgYm9va3NcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnTzNTIEhvbHkgQmx1cic6ICcyMkYxJywgLy8gU3BlbGxibGFkZSBIb2x5IHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBFdmVyeWJvZHkgZ2V0cyBoaXRzIGJ5IHRoaXMsIGJ1dCBpdCdzIG9ubHkgYSBmYWlsdXJlIGlmIGl0IGRvZXMgZGFtYWdlLlxyXG4gICAgICBpZDogJ08zUyBUaGUgR2FtZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzIzMDEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPNE4gLSBEZWx0YXNjYXBlIDQuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWNDAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ080TiBCbGl6emFyZCBJSUknOiAnMjRCQycsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0VzLCBFeGRlYXRoXHJcbiAgICAnTzROIEVtcG93ZXJlZCBUaHVuZGVyIElJSSc6ICcyNEMxJywgLy8gVW50ZWxlZ3JhcGhlZCBsYXJnZSBjaXJjbGUgQW9FLCBFeGRlYXRoXHJcbiAgICAnTzROIFpvbWJpZSBCcmVhdGgnOiAnMjRDQicsIC8vIENvbmFsLCB0cmVlIGhlYWQgYWZ0ZXIgRGVjaXNpdmUgQmF0dGxlXHJcbiAgICAnTzROIENsZWFyb3V0JzogJzI0Q0MnLCAvLyBPdmVybGFwcGluZyBjb25lIEFvRXMsIERlYXRobHkgVmluZSAodGVudGFjbGVzIGFsb25nc2lkZSB0cmVlIGhlYWQpXHJcbiAgICAnTzROIEJsYWNrIFNwYXJrJzogJzI0QzknLCAvLyBFeHBsb2RpbmcgQmxhY2sgSG9sZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAvLyBFbXBvd2VyZWQgRmlyZSBJSUkgaW5mbGljdHMgdGhlIFB5cmV0aWMgZGVidWZmLCB3aGljaCBkZWFscyBkYW1hZ2UgaWYgdGhlIHBsYXllclxyXG4gICAgLy8gbW92ZXMgb3IgYWN0cyBiZWZvcmUgdGhlIGRlYnVmZiBmYWxscy4gVW5mb3J0dW5hdGVseSBpdCBkb2Vzbid0IGxvb2sgbGlrZSB0aGVyZSdzXHJcbiAgICAvLyBjdXJyZW50bHkgYSBsb2cgbGluZSBmb3IgdGhpcywgc28gdGhlIG9ubHkgd2F5IHRvIGNoZWNrIGZvciB0aGlzIGlzIHRvIGNvbGxlY3RcclxuICAgIC8vIHRoZSBkZWJ1ZmZzIGFuZCB0aGVuIHdhcm4gaWYgYSBwbGF5ZXIgdGFrZXMgYW4gYWN0aW9uIGR1cmluZyB0aGF0IHRpbWUuIE5vdCB3b3J0aCBpdFxyXG4gICAgLy8gZm9yIE5vcm1hbC5cclxuICAgICdPNE4gU3RhbmRhcmQgRmlyZSc6ICcyNEJBJyxcclxuICAgICdPNE4gQnVzdGVyIFRodW5kZXInOiAnMjRCRScsIC8vIEEgY2xlYXZpbmcgdGFuayBidXN0ZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEtpbGxzIHRhcmdldCBpZiBub3QgY2xlYW5zZWRcclxuICAgICAgaWQ6ICdPNE4gRG9vbScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEUnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQ2xlYW5zZXJzIG1pc3NlZCBEb29tIScsXHJcbiAgICAgICAgICAgIGRlOiAnRG9vbS1SZWluaWd1bmcgdmVyZ2Vzc2VuIScsXHJcbiAgICAgICAgICAgIGZyOiAnTlxcJ2EgcGFzIMOpdMOpIGRpc3NpcMOpKGUpIGR1IEdsYXMgIScsXHJcbiAgICAgICAgICAgIGphOiAn5q2744Gu5a6j5ZGKJyxcclxuICAgICAgICAgICAgY246ICfmsqHop6PmrbvlrqMnLFxyXG4gICAgICAgICAgICBrbzogJ+yjveydjOydmCDshKDqs6AnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gU2hvcnQga25vY2tiYWNrIGZyb20gRXhkZWF0aFxyXG4gICAgICBpZDogJ080TiBWYWN1dW0gV2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI0QjgnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFJvb20td2lkZSBBb0UsIGZyZWV6ZXMgbm9uLW1vdmluZyB0YXJnZXRzXHJcbiAgICAgIGlkOiAnTzROIEVtcG93ZXJlZCBCbGl6emFyZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc0RTYnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgTmV0TWF0Y2hlcyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL25ldF9tYXRjaGVzJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogdGFraW5nIHRoZSB3cm9uZyBjb2xvciB3aGl0ZS9ibGFjayBhbnRpbGlnaHRcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaXNEZWNpc2l2ZUJhdHRsZUVsZW1lbnQ/OiBib29sZWFuO1xyXG4gIGlzTmVvRXhkZWF0aD86IGJvb2xlYW47XHJcbiAgaGFzQmV5b25kRGVhdGg/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgZG91YmxlQXR0YWNrTWF0Y2hlcz86IE5ldE1hdGNoZXNbJ0FiaWxpdHknXVtdO1xyXG59XHJcblxyXG4vLyBPNFMgLSBEZWx0YXNjYXBlIDQuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWNDBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ080UzEgVmluZSBDbGVhcm91dCc6ICcyNDBDJywgLy8gY2lyY2xlIG9mIHZpbmVzXHJcbiAgICAnTzRTMSBab21iaWUgQnJlYXRoJzogJzI0MEInLCAvLyB0cmVlIGV4ZGVhdGggY29uYWxcclxuICAgICdPNFMxIFZhY3V1bSBXYXZlJzogJzIzRkUnLCAvLyBjaXJjbGUgY2VudGVyZWQgb24gZXhkZWF0aFxyXG4gICAgJ080UzIgTmVvIFZhY3V1bSBXYXZlJzogJzI0MUQnLCAvLyBcIm91dCBvZiBtZWxlZVwiXHJcbiAgICAnTzRTMiBEZWF0aCBCb21iJzogJzI0MzEnLCAvLyBmYWlsZWQgYWNjZWxlcmF0aW9uIGJvbWJcclxuICAgICdPNFMyIEVtcHRpbmVzcyAxJzogJzI0MjEnLCAvLyBleGFmbGFyZXMgaW5pdGlhbFxyXG4gICAgJ080UzIgRW1wdGluZXNzIDInOiAnMjQyMicsIC8vIGV4YWZsYXJlcyBtb3ZpbmdcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPNFMxIEJsYWNrIEhvbGUgQmxhY2sgU3BhcmsnOiAnMjQwNycsIC8vIGJsYWNrIGhvbGUgY2F0Y2hpbmcgeW91XHJcbiAgICAnTzRTMiBFZGdlIE9mIERlYXRoJzogJzI0MTUnLCAvLyBzdGFuZGluZyBiZXR3ZWVuIHRoZSB0d28gY29sb3IgbGFzZXJzXHJcbiAgICAnTzRTMiBJbm5lciBBbnRpbGlnaHQnOiAnMjQ0QycsIC8vIGlubmVyIGxhc2VyXHJcbiAgICAnTzRTMiBPdXRlciBBbnRpbGlnaHQnOiAnMjQxMCcsIC8vIG91dGVyIGxhc2VyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPNFMxIEZpcmUgSUlJJzogJzIzRjYnLCAvLyBzcHJlYWQgZXhwbG9zaW9uXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdPNFMxIFRodW5kZXIgSUlJJzogJzIzRkEnLCAvLyB0YW5rYnVzdGVyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgRGVjaXNpdmUgQmF0dGxlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyNDA4JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkYXRhLmlzRGVjaXNpdmVCYXR0bGVFbGVtZW50ID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMSBWYWN1dW0gV2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjNGRScsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5pc0RlY2lzaXZlQmF0dGxlRWxlbWVudCA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIEFsbWFnZXN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyNDE3JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkYXRhLmlzTmVvRXhkZWF0aCA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgQmxpenphcmQgSUlJJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjNGOCcsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gSWdub3JlIHVuYXZvaWRhYmxlIHJhaWQgYW9lIEJsaXp6YXJkIElJSS5cclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSkgPT4gIWRhdGEuaXNEZWNpc2l2ZUJhdHRsZUVsZW1lbnQsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgVGh1bmRlciBJSUknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyM0ZEJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICAvLyBPbmx5IGNvbnNpZGVyIHRoaXMgZHVyaW5nIHJhbmRvbSBtZWNoYW5pYyBhZnRlciBkZWNpc2l2ZSBiYXR0bGUuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+IGRhdGEuaXNEZWNpc2l2ZUJhdHRsZUVsZW1lbnQsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgUGV0cmlmaWVkJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzI2MicgfSksXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gT24gTmVvLCBiZWluZyBwZXRyaWZpZWQgaXMgYmVjYXVzZSB5b3UgbG9va2VkIGF0IFNocmllaywgc28geW91ciBmYXVsdC5cclxuICAgICAgICBpZiAoZGF0YS5pc05lb0V4ZGVhdGgpXHJcbiAgICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgICAgLy8gT24gbm9ybWFsIEV4RGVhdGgsIHRoaXMgaXMgZHVlIHRvIFdoaXRlIEhvbGUuXHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBuYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgRm9ya2VkIExpZ2h0bmluZycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI0MkUnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgQmV5b25kIERlYXRoIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNTY2JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGggPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGhbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMiBCZXlvbmQgRGVhdGggTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc1NjYnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNCZXlvbmREZWF0aCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNCZXlvbmREZWF0aFttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMiBCZXlvbmQgRGVhdGgnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNTY2JyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgLSAwLjUsXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmICghZGF0YS5oYXNCZXlvbmREZWF0aClcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzQmV5b25kRGVhdGhbbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMiBEb3VibGUgQXR0YWNrIENvbGxlY3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNDFDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5kb3VibGVBdHRhY2tNYXRjaGVzID0gZGF0YS5kb3VibGVBdHRhY2tNYXRjaGVzIHx8IFtdO1xyXG4gICAgICAgIGRhdGEuZG91YmxlQXR0YWNrTWF0Y2hlcy5wdXNoKG1hdGNoZXMpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIERvdWJsZSBBdHRhY2snLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNDFDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGFyciA9IGRhdGEuZG91YmxlQXR0YWNrTWF0Y2hlcztcclxuICAgICAgICBpZiAoIWFycilcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpZiAoYXJyLmxlbmd0aCA8PSAyKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIC8vIEhhcmQgdG8ga25vdyB3aG8gc2hvdWxkIGJlIGluIHRoaXMgYW5kIHdobyBzaG91bGRuJ3QsIGJ1dFxyXG4gICAgICAgIC8vIGl0IHNob3VsZCBuZXZlciBoaXQgMyBwZW9wbGUuXHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCB0ZXh0OiBgJHthcnJbMF0/LmFiaWxpdHkgPz8gJyd9IHggJHthcnIubGVuZ3RofWAgfTtcclxuICAgICAgfSxcclxuICAgICAgcnVuOiAoZGF0YSkgPT4gZGVsZXRlIGRhdGEuZG91YmxlQXR0YWNrTWF0Y2hlcyxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBUT0RPOiBEaWFib2xpYyBXaW5kICgyOEI5KSBhbHdheXMgc2VlbXMgdG8gYmUgMHgxNiBub3QgMHgxNS5cclxuXHJcbmludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNUaHJvdHRsZT86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuLy8gTzVOIC0gU2lnbWFzY2FwZSAxLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaWdtYXNjYXBlVjEwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPNU4gV3JvdGggR2hvc3QgRW5jdW1iZXInOiAnMjhBRScsIC8vIHNxdWFyZXMgdGhhdCBnaG9zdHMgYXBwZWFyIGluXHJcbiAgICAnTzVOIFNhaW50bHkgQmVhbSc6ICcyOEFBJywgLy8gY2hhc2luZyBjaXJjbGVzIHRoYXQgZGVzdHJveSBnaG9zdHNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzVOIFRocm90dGxlIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnM0FBJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIChkYXRhLmhhc1Rocm90dGxlID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhLmhhc1Rocm90dGxlKSk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ081TiBUaHJvdHRsZSBEZWF0aCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczQUEnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDEsXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmICghZGF0YS5oYXNUaHJvdHRsZT8uW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ081TiBUaHJvdHRsZSBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzNBQScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAoZGF0YS5oYXNUaHJvdHRsZSA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGRhdGEuaGFzVGhyb3R0bGUpKTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEdldHRpbmcgaGl0IGJ5IGEgZ2hvc3Qgd2l0aG91dCB0aHJvdHRsZSAodGhlIG1hbmRhdG9yeSBwb3N0LWNoaW1uZXkgb25lKS5cclxuICAgICAgaWQ6ICdPNU4gUG9zc2VzcycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI4QUMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+ICFkYXRhLmhhc1Rocm90dGxlPy5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIFRPRE86IERpYWJvbGljIFdpbmQgKDI4QkQpIGFsd2F5cyBzZWVtcyB0byBiZSAweDE2IG5vdCAweDE1LlxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNUaHJvdHRsZT86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuLy8gTzVTIC0gU2lnbWFzY2FwZSAxLjAgU2F2YWdlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaWdtYXNjYXBlVjEwU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPNVMgV3JvdGggR2hvc3QgRW5jdW1iZXInOiAnMjhCNicsIC8vIHNxdWFyZXMgYXBwZWFyaW5nXHJcbiAgICAnTzVTIFNhaW50bHkgQmVhbic6ICcyOEI0JywgLy8gY2hhc2luZyBsaWdodHNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzVTIFRocm90dGxlIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnM0FBJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzVGhyb3R0bGUgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSB0cnVlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNVMgVGhyb3R0bGUgRGVhdGgnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnM0FBJyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgLSAxLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzVGhyb3R0bGU/LlttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNVMgVGhyb3R0bGUgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICczQUEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNUaHJvdHRsZSA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gR2V0dGluZyBoaXQgYnkgYSBnaG9zdCB3aXRob3V0IHRocm90dGxlICh0aGUgbWFuZGF0b3J5IHBvc3QtY2hpbW5leSBvbmUpLlxyXG4gICAgICBpZDogJ081UyBQb3NzZXNzJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjhBQycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzVGhyb3R0bGU/LlttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc0ZpcmVSZXNpc3Q/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIE82TiAtIFNpZ21hc2NhcGUgMi4wIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYyMCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzZOIEVhcnRocXVha2UnOiAnMjgxMScsIC8vIGZhaWxpbmcgdG8gYmUgaW4gYSBwbGFuZVxyXG4gICAgJ082TiBEZW1vbmljIFN0b25lJzogJzI4NDcnLCAvLyBjaGFzaW5nIGNpcmNsZXNcclxuICAgICdPNk4gRGVtb25pYyBXYXZlJzogJzI4MzEnLCAvLyBmYWlsaW5nIHRvIGJlIGJlaGluZCByb2NrXHJcbiAgICAnTzZOIERlbW9uaWMgU3BvdXQgMSc6ICcyODM1JywgLy8gcGFpciBvZiB0YXJnZXRlZCBjaXJjbGVzICgjMSlcclxuICAgICdPNk4gRGVtb25pYyBTcG91dCAyJzogJzI4MzcnLCAvLyBwYWlyIG9mIHRhcmdldGVkIGNpcmNsZXMgKCMyKVxyXG4gICAgJ082TiBGZWF0aGVybGFuY2UnOiAnMkFFOCcsIC8vIGJsb3duIGF3YXkgRWFzdGVybHkgY2lyY2xlc1xyXG4gICAgJ082TiBJbnRlbnNlIFBhaW4nOiAnMkFFNycsIC8vIGZhaWxpbmcgdG8gc3ByZWFkIGZvciBEZW1vbmljIFBhaW4gdGV0aGVyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ082TiBGaXJlIFJlc2lzdGFuY2UgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc1RUQnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNGaXJlUmVzaXN0ID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzZOIEZpcmUgUmVzaXN0YW5jZSBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzVFRCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmhhc0ZpcmVSZXNpc3QgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSBmYWxzZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEZsYXNoIEZpcmUgd2l0aG91dCBGaXJlIFJlc2lzdGFuY2UuXHJcbiAgICAgIGlkOiAnTzZOIEZsYXNoIEZpcmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzI4MEInIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNGaXJlUmVzaXN0Py5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc0ZpcmVSZXNpc3Q/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIE82UyAtIFNpZ21hc2NhcGUgMi4wIFNhdmFnZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYyMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzZTIEVhcnRocXVha2UnOiAnMjgxMCcsIC8vIGZhaWxpbmcgdG8gYmUgaW4gYSBwbGFuZVxyXG4gICAgJ082UyBSb2NrIEhhcmQnOiAnMjgxMicsIC8vIGZyb20gcG9ydHJheWFsIG9mIGVhcnRoP1xyXG4gICAgJ082UyBGbGFzaCBUb3JyZW50IDEnOiAnMkFCOScsIC8vIGZyb20gcG9ydHJheWFsIG9mIHdhdGVyPz9cclxuICAgICdPNlMgRmxhc2ggVG9ycmVudCAyJzogJzI4MEYnLCAvLyBmcm9tIHBvcnRyYXlhbCBvZiB3YXRlcj8/XHJcbiAgICAnTzZTIEVhc3Rlcmx5IEZlYXRoZXJsYW5jZSc6ICcyODNFJywgLy8gYmxvd24gYXdheSBFYXN0ZXJseSBjaXJjbGVzXHJcbiAgICAnTzZTIERlbW9uaWMgV2F2ZSc6ICcyODMwJywgLy8gZmFpbGluZyB0byBiZSBiZWhpbmQgcm9ja1xyXG4gICAgJ082UyBEZW1vbmljIFNwb3V0JzogJzI4MzYnLCAvLyBwYWlyIG9mIHRhcmdldGVkIGNpcmNsZSdcclxuICAgICdPNlMgRGVtb25pYyBTdG9uZSAxJzogJzI4NDQnLCAvLyBjaGFzaW5nIGNpcmNsZSBpbml0aWFsXHJcbiAgICAnTzZTIERlbW9uaWMgU3RvbmUgMic6ICcyODQ1JywgLy8gY2hhc2luZyBjaXJjbGUgcmVwZWF0ZWRcclxuICAgICdPNlMgSW50ZW5zZSBQYWluJzogJzI4M0EnLCAvLyBmYWlsaW5nIHRvIHNwcmVhZCBmb3IgRGVtb25pYyBQYWluIHRldGhlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzZTIFRoZSBQcmljZSc6ICcyODI2JywgLy8gZXhwbG9kaW5nIExhc3QgS2lzcyB0YW5rYnVzdGVyIGRlYnVmZlxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNlMgRmlyZSBSZXNpc3RhbmNlIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNUVEJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzRmlyZVJlc2lzdCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ082UyBGaXJlIFJlc2lzdGFuY2UgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc1RUQnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNGaXJlUmVzaXN0ID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2UsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBGbGFzaCBGaXJlIHdpdGhvdXQgRmlyZSBSZXNpc3RhbmNlLlxyXG4gICAgICBpZDogJ082UyBGbGFzaCBGaXJlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyODBBJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzRmlyZVJlc2lzdD8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIExvb2sgYXdheTsgZG9lcyBkYW1hZ2UgaWYgZmFpbGVkLlxyXG4gICAgICBpZDogJ082UyBEaXZpbmUgTHVyZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI4MjInLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBzdGFuZGluZyBpbiB0aGUgd3Jvbmcgc2lkZSBvZiBJbnRlcmRpbWVuc2lvbmFsIEJvbWIgY2F1c2VzXHJcbi8vICAgICAgIEludGVyZGltZW5zaW9uYWwgRXhwbG9zaW9uICgyNzYzKSBhbmQgYWxzbyBnaXZlcyB5b3UgYSByZWRcclxuLy8gICAgICAgWCBoZWFkbWFya2VyIGxpa2UgQmFyZGFtJ3MgTWV0dGxlIGJvc3MgMi4gIEhvd2V2ZXIsIHRoaXNcclxuLy8gICAgICAgaXNuJ3QgYW4gYWN0dWFsIGhlYWRtYXJrZXIgbGluZS4gIFNvLCB0aGVyZSBpcyBubyB3YXkgdG9cclxuLy8gICAgICAgZGlmZmVyZW50aWF0ZSBcInNvbWVib2R5IGZhaWxlZCB0aGlzXCIgdnMgXCJub2JvZHkgZ290IGl0XCIuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTzdOIC0gU2lnbWFzY2FwZSAzLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaWdtYXNjYXBlVjMwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPN04gTWFnaXRlayBSYXknOiAnMjc2QicsIC8vIHVudGVsZWdyYXBoZWQgZnJvbnRhbCBsaW5lXHJcbiAgICAnTzdOIEluayc6ICcyNzVEJywgLy8gSW5pdGlhbCBVbHRyb3MgdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ083TiBUZW50YWNsZSc6ICcyNzVGJywgLy8gVGVudGFjbGUgc2ltdWxhdGlvbiB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnTzdOIFdhbGxvcCc6ICcyNzYwJywgLy8gVWx0cm9zIHRlbnRhY2xlcyBhdHRhY2tpbmdcclxuICAgICdPN04gQ2hhaW4gQ2Fubm9uJzogJzI3NzAnLCAvLyBiYWl0ZWQgYWlyc2hpcCBhZGQgY2Fubm9uXHJcbiAgICAnTzdOIE1pc3NpbGUgRXhwbG9zaW9uJzogJzI3NjUnLCAvLyBIaXR0aW5nIGEgbWlzc2lsZVxyXG4gICAgJ083TiBCaWJsaW90YXBoIERlZXAgRGFya25lc3MnOiAnMjlCRicsIC8vIGdpYW50IGRvbnV0XHJcbiAgICAnTzdOIERhZGFsdW1hIEF1cmEgQ2Fubm9uJzogJzI3NjcnLCAvLyBsYXJnZSBsaW5lIGFvZVxyXG4gICAgJ083TiBHdWFyZGlhbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyNzYxJywgLy8gaW5pdGlhbCBBaXIgRm9yY2UgY2VudGVyZWQgY2lyY2xlIG9uIEd1YXJkaWFuXHJcbiAgICAnTzdOIEFpciBGb3JjZSBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyNzNGJywgLy8gQWlyIEZvcmNlIGFkZCBsYXJnZSBjb25hbFxyXG4gICAgJ083TiBJbnRlcmRpbWVuc2lvbmFsIEV4cGxvc2lvbic6ICcyNzYzJywgLy8gRmFpbGVkIGJvbWIgKGVpdGhlciB3cm9uZyBzaWRlIG9yIGlnbm9yZWQpXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnTzdOIFN1cGVyIENoYWtyYSBCdXJzdCc6ICcyNzY5JywgLy8gTWlzc2VkIERhZGFsdW1hIHRvd2VyIChoaXRzIGV2ZXJ5Ym9keSlcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ083TiBTaG9ja2VkJzogJzVEQScsIC8vIHRvdWNoaW5nIGFyZW5hIGVkZ2VcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBJbmsgKDI3N0QpIHNlZW1zIHRvIGFsd2F5cyBiZSAweDE2XHJcbi8vIFRPRE86IEZhaWxpbmcgVmlydXM/XHJcbi8vIFRPRE86IGZhaWxpbmcgSW50ZXJkaW1lbnNpb25hbCBCb21icz9cclxuXHJcbi8vIE83UyAtIFNpZ21hc2NhcGUgMy4wIFNhdmFnZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYzMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzdTIE1hZ2l0ZWsgUmF5JzogJzI3ODgnLCAvLyBmcm9udCBsaW5lIGxhc2VyXHJcbiAgICAnTzdTIExpZ2h0bmluZyBCb21iIEV4cGxvc2lvbic6ICcyNzhFJywgLy8gYmFpdGVkIG9yYnNcclxuICAgICdPN1MgQ2hhaW4gQ2Fubm9uJzogJzI3OEYnLCAvLyBkYW1hZ2UgZnJvbSBiYWl0ZWQgYWVyaWFsIGF0dGFja1xyXG4gICAgJ083UyBUZW50YWNsZSc6ICcyNzdFJywgLy8gdGVudGFjbGVzIGFwcGVhcmluZ1xyXG4gICAgJ083UyBUZW50YWNsZSBXYWxsb3AnOiAnMjc3RicsIC8vIHRlbnRhY2xlcyBhdHRhY2tpbmdcclxuICAgICdPN1MgQWlyIEZvcmNlIERpZmZyYWN0aXZlIExhc2VyJzogJzI3NDAnLCAvLyBBaXIgRm9yY2UgYWRkcyBjb25hbFxyXG4gICAgJ083TiBHdWFyZGlhbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyNzgwJywgLy8gaW5pdGlhbCBBaXIgRm9yY2UgY2VudGVyZWQgY2lyY2xlIG9uIEd1YXJkaWFuXHJcbiAgICAnTzdTIFRoZSBIZWF0JzogJzI3NzcnLCAvLyBleHBsb3Npb24gZnJvbSBzZWFyaW5nIHdpbmRcclxuICAgICdPN1MgU3VwZXIgQ2hha3JhIEJ1cnN0JzogJzI3ODYnLCAvLyBmYWlsaW5nIERhZGFsdW1hIHRvd2Vyc1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ083UyBNaXNzaWxlJzogJzI3ODInLFxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnTzdTIFNob2NrZWQnOiAnNURBJywgLy8gdG91Y2hpbmcgYXJlbmEgZWRnZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzdTIEF1cmEgQ2Fubm9uJzogJzI3ODQnLCAvLyBEYWRhbHVtYSBsaW5lIGFvZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdPN1MgU3RvbmVza2luJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyQUI1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy5zb3VyY2UsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPOE4gLSBTaWdtYXNjYXBlIDQuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNpZ21hc2NhcGVWNDAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ084TiBCbGl6emFyZCBCbGl0eiAxJzogJzI5MTgnLFxyXG4gICAgJ084TiBCbGl6emFyZCBCbGl0eiAyJzogJzI5MTQnLFxyXG4gICAgJ084TiBUaHJ1bW1pbmcgVGh1bmRlciAxJzogJzI5MUQnLFxyXG4gICAgJ084TiBUaHJ1bW1pbmcgVGh1bmRlciAyJzogJzI5MUMnLFxyXG4gICAgJ084TiBUaHJ1bW1pbmcgVGh1bmRlciAzJzogJzI5MUInLFxyXG4gICAgJ084TiBXYXZlIENhbm5vbic6ICcyOTI4JywgLy8gdGVsZWdyYXBoZWQgbGluZSBhb2VzXHJcbiAgICAnTzhOIFJldm9sdGluZyBSdWluJzogJzI5MjMnLCAvLyBsYXJnZSAxODAgY2xlYXZlIGFmdGVyIFRpbWVseSBUZWxlcG9ydFxyXG4gICAgJ084TiBJbnRlbXBlcmF0ZSBXaWxsJzogJzI5MkEnLCAvLyBlYXN0IDE4MCBjbGVhdmVcclxuICAgICdPOE4gR3Jhdml0YXRpb25hbCBXYXZlJzogJzI5MkInLCAvLyB3ZXN0IDE4MCBjbGVhdmVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ084TiBGbGFncmFudCBGaXJlIFNwcmVhZCc6ICcyOTFGJywgLy8gdHJ1ZSBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdPOE4gRmxhZ3JhbnQgRmlyZSBTdGFjayc6ICcyOTIwJywgLy8gZmFrZSBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBMb29rIGF3YXk7IGRvZXMgZGFtYWdlIGlmIGZhaWxlZC5cclxuICAgICAgaWQ6ICdPOE4gSW5kb2xlbnQgV2lsbCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI5MkMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gTG9vayB0b3dhcmRzOyBkb2VzIGRhbWFnZSBpZiBmYWlsZWQuXHJcbiAgICAgIGlkOiAnTzhOIEF2ZSBNYXJpYScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI5MkInLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPOE4gU2hvY2t3YXZlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyOTI3JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ084TiBBZXJvIEFzc2F1bHQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzI5MjQnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIGFzc29tbcOpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogZmFpbGluZyBtZXRlb3IgdG93ZXJzP1xyXG5cclxuLy8gTzhTIC0gU2lnbWFzY2FwZSA0LjAgU2F2YWdlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaWdtYXNjYXBlVjQwU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPOFMxIFRocnVtbWluZyBUaHVuZGVyIDEnOiAnMjhDQicsXHJcbiAgICAnTzhTMSBUaHJ1bW1pbmcgVGh1bmRlciAyJzogJzI4Q0MnLFxyXG4gICAgJ084UzEgVGhydW1taW5nIFRodW5kZXIgMyc6ICcyOENEJyxcclxuICAgICdPOFMxIFRocnVtbWluZyBUaHVuZGVyIDQnOiAnMkIzMScsXHJcbiAgICAnTzhTMSBUaHJ1bW1pbmcgVGh1bmRlciA1JzogJzJCMkYnLFxyXG4gICAgJ084UzEgVGhydW1taW5nIFRodW5kZXIgNic6ICcyQjMwJyxcclxuICAgICdPOFMxIEJsaXp6YXJkIEJsaXR6IDEnOiAnMjhDNCcsXHJcbiAgICAnTzhTMSBCbGl6emFyZCBCbGl0eiAyJzogJzJCQ0EnLFxyXG4gICAgJ084UzEgSW5leG9yYWJsZSBXaWxsJzogJzI4REEnLCAvLyBncm91bmQgY2lyY2xlc1xyXG4gICAgJ084UzEgUmV2b2x0aW5nIFJ1aW4nOiAnMjhENScsIC8vIGxhcmdlIDE4MCBjbGVhdmUgYWZ0ZXIgVGltZWx5IFRlbGVwb3J0XHJcbiAgICAnTzhTMSBJbnRlbXBlcmF0ZSBXaWxsJzogJzI4REYnLCAvLyBlYXN0IDE4MCBjbGVhdmVcclxuICAgICdPOFMxIEdyYXZpdGF0aW9uYWwgV2F2ZSc6ICcyOERFJywgLy8gd2VzdCAxODAgY2xlYXZlXHJcbiAgICAnTzhTMiBCbGl6emFyZCBJSUkgMSc6ICcyOTA4JywgLy8gY2VsZXN0cmlhZCBjZW50ZXIgY2lyY2xlXHJcbiAgICAnTzhTMiBCbGl6emFyZCBJSUkgMic6ICcyOTA5JywgLy8gY2VsZXN0cmlhZCBkb251dFxyXG4gICAgJ084UzIgVGh1bmRlciBJSUknOiAnMjkwQScsIC8vIGNlbGVzdHJpYWQgY3Jvc3MgbGluZXNcclxuICAgICdPOFMyIFRyaW5lIDEnOiAnMjkwRScsIC8vIGVhdGluZyB0aGUgZ29sZGVuIGRvcml0b1xyXG4gICAgJ084UzIgVHJpbmUgMic6ICcyOTBGJywgLy8gZWF0aW5nIHRoZSBiaWcgZ29sZGVuIGRvcml0b1xyXG4gICAgJ084UzIgTWV0ZW9yJzogJzI5MDMnLCAvLyBjaGFzaW5nIHB1ZGRsZXMgZHVyaW5nIDJuZCBmb3JzYWtlbiAoTWV0ZW9yIDI5MDQgPSB0b3dlcilcclxuICAgICdPOFMyIEFsbCBUaGluZ3MgRW5kaW5nIDEnOiAnMjhGMCcsIC8vIEZ1dHVyZXMgTnVtYmVyZWQgZm9sbG93dXBcclxuICAgICdPOFMyIEFsbCBUaGluZ3MgRW5kaW5nIDInOiAnMjhGMicsIC8vIFBhc3RzIEZvcmdvdHRlbiBmb2xsb3d1cFxyXG4gICAgJ084UzIgQWxsIFRoaW5ncyBFbmRpbmcgMyc6ICcyOEY2JywgLy8gRnV0dXJlJ3MgRW5kIGZvbGxvd3VwXHJcbiAgICAnTzhTMiBBbGwgVGhpbmdzIEVuZGluZyA0JzogJzI4RjknLCAvLyBQYXN0J3MgRW5kIGZvbGxvd3VwXHJcbiAgICAnTzhTMiBXaW5ncyBPZiBEZXN0cnVjdGlvbiAxJzogJzI4RkYnLCAvLyBoYWxmIGNsZWF2ZVxyXG4gICAgJ084UzIgV2luZ3MgT2YgRGVzdHJ1Y3Rpb24gMic6ICcyOEZFJywgLy8gaGFsZiBjbGVhdmVcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPOFMyIFRoZSBNYWQgSGVhZCBCaWcgRXhwbG9zaW9uJzogJzI4RkQnLCAvLyBub3QgdG91Y2hpbmcgc2t1bGxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ084UzEgVml0cm9waHlyZSc6ICcyOEUyJywgLy8geWVsbG93IHJpZ2h0IHRldGhlciB0aGF0IG11c3QgYmUgc29sbyAob3Iga25vY2tiYWNrKVxyXG4gICAgJ084UzEgRmxhZ3JhbnQgRmlyZSBTcHJlYWQnOiAnMjhDRicsXHJcbiAgICAnTzhTMiBGaXJlIElJSSBTcHJlYWQnOiAnMjkwQicsIC8vIGNlbGVzdHJpYWQgc3ByZWFkXHJcbiAgICAnTzhTMiBUaGUgTWFkIEhlYWQgRXhwbG9zaW9uJzogJzI4RkMnLCAvLyBza3VsbCB0ZXRoZXJzXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdPOFMxIEh5cGVyZHJpdmUnOiAnMjhFOCcsIC8vIHBoYXNlIDEgdGFua2J1c3RlclxyXG4gICAgJ084UzIgSHlwZXJkcml2ZSc6ICcyMjkxMjhFOCcsIC8vIHBoYXNlIDIgdGFua2J1c3RlclxyXG4gICAgJ084UzIgV2luZ3MgT2YgRGVzdHJ1Y3Rpb24nOiAnMjkwMScsIC8vIGNsb3NlL2ZhciB0YW5rIGJ1c3RlcnNcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnTzhTMSBGbGFncmFudCBGaXJlIFN0YWNrJzogJzI4RDAnLFxyXG4gICAgJ084UzEgR3Jhdml0YXMnOiAnMjhFMCcsIC8vIHB1cnBsZSBsZWZ0IHRldGhlciB0aGF0IG11c3QgYmUgc2hhcmVkLCBsZWF2aW5nIGEgcHVkZGxlXHJcbiAgICAnTzhTMSBJbmRvbWl0YWJsZSBXaWxsJzogJzI4RDknLCAvLyA0eCBzdGFjayBtYXJrZXJzXHJcbiAgICAnTzhTMiBGaXJlIElJSSBTdGFjayc6ICcyOTBDJywgLy8gY2VsZXN0cmlhZCBzdGFja1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gTG9vayBhd2F5OyBkb2VzIGRhbWFnZSBpZiBmYWlsZWQuXHJcbiAgICAgIGlkOiAnTzhTIEluZG9sZW50IFdpbGwnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyOEU0JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIExvb2sgdG93YXJkczsgZG9lcyBkYW1hZ2UgaWYgZmFpbGVkLlxyXG4gICAgICBpZDogJ084UyBBdmUgTWFyaWEnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyOEUzJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzhTIFNob2Nrd2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjhEQicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPOFMgQWVybyBBc3NhdWx0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyOEQ2JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPOU4gLSBBbHBoYXNjYXBlIDEuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMTAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ085TiBEYW1uaW5nIEVkaWN0JzogJzMxNTAnLCAvLyBodWdlIDE4MCBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ085TiBTdHJheSBTcHJheSc6ICczMTZDJywgLy8gRHluYW1pYyBGbHVpZCBkZWJ1ZmYgZG9udXQgZXhwbG9zaW9uXHJcbiAgICAnTzlOIFN0cmF5IEZsYW1lcyc6ICczMTZCJywgLy8gRW50cm9weSBkZWJ1ZmYgY2lyY2xlIGV4cGxvc2lvblxyXG4gICAgJ085TiBLbm9ja2Rvd24gQmlnIEJhbmcnOiAnMzE2MCcsIC8vIGJpZyBjaXJjbGUgd2hlcmUgS25vY2tkb3duIG1hcmtlciBkcm9wcGVkXHJcbiAgICAnTzlOIEZpcmUgQmlnIEJhbmcnOiAnMzE1RicsIC8vIGdyb3VuZCBjaXJjbGVzIGR1cmluZyBmaXJlIHBoYXNlXHJcbiAgICAnTzlOIFNob2Nrd2F2ZSc6ICczMTUzJywgLy8gTG9uZ2l0dWRpbmFsL0xhdGl1ZGluYWwgSW1wbG9zaW9uXHJcbiAgICAnTzlOIENoYW9zcGhlcmUgRmllbmRpc2ggT3JicyBPcmJzaGFkb3cgMSc6ICczMTYyJywgLy8gbGluZSBhb2VzIGZyb20gRWFydGggcGhhc2Ugb3Jic1xyXG4gICAgJ085TiBDaGFvc3BoZXJlIEZpZW5kaXNoIE9yYnMgT3Jic2hhZG93IDInOiAnMzE2MycsIC8vIGxpbmUgYW9lcyBmcm9tIEVhcnRoIHBoYXNlIG9yYnNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzSGVhZHdpbmQ/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgaGFzUHJpbW9yZGlhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMTBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ085UyBTaG9ja3dhdmUnOiAnMzE3NCcsIC8vIExvbmdpdHVkaW5hbC9MYXRpdWRpbmFsIEltcGxvc2lvblxyXG4gICAgJ085UyBEYW1uaW5nIEVkaWN0JzogJzMxNzEnLCAvLyBodWdlIDE4MCBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ085UyBLbm9ja2Rvd24gQmlnIEJhbmcnOiAnMzE4MScsIC8vIGJpZyBjaXJjbGUgd2hlcmUgS25vY2tkb3duIG1hcmtlciBkcm9wcGVkXHJcbiAgICAnTzlTIEZpcmUgQmlnIEJhbmcnOiAnMzE4MCcsIC8vIGdyb3VuZCBjaXJjbGVzIGR1cmluZyBmaXJlIHBoYXNlXHJcbiAgICAnTzlTIENoYW9zcGhlcmUgRmllbmRpc2ggT3JicyBPcmJzaGFkb3cgMSc6ICczMTgzJywgLy8gbGluZSBhb2VzIGZyb20gRWFydGggcGhhc2Ugb3Jic1xyXG4gICAgJ085UyBDaGFvc3BoZXJlIEZpZW5kaXNoIE9yYnMgT3Jic2hhZG93IDInOiAnMzE4NCcsIC8vIGxpbmUgYW9lcyBmcm9tIEVhcnRoIHBoYXNlIG9yYnNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEZhY2luZyB0aGUgd3Jvbmcgd2F5IGZvciBIZWFkd2luZC9UYWlsd2FpbmRcclxuICAgICAgaWQ6ICdPOVMgQ3ljbG9uZSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzE4RicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPOVMgSGVhZHdpbmQgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2NDInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNIZWFkd2luZCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ085UyBIZWFkd2luZCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzY0MicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmhhc0hlYWR3aW5kID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2UsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ085UyBQcmltb3JkaWFsIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNjQ1JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzUHJpbW9yZGlhbCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ085UyBQcmltb3JkaWFsIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNjQ1JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzUHJpbW9yZGlhbCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gRW50cm9weSBkZWJ1ZmYgY2lyY2xlIGV4cGxvc2lvbi5cclxuICAgICAgLy8gRHVyaW5nIHRoZSBtaWRwaGFzZSwgdGFua3MvaGVhbGVycyBuZWVkIHRvIGNsZWFyIGhlYWR3aW5kIHdpdGggRW50cm9weSBjaXJjbGUgYW5kXHJcbiAgICAgIC8vIGRwcyBuZWVkIHRvIGNsZWFyIFByaW1vcmRpYWwgQ3J1c3Qgd2l0aCBEeW5hbWljIEZsdWlkIGRvbnV0LiAgSW4gY2FzZSB0aGVyZSdzXHJcbiAgICAgIC8vIHNvbWUgb3RoZXIgc3RyYXRlZ3ksIGp1c3QgY2hlY2sgYm90aCBkZWJ1ZmZzLlxyXG4gICAgICBpZDogJ085UyBTdHJheSBGbGFtZXMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzMxOEMnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc0hlYWR3aW5kPy5bbWF0Y2hlcy50YXJnZXRdICYmICFkYXRhLmhhc1ByaW1vcmRpYWw/LlttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBEeW5hbWljIEZsdWlkIGRlYnVmZiBkb251dCBleHBsb3Npb24uXHJcbiAgICAgIC8vIFNlZSBTdHJheSBGbGFtZXMgbm90ZSBhYm92ZS5cclxuICAgICAgaWQ6ICdPOVMgU3RyYXkgU3ByYXknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzMxOEQnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc0hlYWR3aW5kPy5bbWF0Y2hlcy50YXJnZXRdICYmICFkYXRhLmhhc1ByaW1vcmRpYWw/LlttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IHdoYXQgaXMgdGhlIGZhaWx1cmUgZm9yIFN0YXRlIG9mIFNob2NrIC8gQ2x1dGNoIC8gSGlnaGVzdCBTdGFrZXM/XHJcbi8vIFdoZW4gc29sbywgMjdFMiBoaXRzIHBsYXllciBhbmQgMkEzNiBoaXRzIG5vYm9keS5cclxuLy8gV2hlbiBpbiBhIHBhcnR5LCAyQTM2IGhpdHMgZXZlcnlib2R5IHN0YWNraW5nIGFuZCAyN0UyIGhpdHMgbm9ib2R5LlxyXG4vLyBJcyAyN0UyIHRoZSBcImtpbGxzIHlvdSB3aGVuIG5vIGZyaWVuZHNcIiBkYW1hZ2U/IChJdCB3YXMgbGlrZSB+MTAwayBhdCBsZXZlbCA4MCkuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gQnlha2tvIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlSmFkZVN0b2EsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0J5YWtrbyBTd2VlcCB0aGUgTGVnJzogJzJBMkUnLCAvLyAyNzAgZGVncmVlIGdldCBiZWhpbmRcclxuICAgICdCeWFra28gQXJhdGFtYSBGb3JjZSBBcmF0YW1hJzogJzJBNDgnLCAvLyBwb3BwaW5nIFVucmVsZW50aW5nIEFuZ3Vpc2ggYnViYmxlc1xyXG4gICAgJ0J5YWtrbyBGaXJlIGFuZCBMaWdodG5pbmcnOiAnMkEyQycsIC8vIGxhcmdlIHJlZC9wdXJwbGUgbGluZSBhb2VcclxuICAgICdCeWFra28gSGFrdXRlaSBBcmF0YW1hJzogJzJBMjknLCAvLyB0YXJnZXRlZCBncm91bmQgY2lyY2xlIGR1cmluZyB0aWdlciBwaGFzZVxyXG4gICAgJ0J5YWtrbyBIdW5kcmVkZm9sZCBIYXZvYyAxJzogJzJBMzgnLCAvLyBsaWdodG5pbmcgcHVkZGxlcyBpbml0aWFsXHJcbiAgICAnQnlha2tvIEh1bmRyZWRmb2xkIEhhdm9jIDInOiAnMkEzOScsIC8vIGxpZ2h0bmluZyBwdWRkbGVzIG1vdmluZ1xyXG4gICAgJ0J5YWtrbyBEaXN0YW50IENsYXAnOiAnMkEzMCcsIC8vIGRvbnV0XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnQnlha2tvIEFyYXRhbWEgTWlkcGhhc2UnOiAnMkE0MicsIC8vIHBvcHBpbmcgYSBidWJibGUgZHVyaW5nIG1pZHBoYXNlXHJcbiAgICAnQnlha2tvIFN3ZWVwIFRoZSBMZWcnOiAnMkE0NicsIC8vIGRvbnV0IGR1cmluZyBtaWRwaGFzZVxyXG4gICAgJ0J5YWtrbyBJbXBlcmlhbCBHdWFyZCc6ICcyQTQzJywgLy8gbGluZSBhb2UgZnJvbSB0aWdlciBkdXJpbmcgbWlkcGhhc2VcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0J5YWtrbyBCbGVlZGluZyc6ICcxMTEnLCAvLyBzdGFuZGluZyBpbiBIYWt1dGVpJ3MgQXJhdGFtYSBjaXJjbGUgKDJBMjkpXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdCeWFra28gQm9tYm9nZW5lc2lzJzogJzJBM0InLCAvLyByZWQgc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEJ5YWtrbyBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVKYWRlU3RvYUV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgLy8gUG9wcGluZyBVbnJlbGVudGluZyBBbmd1aXNoIGJ1YmJsZXNcclxuICAgICdCeWFFeCBBcmF0YW1hJzogJzI3RjYnLFxyXG4gICAgLy8gU3RlcHBpbmcgaW4gZ3Jvd2luZyBvcmJcclxuICAgICdCeWFFeCBWYWN1dW0gQ2xhdyc6ICcyN0U5JyxcclxuICAgIC8vIExpZ2h0bmluZyBQdWRkbGVzXHJcbiAgICAnQnlhRXggSHVuZGVyZm9sZCBIYXZvYyAxJzogJzI3RTUnLFxyXG4gICAgJ0J5YUV4IEh1bmRlcmZvbGQgSGF2b2MgMic6ICcyN0U2JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdCeWFFeCBTd2VlcCBUaGUgTGVnJzogJzI3REInLFxyXG4gICAgJ0J5YUV4IEZpcmUgYW5kIExpZ2h0bmluZyc6ICcyN0RFJyxcclxuICAgICdCeWFFeCBEaXN0YW50IENsYXAnOiAnMjdERCcsXHJcbiAgICAvLyBNaWRwaGFzZSBsaW5lIGF0dGFja1xyXG4gICAgJ0J5YUV4IEltcGVyaWFsIEd1YXJkJzogJzI3RjEnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gUGluayBidWJibGUgY29sbGlzaW9uXHJcbiAgICAgIGlkOiAnQnlhRXggT21pbm91cyBXaW5kJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjdFQycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ2J1YmJsZSBjb2xsaXNpb24nLFxyXG4gICAgICAgICAgICBkZTogJ0JsYXNlbiBzaW5kIHp1c2FtbWVuZ2VzdG/Dn2VuJyxcclxuICAgICAgICAgICAgZnI6ICdDb2xsaXNpb24gYXZlYyB1bmUgYnVsbGUnLFxyXG4gICAgICAgICAgICBqYTogJ+ihneeqgScsXHJcbiAgICAgICAgICAgIGNuOiAn55u45pKeJyxcclxuICAgICAgICAgICAga286ICfsnqXtjJAg6rK57LOQ7IScIO2EsOynkCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIExha3NobWkgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FbWFuYXRpb24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0xha3NobWkgQmxpc3NmdWwgU3BlYXIgQ3Jvc3MnOiAnMjQ4QicsIC8vIGJsaXNzZnVsIGFycm93J3MgY3Jvc3MgbGluZXMgKGNhbGxlZCBCbGlzc2Z1bCBTcGVhcilcclxuICAgICdMYWtzaG1pIEJsaXNzZnVsIFNwZWFyIENyb3NzIENoYW5jaGFsYSc6ICcyNDhDJywgLy8gYmxpc3NmdWwgYXJyb3cncyBjcm9zcyBsaW5lcyAoY2FsbGVkIEJsaXNzZnVsIFNwZWFyKVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnTGFrc2htaSBCbGVlZGluZyc6ICcxNDAnLCAvLyBzdGFuZGluZyBpbiBleHBhbmRpbmcgYmx1ZSBmbG93ZXIgY2lyY2xlXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdMYWtzaG1pIERyZWFtaW5nIEtzaGF0cml5YSBUZXJyb3InOiAnNDInLCAvLyBmYWlsaW5nIElubmVyIERlbW9ucyBmcm9tIGluaXRpYWwgYWRkXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdMYWtzaG1pIEJsaXNzZnVsIEFycm93JzogJzI0ODknLCAvLyBjcm9zcyBtYXJrZXIgZHJvcHBpbmdcclxuICAgICdMYWtzaG1pIEJsaXNzZnVsIEFycm93IENoYW5jaGFsYSc6ICcyNDhBJywgLy8gY3Jvc3MgbWFya2VyIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaSBCbGlzc2Z1bCBTcGVhcic6ICcyNDk0JywgLy8gZmxvd2VyIGNpcmNsZSBkcm9wcGluZ1xyXG4gICAgJ0xha3NobWkgQmxpc3NmdWwgU3BlYXIgQ2hhbmNoYWxhJzogJzI0OTUnLCAvLyBmbG93ZXIgY2lyY2xlIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaSBUaGUgUGF0aCBvZiBMaWdodCc6ICcyNEExJywgLy8gT1QgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0xha3NobWkgVGhlIFBhbGwgb2YgTGlnaHQnOiAnMjQ5MScsIC8vIHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0xha3NobWkgRGl2aW5lIERlbmlhbCBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI0ODUnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIE5vdGU6IGZsb3dlciBjaXJjbGUgaW4gZXh0cmVtZSBpcyBjYWxsZWQgQmxpc3NmdWwgSGFtbWVyLCB3aGVyZWFzIGluIG5vcm1hbFxyXG4vLyBib3RoIHRoZSBjcm9zcyBmcm9tIHRoZSBCbGlzc2Z1bCBBcnJvdyBhbmQgdGhlIGZsb3dlciBjaXJjbGUgYXJlIGJvdGggY2FsbGVkXHJcbi8vIEJsaXNzZnVsIFNwZWFyLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIExha3NobWkgRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRW1hbmF0aW9uRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIFNwZWFyIENyb3NzJzogJzIxNTEnLCAvLyBibGlzc2Z1bCBhcnJvdydzIGNyb3NzIGxpbmVzIChjYWxsZWQgQmxpc3NmdWwgU3BlYXIpXHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIFNwZWFyIENyb3NzIENoYW5jaGFsYSc6ICcyMTUyJywgLy8gYmxpc3NmdWwgYXJyb3cncyBjcm9zcyBsaW5lcyAoY2FsbGVkIEJsaXNzZnVsIFNwZWFyKVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnTGFrc2htaUV4IEJsZWVkaW5nJzogJzE0MCcsIC8vIHN0YW5kaW5nIGluIGV4cGFuZGluZyBibHVlIGZsb3dlciBjaXJjbGVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ0xha3NobWlFeCBEcmVhbWluZyBLc2hhdHJpeWEgVGVycm9yJzogJzQyJywgLy8gZmFpbGluZyBJbm5lciBEZW1vbnMgZnJvbSBpbml0aWFsIGFkZFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTGFrc2htaUV4IERyZWFtaW5nIEtzaGF0cml5YSBUYWlsIFNsYXAnOiAnMjU4QycsIC8vIHVudGVsZWdyYXBoZWQgbm8gY2FzdCBiYXIgY2xlYXZlXHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIEFycm93JzogJzIxNEYnLCAvLyBjcm9zcyBtYXJrZXIgZHJvcHBpbmdcclxuICAgICdMYWtzaG1pRXggQmxpc3NmdWwgQXJyb3cgQ2hhbmNoYWxhJzogJzIxNTAnLCAvLyBjcm9zcyBtYXJrZXIgZHJvcHBpbmdcclxuICAgICdMYWtzaG1pRXggQmxpc3NmdWwgSGFtbWVyJzogJzIxREMnLCAvLyBmbG93ZXIgY2lyY2xlIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIEhhbW1lciBDaGFuY2hhbGEnOiAnMjFERCcsIC8vIGZsb3dlciBjaXJjbGUgZHJvcGluZ1xyXG4gICAgJ0xha3NobWlFeCBUaGUgUGF0aCBvZiBMaWdodCc6ICcyMTVBJywgLy8gT1QgY2xlYXZlXHJcbiAgICAnTGFrc2htaUV4IFRoZSBQYXRoIG9mIExpZ2h0IENoYW5jaGFsYSc6ICcyMTVCJywgLy8gT1QgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0xha3NobWlFeCBUaGUgUGFsbCBvZiBMaWdodCc6ICcyMTVDJywgLy8gc3RhY2tcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTGFrc2htaUV4IERpdmluZSBEZW5pYWwgS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyMTQ5JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIGFzc29tbcOpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogaWdub3JpbmcgRmlyZSBCcmVhdGggKDJDQkQpIHNoYXJlIHdhcm5pbmcgYmVjYXVzZSBpdCBhbHNvIGhpdHMgYWRkcyAod2hpY2ggaXMgZmluZSkuXHJcbi8vIFdlIGNvdWxkIGZpbHRlciBvdXQgaGl0dGluZyBtdWx0aXBsZSBwbGF5ZXJzLCBidXQgdGhhdCdzIGEgbG90IG9mIGVmZm9ydCBmb3IgbG93IGRhbWFnZS5cclxuXHJcbi8vIEp1c3QgZm9yIHJlZmVyZW5jZSwgdGhpcyBmaWdodCBoYXMgXCJkb3VibGVcIiBhYmlsaXRpZXMsIHdoZXJlIHRoZSBmaXJzdCBoaXRcclxuLy8gZG9lcyBubyBkYW1hZ2UuICBTb21ldGltZXMgdGhlIHNldCBvZiBwZW9wbGUgaGl0IGJ5IHRoZSBmaXJzdCBhbmQgbm90IGJ5XHJcbi8vIHRoZSBzZWNvbmQgYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHVzdWFsbHkgdGhleSBhcmUuICBTb21lIG9mIHRoZXNlIGhhdmVcclxuLy8gc3RhcnRzIHVzaW5nIGxpbmVzIChidXQgdGFyZ2V0ZWQgb24gYSBwbGF5ZXIgb3IgdW5rbm93bikuXHJcbi8vICogTWFuZ2xlICgyODZBKSwgcGFpcmVkIHdpdGggKDJDQjkpXHJcbi8vICogTWFuZ2xlICgyODdBKSwgcGFpcmVkIHdpdGggKDJDQzIpXHJcbi8vICogRmxhbWluZyBSZWNvaWwgKDI4NzApLCBwYWlyZWQgd2l0aCAoMkNCRSlcclxuLy8gKiBUYWlsIFN3aW5nICgyODZDKSwgcGFpcmVkIHdpdGggKDJDQkIpXHJcbi8vICogRmlyZSBCcmVhdGggKDI4NkUpLCBwYWlyZWQgd2l0aCAoMkNCRClcclxuLy8gKiBSdXNoICgyODZEKSwgcGFpcmVkIHdpdGggKDJDQkMpXHJcbi8vICogUnVzaCAoMjg3OCksIHBhaXJlZCB3aXRoICgyQ0MwKVxyXG4vLyAqIFN3ZWVwaW5nIEZsYW1lcyAoMjg3OSksIHBhaXJlZCB3aXRoICgyQ0MxKVxyXG4vLyAqIEZpcmViYWxsICgyODc2KSwgcGFpcmVkIHdpdGggKDJDQkEpXHJcblxyXG4vLyBOb3RlOiBSYXRoYWxvcyBFeHRyZW1lIGhhcyB0d28gcGFpcnMgb2YgRmxhbWluZyBSZWNvaWwsIGJ1dCBvbmx5IG9uZSBpbiBub3JtYWwgaGFzIGJlZW4gc2Vlbi5cclxuLy8gVGhlcmUgYXJlIDQgcGFpcnMgdG90YWw6IGh0dHBzOi8veGl2YXBpLmNvbS9zZWFyY2g/aW5kZXhlcz1hY3Rpb24mc3RyaW5nPWZsYW1pbmcrcmVjb2lsJmNvbHVtbnM9SUQmcHJldHR5PXRydWVcclxuLy8gMjg3MiAvIDJDQkYgYXBwZWFycyB0byBiZSBtaXNzaW5nLiAgQXNzdW1lIHRoYXQgaXQgZXhpc3RzLCBldmVuIGlmIGl0IGhhc24ndCBiZWVuIHNlZW4uXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gUmF0aGFsb3MgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVHcmVhdEh1bnQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JhdGhhbG9zIE1hbmdsZSAxJzogJzJDQjknLCAvLyBmaXJzdCBwaGFzZSBmcm9udGFsIGNvbmFsXHJcbiAgICAnUmF0aGFsb3MgTWFuZ2xlIDInOiAnMkNDMicsIC8vIHNlY29uZCBwaGFzZSBjb25hbCBzd2lwZVxyXG4gICAgJ1JhdGhhbG9zIFJ1c2ggMSc6ICcyQ0JDJywgLy8gZmlyc3QgcGhhc2UgY2hhcmdlIGF0dGFja1xyXG4gICAgJ1JhdGhhbG9zIFJ1c2ggMic6ICcyQ0MwJywgLy8gc2Vjb25kIHBoYXNlIGNoYXJnZSBhdHRhY2ssIGdpdmVzIHBvaXNvblxyXG4gICAgJ1JhdGhhbG9zIFRhaWwgU21hc2gnOiAnMjg2QicsIC8vIGZpcnN0IHBoYXNlIGxlZnQvcmVhciBjb25hbCwgcGFpcmVkIHdpdGggTWFuZ2xlICgyQ0I5KVxyXG4gICAgJ1JhdGhhbG9zIFRhaWwgU3dpbmcnOiAnMkNCQicsIC8vIGZpcnN0IHBoYXNlIHJpZ2h0IHNpZGUgYXR0YWNrXHJcbiAgICAnUmF0aGFsb3MgRmxhbWluZyBSZWNvaWwgMSc6ICcyQ0JFJywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zIEZsYW1pbmcgUmVjb2lsIDInOiAnMkNCRicsIC8vIGZyb250YWwgY29uYWwgKyBrbm9ja2JhY2tcclxuICAgICdSYXRoYWxvcyBTdGVwcGUgU2hlZXAgTHVsbGFieSc6ICcyODdCJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnUmF0aGFsb3MgU3RlcHBlIFlhbWFhIEhlYWQgQnV0dCc6ICcyODdDJywgLy8gbGluZSBhb2VcclxuICAgICdSYXRoYWxvcyBTdGVwcGUgQ29ldXJsIFdpZGUgQmxhc3Rlcic6ICcyODdEJywgLy8gdmVyeSBsYXJnZSBjb25hbFxyXG4gICAgJ1JhdGhhbG9zIEdhcnVsYSBSdXNoJzogJzI4N0YnLCAvLyBsaW5lIGNoYXJnZSBpbnRvIHRoZSBhcmVuYVxyXG4gICAgJ1JhdGhhbG9zIFN3ZWVwaW5nIEZsYW1lcyc6ICcyQ0MxJywgLy8gc2Vjb25kIHBoYXNlIGZyb250YWwgY29uYWxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1JhdGhhbG9zIEdhcnVsYSBIZWF2ZSc6ICcyODdFJywgLy8gdW50ZWxlZ3JhcGhlZCBjb25hbCBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnUmF0aGFsb3MgRmlyZWJhbGwnOiAnMkNCQScsIC8vIHNlY29uZCBwaGFzZSBzdGFjayB0aGF0IGxlYXZlcyBhIGZpcmUgcHVkZGxlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogaWdub3JpbmcgRmlyZSBCcmVhdGggKDJBM0UpIHNoYXJlIHdhcm5pbmcgYmVjYXVzZSBpdCBhbHNvIGhpdHMgYWRkcyAod2hpY2ggaXMgZmluZSkuXHJcbi8vIFdlIGNvdWxkIGZpbHRlciBvdXQgaGl0dGluZyBtdWx0aXBsZSBwbGF5ZXJzLCBidXQgdGhhdCdzIGEgbG90IG9mIGVmZm9ydCBmb3IgbG93IGRhbWFnZS5cclxuXHJcbi8vIEp1c3QgZm9yIHJlZmVyZW5jZSwgdGhpcyBmaWdodCBoYXMgXCJkb3VibGVcIiBhYmlsaXRpZXMsIHdoZXJlIHRoZSBmaXJzdCBoaXRcclxuLy8gZG9lcyBubyBkYW1hZ2UuICBTb21ldGltZXMgdGhlIHNldCBvZiBwZW9wbGUgaGl0IGJ5IHRoZSBmaXJzdCBhbmQgbm90IGJ5XHJcbi8vIHRoZSBzZWNvbmQgYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHVzdWFsbHkgdGhleSBhcmUuICBTb21lIG9mIHRoZXNlIGhhdmVcclxuLy8gc3RhcnRzIHVzaW5nIGxpbmVzIChidXQgdGFyZ2V0ZWQgb24gYSBwbGF5ZXIgb3IgdW5rbm93bikuXHJcbi8vICogTWFuZ2xlICgyODUzKSwgcGFpcmVkIHdpdGggKDI4NUMpXHJcbi8vICogTWFuZ2xlICgyODYzKSwgcGFpcmVkIHdpdGggKDJDQjcpXHJcbi8vICogRmxhbWluZyBSZWNvaWwgKDI4NTkpLCBwYWlyZWQgd2l0aCAoMkNCMylcclxuLy8gKiBGbGFtaW5nIFJlY29pbCAoMjg1QiksIHBhaXJlZCB3aXRoICgyQ0I0KVxyXG4vLyAqIFRhaWwgU3dpbmcgKDI4NTUpLCBwYWlyZWQgd2l0aCAoMkEzQylcclxuLy8gKiBGaXJlIEJyZWF0aCAoMjg1NyksIHBhaXJlZCB3aXRoICgyQTNFKVxyXG4vLyAqIFJ1c2ggKDI4NTYpLCBwYWlyZWQgd2l0aCAoMkEzRClcclxuLy8gKiBSdXNoICgyODYxKSwgcGFpcmVkIHdpdGggKDJDQjUpXHJcbi8vICogU3dlZXBpbmcgRmxhbWVzICgyODYyKSwgcGFpcmVkIHdpdGggKDJDQjYpXHJcbi8vICogRmlyZWJhbGwgMSAoMjg1RiksIHBhaXJlZCB3aXRoICgyODYwKVxyXG4vLyAqIEZpcmViYWxsIDIvMyAoMkQwQSksIHBhaXJlZCB3aXRoICgyRDBCKVxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFJhdGhhbG9zIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUdyZWF0SHVudEV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JhdGhhbG9zRXggTWFuZ2xlIDEnOiAnMjg1QycsIC8vIGZpcnN0IHBoYXNlIGZyb250YWwgOTAgZGVncmVlIGNvbmFsXHJcbiAgICAnUmF0aGFsb3NFeCBNYW5nbGUgMic6ICcyQ0I3JywgLy8gc2Vjb25kIHBoYXNlIGNvbmFsIHN3aXBlXHJcbiAgICAnUmF0aGFsb3NFeCBSdXNoIDEnOiAnMkEzRCcsIC8vIGZpcnN0IHBoYXNlIGNoYXJnZSBhdHRhY2tcclxuICAgICdSYXRoYWxvc0V4IFJ1c2ggMic6ICcyQ0I1JywgLy8gc2Vjb25kIHBoYXNlIGNoYXJnZSBhdHRhY2ssIGdpdmVzIHBvaXNvblxyXG4gICAgJ1JhdGhhbG9zRXggVGFpbCBTbWFzaCc6ICcyODU0JywgLy8gZmlyc3QgcGhhc2UgbGVmdC9yZWFyIGNvbmFsLCBwYWlyZWQgd2l0aCBNYW5nbGUgKDI4NUMpXHJcbiAgICAnUmF0aGFsb3NFeCBUYWlsIFN3aW5nJzogJzJBM0MnLCAvLyBmaXJzdCBwaGFzZSByaWdodCBzaWRlIGF0dGFja1xyXG4gICAgJ1JhdGhhbG9zRXggRmxhbWluZyBSZWNvaWwgMSc6ICcyQ0IzJywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zRXggRmxhbWluZyBSZWNvaWwgMic6ICcyQ0I0JywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zRXggU3RlcHBlIFNoZWVwIEx1bGxhYnknOiAnMjg2NCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1JhdGhhbG9zRXggU3RlcHBlIFlhbWFhIEhlYWQgQnV0dCc6ICcyODY1JywgLy8gbGluZSBhb2VcclxuICAgICdSYXRoYWxvc0V4IFN0ZXBwZSBDb2V1cmwgV2lkZSBCbGFzdGVyJzogJzI4NjYnLCAvLyB2ZXJ5IGxhcmdlIGNvbmFsXHJcbiAgICAnUmF0aGFsb3NFeCBHYXJ1bGEgUnVzaCc6ICcyODY4JywgLy8gbGluZSBjaGFyZ2UgaW50byB0aGUgYXJlbmFcclxuICAgICdSYXRoYWxvc0V4IFN3ZWVwaW5nIEZsYW1lcyc6ICcyQ0I2JywgLy8gc2Vjb25kIHBoYXNlIGZyb250YWwgY29uYWxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1JhdGhhbG9zRXggR2FydWxhIEhlYXZlJzogJzI4NjcnLCAvLyB1bnRlbGVncmFwaGVkIGNvbmFsIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdSYXRoYWxvc0V4IEZpcmViYWxsIDEnOiAnMjg2MCcsIC8vIHNlY29uZCBwaGFzZSBzdGFjayB0cmlwbGUgZmlyZWJhbGwgaW5pdGlhbFxyXG4gICAgJ1JhdGhhbG9zRXggRmlyZWJhbGwgMic6ICcyRDBCJywgLy8gc2Vjb25kIHBoYXNlIHN0YWNrIHRyaXBsZSBmaXJlYmFsbCBzZWNvbmQgYW5kIHRoaXJkXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNlaXJ5dSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVdyZWF0aE9mU25ha2VzLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTZWlyeXUgT25teW8gU2lnaWwnOiAnM0EwNycsIC8vIGNlbnRlcmVkIFwiZ2V0IG91dFwiIGNpcmNsZVxyXG4gICAgJ1NlaXJ5dSBTZXJwZW50LUV5ZSBTaWdpbCc6ICczQTA4JywgLy8gZG9udXRcclxuICAgICdTZWlyeXUgRm9ydHVuZS1CbGFkZSBTaWdpbCc6ICczODA2JywgLy8gS3VqaS1LaXJpICgzN0UxKSBsaW5lc1xyXG4gICAgJ1NlaXJ5dSBJd2EtTm8tU2hpa2kgMTAwLVRvbnplIFN3aW5nJzogJzNDMUUnLCAvLyBjZW50ZXJlZCBjaXJjbGVzICh0YW5rIHRldGhlcnMgaW4gZXh0cmVtZSlcclxuICAgICdTZWlyeXUgVGVuLU5vLVNoaWtpIFlhbWEtS2FndXJhJzogJzM4MTMnLCAvLyBibHVlIGxpbmVzIGR1cmluZyBtaWRwaGFzZSAvIGZpbmFsIHBoYXNlIGFkZHNcclxuICAgICdTZWlyeXUgSXdhLU5vLVNoaWtpIEthbmFibyc6ICczQzIwJywgLy8gdW5wYXNzYWJsZSB0ZXRoZXIgd2hpY2ggdGFyZ2V0cyBhIGxhcmdlIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBHcmVhdCBUeXBob29uIDEnOiAnMzgxMCcsIC8vIG91dHNpZGUgcmluZyBvZiB3YXRlciBkdXJpbmcgQ291cnNpbmcgUml2ZXJcclxuICAgICdTZWlyeXUgR3JlYXQgVHlwaG9vbiAyJzogJzM4MTEnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1IEdyZWF0IFR5cGhvb24gMyc6ICczODEyJywgLy8gb3V0c2lkZSByaW5nIG9mIHdhdGVyIGR1cmluZyBDb3Vyc2luZyBSaXZlclxyXG4gICAgJ1NlaXJ5dSBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAxJzogJzM3MDcnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAyJzogJzM3MDgnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBGb3JjZSBPZiBOYXR1cmUnOiAnMzgwOScsIC8vIHN0YW5kaW5nIGluIHRoZSBtaWRkbGUgY2lyY2xlIGR1cmluZyBrbm9ja2JhY2sgKDM4MEEpXHJcbiAgICAnU2Vpcnl1IFNlcnBlbnRcXCdzIEphd3MnOiAnM0E4RCcsIC8vIGZhaWxpbmcgdG93ZXJzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTZWlyeXUgU2VycGVudCBEZXNjZW5kaW5nJzogJzM4MDQnLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gICAgJ1NlaXJ5dSBBa2EtTm8tU2hpa2kgUmVkIFJ1c2gnOiAnM0MxRCcsIC8vIHRldGhlciBjaGFyZ2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1NlaXJ5dSBJbmZpcm0gU291bCc6ICczN0ZEJywgLy8gdGFuayBidXN0ZXIgY2lyY3VsYXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1NlaXJ5dSBBby1Oby1TaGlraSBCbHVlIEJvbHQnOiAnM0MxQycsIC8vIHRldGhlciBzaGFyZVxyXG4gICAgJ1NlaXJ5dSBGb3JiaWRkZW4gQXJ0cyAxJzogJzNDODInLCAvLyBsaW5lIHN0YWNrIHNoYXJlIGhpdCAxXHJcbiAgICAnU2Vpcnl1IEZvcmJpZGRlbiBBcnRzIDInOiAnM0M3MicsIC8vIGxpbmUgc3RhY2sgc2hhcmUgaGl0IDJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBJbmZpcm0gU291bCAoMzdENCkgaGl0dGluZyBDdXJzZWtlZXBlciAoMzdEMikgdGFyZ2V0P1xyXG4vLyBUT0RPOiB0YWtpbmcgRm9yYmlkZGVuIEFydHMgIzIgKDM3QzgpIHdpdGggdnVsbiBzdGFjayBmcm9tICMxP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNlaXJ5dSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXcmVhdGhPZlNuYWtlc0V4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NlaXJ5dUV4IE9ubXlvIFNpZ2lsIDEnOiAnM0EwMScsIC8vIGNlbnRlcmVkIFwiZ2V0IG91dFwiIGNpcmNsZSAocGhhc2UgMSlcclxuICAgICdTZWlyeXVFeCBPbm15byBTaWdpbCAyJzogJzNBMDMnLCAvLyBjZW50ZXJlZCBcImdldCBvdXRcIiBjaXJjbGUgKHBoYXNlIDIgZmlyc3QpXHJcbiAgICAnU2Vpcnl1RXggT25teW8gU2lnaWwgMyc6ICczQTA2JywgLy8gY2VudGVyZWQgXCJnZXQgb3V0XCIgY2lyY2xlIChwaGFzZSAyIHNlY29uZClcclxuICAgICdTZWlyeXVFeCBTZXJwZW50LUV5ZSBTaWdpbCAxJzogJzNBMDUnLCAvLyBkb251dCAocGhhc2UgMiBmaXJzdClcclxuICAgICdTZWlyeXVFeCBTZXJwZW50LUV5ZSBTaWdpbCAyJzogJzNBMDQnLCAvLyBkb251dCAocGhhc2UgMiBzZWNvbmQpXHJcbiAgICAnU2Vpcnl1RXggRm9ydHVuZS1CbGFkZSBTaWdpbCc6ICczN0UyJywgLy8gS3VqaS1LaXJpICgzN0UxKSBsaW5lc1xyXG4gICAgJ1NlaXJ5dUV4IENhbGFtaXR5LUJsYWRlIFNpZ2lsJzogJzM3RTMnLCAvLyBLdWppLUtpcmkgKDM3RTEpIGZvbGxvdy11cCBsaW5lc1xyXG4gICAgJ1NlaXJ5dUV4IEl3YS1Oby1TaGlraSAxMDAtVG9uemUgU3dpbmcnOiAnMzdFRCcsIC8vIGNlbnRlcmVkIGNpcmNsZXNcclxuICAgICdTZWlyeXVFeCBUZW4tTm8tU2hpa2kgWWFtYS1LYWd1cmEnOiAnM0MyMScsIC8vIGJsdWUgbGluZXMgZHVyaW5nIG1pZHBoYXNlIC8gZmluYWwgcGhhc2UgYWRkc1xyXG4gICAgJ1NlaXJ5dUV4IE51bWEtTm8tU2hpa2kgU3RvbmVza2luJzogJzM3RjQnLCAvLyBmYWlsaW5nIHRvIHNpbGVuY2UgYWRkXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAxJzogJzM3RjgnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAyJzogJzM3RjknLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAzJzogJzM3RkEnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiA0JzogJzM3RkInLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggWWFtYS1Oby1TaGlraSBIYW5kcHJpbnQgMSc6ICczNzA3JywgLy8gaGFsZiBhcmVuYSBjbGVhdmVcclxuICAgICdTZWlyeXVFeCBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAyJzogJzM3MDgnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dUV4IEZvcmNlIE9mIE5hdHVyZSc6ICczN0VBJywgLy8gc3RhbmRpbmcgaW4gdGhlIG1pZGRsZSBjaXJjbGUgZHVyaW5nIGtub2NrYmFjayAoMzgwQSlcclxuICAgICdTZWlyeXVFeCBTZXJwZW50IERlc2NlbmRpbmcgQ2lyY2xlJzogJzM3REUnLCAvLyBiYWl0ZWQgY2lyY2xlcyB3aXRoIHRvd2Vyc1xyXG4gICAgJ1NlaXJ5dUV4IFNlcnBlbnRcXCdzIEphd3MnOiAnMzdFMCcsIC8vIGZhaWxpbmcgdG93ZXJzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTZWlyeXVFeCBTZXJwZW50IERlc2NlbmRpbmcgU3ByZWFkJzogJzM3REQnLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gICAgJ1NlaXJ5dUV4IEFrYS1Oby1TaGlraSBSZWQgUnVzaCc6ICczN0YxJywgLy8gdGV0aGVyIGNoYXJnZVxyXG4gICAgJ1NlaXJ5dUV4IEl3YS1Oby1TaGlraSBLYW5hYm8nOiAnMzdFRScsIC8vIHRldGhlciB3aGljaCB0YXJnZXRzIGEgbGFyZ2UgY29uYWwgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdTZWlyeXVFeCBJbmZpcm0gU291bCc6ICczN0Q0JywgLy8gdGFuayBidXN0ZXIgY2lyY3VsYXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1NlaXJ5dUV4IEFvLU5vLVNoaWtpIEJsdWUgQm9sdCc6ICczN0YwJywgLy8gdGV0aGVyIHNoYXJlXHJcbiAgICAnU2Vpcnl1RXggRm9yYmlkZGVuIEFydHMgMSc6ICczN0M3JywgLy8gbGluZSBzdGFjayBzaGFyZSBoaXQgMVxyXG4gICAgJ1NlaXJ5dUV4IEZvcmJpZGRlbiBBcnRzIDInOiAnMzdDOCcsIC8vIGxpbmUgc3RhY2sgc2hhcmUgaGl0IDJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBTaGlucnl1IE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlUm95YWxNZW5hZ2VyaWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXUgQWtoIFJoYWknOiAnMUZBNicsIC8vIFNreSBsYXNlcnMgYWxvbmdzaWRlIEFraCBNb3JuLlxyXG4gICAgJ1NoaW5yeXUgQmxhemluZyBUcmFpbCc6ICcyMjFBJywgLy8gUmVjdGFuZ2xlIEFvRXMsIGludGVybWlzc2lvbiBhZGRzLlxyXG4gICAgJ1NoaW5yeXUgQ29sbGFwc2UnOiAnMjIxOCcsIC8vIENpcmNsZSBBb0VzLCBpbnRlcm1pc3Npb24gYWRkc1xyXG4gICAgJ1NoaW5yeXUgRHJhZ29uZmlzdCc6ICcyNEYwJywgLy8gR2lhbnQgcHVuY2h5IGNpcmNsZSBpbiB0aGUgY2VudGVyLlxyXG4gICAgJ1NoaW5yeXUgRWFydGggQnJlYXRoJzogJzFGOUQnLCAvLyBDb25hbCBhdHRhY2tzIHRoYXQgYXJlbid0IGFjdHVhbGx5IEVhcnRoIFNoYWtlcnMuXHJcbiAgICAnU2hpbnJ5dSBHeXJlIENoYXJnZSc6ICcxRkE4JywgLy8gR3JlZW4gZGl2ZSBib21iIGF0dGFjay5cclxuICAgICdTaGlucnl1IFNwaWtlc2ljbGUnOiAnMUZBYCcsIC8vIEJsdWUtZ3JlZW4gbGluZSBhdHRhY2tzIGZyb20gYmVoaW5kLlxyXG4gICAgJ1NoaW5yeXUgVGFpbCBTbGFwJzogJzFGOTMnLCAvLyBSZWQgc3F1YXJlcyBpbmRpY2F0aW5nIHRoZSB0YWlsJ3MgbGFuZGluZyBzcG90cy5cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXUgTGV2aW5ib2x0JzogJzFGOUMnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gSWN5IGZsb29yIGF0dGFjay5cclxuICAgICAgaWQ6ICdTaGlucnl1IERpYW1vbmQgRHVzdCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRoaW4gSWNlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEYnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2xpZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+a7keOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5ruR6JC9JyxcclxuICAgICAgICAgICAga286ICfrr7jrgYTrn6zsp5AnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGlucnl1IFRpZGFsIFdhdmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcxRjhCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIHBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBLbm9ja2JhY2sgZnJvbSBjZW50ZXIuXHJcbiAgICAgIGlkOiAnU2hpbnJ5dSBBZXJpYWwgQmxhc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcxRjkwJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIHBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogSGVsbGZpcmUgKDI1REIpIHdpdGhvdXQgRmlyZSBSZXNpc3RhbmNlIFVwICgyMDgpLlxyXG4vLyBUT0RPOiBMZXZpbmJvbHQgKDI1RUIpIHdoaWxlIGhhdmluZyBMaWdodG5pbmcgUmVzaXN0YW5jZSBEb3duIElJICg0RUMpLlxyXG4vLyBUT0RPOiBIeXBlcm5vdmEgKDI1RTkpIHdoaWxlIG5vdCBoYXZpbmcgRGVlcCBGcmVlemUgKDRFNikgb3IgRmlyZSBSZXNpc3RhbmNlIFVwICgyMDgpLlxyXG4vLyBUT0RPOiBEb29tIChEMikgZXhwaXJpbmcuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gU2hpbnJ5dSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRTaGlucnl1c0RvbWFpbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU2hpbnJ5dUV4IEJ1cm5pbmcgQ2hhaW5zJzogJzI2MDInLCAvLyBub3QgYnJlYWtpbmcgY2hhaW5zIGZhc3QgZW5vdWdoXHJcbiAgICAnU2hpbnJ5dUV4IEljaWNsZSBJY2ljbGUgSW1wYWN0JzogJzI1RUYnLCAvLyBpY2ljbGVzIGxhbmRpbmdcclxuICAgICdTaGlucnl1RXggSWNpY2xlIFNwaWtlc2ljbGUnOiAnMjVGMCcsIC8vIGljaWNsZSBkYXNoXHJcbiAgICAnU2hpbnJ5dUV4IFRhaWwgU2xhcCc6ICcyNUUyJywgLy8gdGFpbCBhZGQgYXBwZWFyaW5nXHJcbiAgICAnU2hpbnJ5dUV4IERyYWdvbmZpc3QnOiAnMjYxMScsIC8vIGdpYW50IHB1bmNoeSBjaXJjbGUgaW4gdGhlIGNlbnRlci5cclxuICAgICdTaGlucnl1RXggR3lyZSBDaGFyZ2UnOiAnMjYwMycsIC8vIHBoYXNlIDEgbGFyZ2UgZGl2ZSBhdHRhY2tcclxuICAgICdTaGlucnl1RXggR2lucnl1IEZpcmViYWxsJzogJzI2MEInLCAvLyB0YXJnZXRlZCBjaXJjbGUgZHVyaW5nIGFkZCBwaGFzZVxyXG4gICAgJ1NoaW5yeXVFeCBIYWtraW5yeXUgQmxhemluZyBUcmFpbCc6ICcyNjA5JywgLy8gd2lkZSBsaW5lIGR1cmluZyBhZGQgcGhhc2VcclxuICAgICdTaGlucnl1RXggVGFpbCBTcGl0JzogJzFERDEnLCAvLyBibHVlIHB1Y2sgZHVyaW5nIGtub2NrYmFja1xyXG4gICAgJ1NoaW5yeXVFeCBBZXRoZXJpYWwgUmF5JzogJzI2MTgnLCAvLyBsYXNlcnMgd2hpbGUgcnVubmluZyBhbG9uZyB0aGUgdGFpbFxyXG4gICAgJ1NoaW5yeXVFeCBMZXZpbmJvbHQnOiAnMjcyNScsIC8vIGJhaXRlZCBsaWdodG5pbmcgZHVyaW5nIGZpbmFsIHBoYXNlXHJcbiAgICAnU2hpbnJ5dUV4IFdvcm13YWlsJzogJzI2NDgnLCAvLyBkb251dCBhdHRhY2tcclxuICAgICdTaGlucnl1RXggQmVuaWdodGluZyBCcmVhdGgnOiAnMjY0QScsIC8vIDkwIGRlZ3JlZSBjb25hbCBhdHRhY2tcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXVFeCBMZXZpbmJvbHQnOiAnMjVFQScsIC8vIHVudGVsZWdyYXBoZWQgbGlnaHRuaW5nIHNwcmVhZFxyXG4gICAgJ1NoaW5yeXVFeCBFYXJ0aCBCcmVhdGgnOiAnMjVFRCcsIC8vIGVhcnRoc2hha2VyLWVzcXVlIGNvbmFsIGF0dGFja3NcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnU2hpbnJ5dUV4IEh5cGVybm92YSc6ICcyNUU5JywgLy8gc3RhY2sgaW4gcHVkZGxlIGRhbWFnZVxyXG4gICAgJ1NoaW5yeXVFeCBBdG9taWMgUmF5JzogJzI2NEQnLCAvLyBwYWlyIHN0YWNrIG1hcmtlcnMgaW4gZmluYWwgcGhhc2VcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEljeSBmbG9vciBhdHRhY2suXHJcbiAgICAgIGlkOiAnU2hpbnJ5dUV4IERpYW1vbmQgRHVzdCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRoaW4gSWNlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEYnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2xpZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+a7keOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5ruR6JC9JyxcclxuICAgICAgICAgICAga286ICfrr7jrgYTrn6zsp5AnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGlucnl1RXggVGlkYWwgV2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI1REEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEtub2NrYmFjayBmcm9tIGNlbnRlci5cclxuICAgICAgaWQ6ICdTaGlucnl1IEFlcmlhbCBCbGFzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI1REYnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1c2FubyBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVBvb2xPZlRyaWJ1dGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1N1c2FubyBSYXNlbiBLYWlreW8nOiAnMjAxRScsIC8vIGNpcmNsZXNcclxuICAgICdTdXNhbm8gU2Vhc3BsaXR0ZXIgMSc6ICcyMDI4JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vIFNlYXNwbGl0dGVyIDInOiAnMjAyOScsIC8vIGtub2NrYmFjayArIHNraW5ueSBsaW5lIHNhZmUgem9uZVxyXG4gICAgJ1N1c2FubyBTZWFzcGxpdHRlciAzJzogJzIwMkEnLCAvLyBrbm9ja2JhY2sgKyBza2lubnkgbGluZSBzYWZlIHpvbmVcclxuICAgICdTdXNhbm8gU2Vhc3BsaXR0ZXIgNCc6ICcyMDJCJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vIERhcmsgQ2xvdWQgVGhlIFBhcnRpbmcgQ2xvdWRzJzogJzI1OUYnLCAvLyBwdXJwbGUgbGluZSBhb2VzIGZyb20gY2xvdWRzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3VzYW5vIEFtZS1Oby1NdXJha3Vtbyc6ICcyMThDJywgLy8gc3RhbmRpbmcgaW4gdGhlIHJlZCBsaW5lIGFmdGVyIG1pZHBoYXNlXHJcbiAgICAnU3VzYW5vIEFtYS1Oby1Jd2F0byBUaGUgU2VhbGVkIEdhdGUnOiAnMjAyNScsIC8vIG5vdCBraWxsaW5nIHRoZSByb2NrIGphaWxzIGluIHRpbWVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N1c2FubyBEYXJrIExldmluIFNob2NrJzogJzIwNDMnLCAvLyBvcmJzIGR1cmluZyBtaWRwaGFzZVxyXG4gICAgJ1N1c2FubyBTdG9ybXNwbGl0dGVyJzogJzIwMjMnLCAvLyB0YW5rIGJ1c3RlciBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnU3VzYW5vIEJyaWdodHN0b3JtJzogJzIwMjAnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBFbGVjdHJvY3V0aW9uICgyMDNEKSBjb21lcyBmcm9tIHRoZSBsZXZpbmJvbHQgbm90IG1vdmluZ1xyXG4vLyBXZSBjb3VsZCBibGFtZSB0aGUgcGVyc29uIHdpdGggMDA2RSBhbmQgYmxhbWUgdGhlIHBlcnNvbiBoaXQgd2l0aCAwMDZGICh0aGUgc3R1bik/XHJcbi8vIFRPRE86IGFkZCBkZWF0aCByZWFzb24gZm9yIFNpbmtpbmcgKDRGOSkgZWZmZWN0P1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1c2FubyBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVQb29sT2ZUcmlidXRlRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMSc6ICcyMDM4JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMic6ICcyMDM5JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMyc6ICcyMDNBJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgNCc6ICcyMDNCJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggUmFzZW4gS2Fpa3lvJzogJzIwMkUnLCAvLyBjaXJjbGVzXHJcbiAgICAnU3VzYW5vRXggQ2h1cm5pbmcnOiAnMjAzRicsIC8vIG5vdCBzdG9wcGluZ1xyXG4gICAgJ1N1c2Fub0V4IFRodW5kZXJoZWFkIFRoZSBQYXJ0aW5nIENsb3Vkcyc6ICcyMDQxJywgLy8gcHVycGxlIGxpZ2h0bmluZyBsaW5lXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3VzYW5vRXggQW1lLU5vLU11cmFrdW1vJzogJzIxOEMnLCAvLyBzdGFuZGluZyBpbiByZWQgbGluZSBhZnRlciBtaWRwaGFzZVxyXG4gICAgJ1N1c2Fub0V4IEFtYS1Oby1Jd2F0byBUaGUgU2VhbGVkIEdhdGUnOiAnMjAzNScsIC8vIG5vdCBraWxsaW5nIHRoZSByb2NrIGphaWxzIGluIHRpbWVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N1c2Fub0V4IERhcmsgTGV2aW4gU2hvY2snOiAnMjA0NCcsIC8vIG1pZHBoYXNlIG9yYlxyXG4gICAgJ1N1c2Fub0V4IFN0b3Jtc3BsaXR0ZXInOiAnMjAzMycsIC8vIHRhbmsgYnVzdGVyIGxjZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdTdXNhbm9FeCBCcmlnaHRzdG9ybSc6ICcyMDMwJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gU3V6YWt1IE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuSGVsbHNLaWVyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTdXpha3UgTm9ybWFsIEFzaGVzIFRvIEFzaGVzJzogJzMyMUYnLCAvLyBTY2FybGV0IExhZHkgYWRkLCByYWlkd2lkZSBleHBsb3Npb24gaWYgbm90IGtpbGxlZCBpbiB0aW1lXHJcbiAgICAnU3V6YWt1IE5vcm1hbCBGbGVldGluZyBTdW1tZXInOiAnMzIyMycsIC8vIENvbmUgQW9FIChyYW5kb21seSB0YXJnZXRlZClcclxuICAgICdTdXpha3UgTm9ybWFsIFdpbmcgQW5kIEEgUHJheWVyJzogJzMyMjUnLCAvLyBDaXJjbGUgQW9FcyBmcm9tIHVua2lsbGVkIHBsdW1lc1xyXG4gICAgJ1N1emFrdSBOb3JtYWwgUGhhbnRvbSBIYWxmJzogJzMyMzMnLCAvLyBHaWFudCBoYWxmLWFyZW5hIEFvRSBmb2xsb3ctdXAgYWZ0ZXIgdGFuayBidXN0ZXJcclxuICAgICdTdXpha3UgTm9ybWFsIFdlbGwgT2YgRmxhbWUnOiAnMzIzNicsIC8vIExhcmdlIHJlY3RhbmdsZSBBb0UgKHJhbmRvbWx5IHRhcmdldGVkKVxyXG4gICAgJ1N1emFrdSBOb3JtYWwgSG90c3BvdCc6ICczMjM4JywgLy8gUGxhdGZvcm0gZmlyZSB3aGVuIHRoZSBydW5lcyBhcmUgYWN0aXZhdGVkXHJcbiAgICAnU3V6YWt1IE5vcm1hbCBTd29vcCc6ICczMjNCJywgLy8gU3RhciBjcm9zcyBsaW5lIEFvRXNcclxuICAgICdTdXpha3UgTm9ybWFsIEJ1cm4nOiAnMzIzRCcsIC8vIFRvd2VyIG1lY2hhbmljIGZhaWx1cmUgb24gSW5jYW5kZXNjZW50IEludGVybHVkZSAocGFydHkgZmFpbHVyZSwgbm90IHBlcnNvbmFsKVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnU3V6YWt1IE5vcm1hbCBSZWtpbmRsZSc6ICczMjM1JywgLy8gUHVycGxlIHNwcmVhZCBjaXJjbGVzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1N1emFrdSBOb3JtYWwgUnV0aGxlc3MgUmVmcmFpbicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzMyMzAnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64KZ7IKsJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBUT0RPOiBSZWtpbmRsZSAoMzJFMCkgaGl0dGluZyBtdWx0aXBsZSBhZGRzLCBhbnkgb3RoZXIgcGxheWVycyxcclxuLy8gb3IgaGl0dGluZyBhZGRzIGJlZm9yZSB0aGV5J3ZlIGJlZW4ga2lsbGVkIG9uY2UgaXMgYSBtaXN0YWtlLlxyXG4vLyBIb3dldmVyLCB0aGVyZSBpcyBhIHBvaW50IHdoZXJlIGl0IHNob3VsZCBoaXQgb25lIGFkZCBpbiB0aGVcclxuLy8gYmVnaW5uaW5nLiBUaGlzIGFsc28gaGFwcGVucyBsYXRlciBpbiB0aGUgZmlnaHQgdG9vLCB3aGVyZSBpdFxyXG4vLyBzaG91bGQgbm90IGhpdCBhbnlib2R5IGVsc2UsIGJ1dCB1bmZvcnR1bmF0ZWx5IGFsc28gY291bnRzIGFzXHJcbi8vIGhpdHRpbmcgbXVsdGlwbGUgcGVvcGxlIHdoZW4gaXQgaGl0cyBTdXpha3UuICBTbywgdGhlcmUncyByZWFsbHlcclxuLy8gbm90IGFueSBnb29kIHdheSB0byB3cml0ZSBhIG1pc3Rha2UgdHJpZ2dlciBmb3IgdGhpcyBhYmlsaXR5LlxyXG5cclxuLy8gVE9ETzogd2hhdCBpcyBnZXR0aW5nIGhpdCBieSBhbiBvcmIgZHVyaW5nIENsb3NlLVF1YXJ0ZXIgQ3Jlc2NlbmRvP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1emFrdSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5IZWxsc0tpZXJFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTdXpha3VFeCBSb3V0JzogJzMyRjAnLCAvLyB1bnRhcmdldGFibGUgcGhhc2UgMSBjaGFyZ2UgYWNyb3NzIHRoZSBhcmVuYVxyXG4gICAgJ1N1emFrdUV4IEZsZWV0aW5nIFN1bW1lcic6ICczMkQzJywgLy8gdGFyZ2V0ZWQgY29uYWxcclxuICAgICdTdXpha3VFeCBTY2FybGV0IFRhaWwgRmVhdGhlciBXaW5nIEFuZCBBIFByYXllcic6ICczMkQ0JywgLy8gY2lyY2xlIGFvZSBmcm9tIHVua2lsbGVkIHBsdW1lXHJcbiAgICAnU3V6YWt1RXggU2NhcmxldCBQbHVtZSBXaW5nIEFuZCBBIFByYXllcic6ICczMjQ0JywgLy8gY2lyY2xlIGFvZSBmcm9tIHVua2lsbGVkIHBsdW1lXHJcbiAgICAnU3V6YWt1RXggQXNoZXMgVG8gQXNoZXMnOiAnMzJEMCcsIC8vIFNjYXJsZXQgTGFkeSBhZGQsIHJhaWR3aWRlIGV4cGxvc2lvbiBpZiBub3Qga2lsbGVkIGluIHRpbWVcclxuICAgICdTdXpha3VFeCBXZWxsIE9mIEZsYW1lJzogJzMyRTEnLCAvLyB0YXJnZXRlZCB3aWRlIGxpbmUgYW9lXHJcbiAgICAnU3V6YWt1RXggSG90c3BvdCc6ICczMkUyJywgLy8gcGxhdGZvcm0gZmlyZSB3aGVuIHRoZSBydW5lcyBhcmUgYWN0aXZhdGVkXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3V6YWt1RXggSW1tb2xhdGUnOiAnMzJFNicsIC8vIFRvd2VyIG1lY2hhbmljIGZhaWx1cmUgb24gSW5jYWRlc2NlbnQgSW50ZXJsdWRlIChwYXJ0eSBmYWlsdXJlLCBub3QgcGVyc29uYWwpXHJcbiAgICAnU3V6YWt1RXggUGhhbnRvbSBGbHVycnknOiAnMzJERScsIC8vIFwicGhhbnRvbSBoYWxmXCIgZmluYWwgaGl0IG9mIFBoYW50b20gRmx1cnJ5XHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1N1emFrdUV4IFNjYXRoaW5nIE5ldCc6ICczMjQzJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1N1emFrdUV4IFJ1dGhsZXNzIFJlZnJhaW4nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczMkRCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIGFzc29tbcOpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU3V6YWt1RXggTWVzbWVyaXppbmcgTWVsb2R5JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMzJEQScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRzdWt1eW9taSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNhc3RydW1GbHVtaW5pcyxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVHN1a3V5b21pIFN0ZWVsIE9mIFRoZSBVbmRlcndvcmxkJzogJzJCRTcnLCAvLyBsYXJnZSB0YXJnZXRlZCB0ZWxlZ3JhcGggY2xlYXZlIGR1cmluZyBmYW5zXHJcbiAgICAnVHN1a3V5b21pIE1pZG5pZ2h0IEhhemUgVG8gQXNoZXMnOiAnMkJFQScsIC8vIG5vdCBraWxsaW5nIGNsb3VkcyBpbiB0aW1lXHJcbiAgICAnVHN1a3V5b21pIERhbmNpbmcgRmFuIFRzdWtpLU5vLU1haW9naSc6ICcyQkVEJywgLy8gZmFuIGNpcmNsZSBhb2VcclxuICAgICdUc3VrdXlvbWkgTW9vbmxpZ2h0IEx1bmFyIEhhbG8nOiAnMkJFNCcsIC8vIGRvbnV0IGZyb20gb3JicyBkdXJpbmcgc2VsZW5vbWFuY3lcclxuICAgICdUc3VrdXlvbWkgRGFyayBCbGFkZSc6ICcyQkY5JywgLy8gcmlnaHQtc2lkZSBjbGVhdmVcclxuICAgICdUc3VrdXlvbWkgQnJpZ2h0IEJsYWRlJzogJzJCRkEnLCAvLyBsZWZ0IHNpZGUgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUc3VrdXlvbWkgVG9ybWVudCBVbnRvIERlYXRoJzogJzJCRTMnLCAvLyB0YW5rIGJ1c3RlciBjb25hbCBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnVHN1a3V5b21pIExlYWQgT2YgVGhlIFVuZGVyd29ybGQnOiAnMkJFNicsIC8vIGxpbmUgc3RhY2sgbWFya2VyXHJcbiAgICAnVHN1a3V5b21pIEx1bmFjeSAxJzogJzJCRkInLCAvLyAzLTR4IHN0YWNrIG1hcmtlclxyXG4gICAgJ1RzdWt1eW9taSBMdW5hY3kgMic6ICcyQkZDJywgLy8gMy00eCBzdGFjayBtYXJrZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVHN1a3V5b21pIE1vb25saXQnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBGaXZlIHN0YWNrcyBvZiBNb29ubGl0IG9yIE1vb25zaGFkb3dlZCBpcyBpbnN0YW50IGRlYXRoLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNjAyJywgY291bnQ6ICcwNScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVHN1a3V5b21pIE1vb25zaGFkb3dlZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIEZpdmUgc3RhY2tzIG9mIE1vb25saXQgb3IgTW9vbnNoYWRvd2VkIGlzIGluc3RhbnQgZGVhdGguXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2MDMnLCBjb3VudDogJzA1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IFRha2luZyBtdWx0aXBsZSByb2xlLWJhc2VkIFN0ZWVsIG9mIHRoZSBVbmRlcndvcmxkICgyQkJGKSBoaXRzLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRzdWt1eW9taSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRUc3VrdXlvbWlzUGFpbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVHN1a3V5b21pRXggTW9vbmxpZ2h0IEx1bmFyIEhhbG8nOiAnMkJENicsIC8vIGRvbnV0IGZyb20gb3JicyBpbiBmaW5hbCBwaGFzZVxyXG4gICAgJ1RzdWt1eW9taUV4IE1vb25mYWxsJzogJzJCRDEnLCAvLyBtZXRlb3IgZHJvcCBiaWcgY2lyY2xlc1xyXG4gICAgJ1RzdWt1eW9taUV4IE1vb25kdXN0IENyYXRlcic6ICcyQ0Q3JywgLy8gbWV0ZW9yIGV4cGxvc2lvbnMgbGF0ZXJcclxuICAgICdUc3VrdXlvbWlFeCBEYW5jaW5nIEZhbiBUc3VrdWktTm8tTWFpb2dpJzogJzJCQzYnLCAvLyBmYW4gY2lyY2xlIGFvZVxyXG4gICAgJ1RzdWt1eW9taUV4IFdheGluZyBHcnVkZ2UnOiAnMkJERScsIC8vIG1lbGVlIHJhbmdlIGNpcmNsZSBmcm9tIEZ1bGwgTW9vbiBidWZmXHJcbiAgICAnVHN1a3V5b21pRXggV2FuaW5nIEdydWRnZSc6ICcyQkRGJywgLy8gZG9udXQgZnJvbSBOZXcgTW9vbiBCdWZmXHJcbiAgICAnVHN1a3V5b21pRXggRGFyayBCbGFkZSc6ICcyQkRBJywgLy8gcmlnaHQtc2lkZSBjbGVhdmVcclxuICAgICdUc3VrdXlvbWlFeCBCcmlnaHQgQmxhZGUnOiAnMkJEQicsIC8vIGxlZnQgc2lkZSBjbGVhdmVcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RzdWt1eW9taUV4IFRvcm1lbnQgVW50byBEZWF0aCc6ICcyQkJCJywgLy8gdGFuayBidXN0ZXIgY29uYWwgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1RzdWt1eW9taUV4IExlYWQgT2YgVGhlIFVuZGVyd29ybGQnOiAnMkJCRScsIC8vIFwiQmVnIGZvciBNZXJjeSFcIiBzdGFja1xyXG4gICAgJ1RzdWt1eW9taUV4IEx1bmFjeSc6ICcyQkREJywgLy8gNHggc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1RzdWt1eW9taUV4IE1vb25saXQnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBGaXZlIHN0YWNrcyBvZiBNb29ubGl0IG9yIE1vb25zaGFkb3dlZCBpcyBpbnN0YW50IGRlYXRoLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNjAyJywgY291bnQ6ICcwNScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVHN1a3V5b21pRXggTW9vbnNoYWRvd2VkJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gRml2ZSBzdGFja3Mgb2YgTW9vbmxpdCBvciBNb29uc2hhZG93ZWQgaXMgaW5zdGFudCBkZWF0aC5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzYwMycsIGNvdW50OiAnMDUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IEdla2tvICgzODgzKSBpcyB0aGUgb3JiIFwic3ByZWFkXCIgbWFya2VyIHRoYXQgdHVybnMgaW50byBkb251dCBLYXNoYSAoMzgzNClcclxuLy8gaG93ZXZlciwgaXQgY2FuIG1ha2Ugc29tZSBzZW5zZSB0byBzdGFjayAyLTMgdXAgdG8gY3JlYXRlIHNwYWNlLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5LdWdhbmVPaGFzaGksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1lvamltYm8gRnJhZ2lsaXR5JzogJzM4MkEnLCAvLyBjaXJjbGUgYW9lcyBmcm9tIGJ1dHRlcmZsaWVzIGFmdGVyIElub3NoaWthY2hvXHJcbiAgICAnWW9qaW1ibyBZdWtpa2F6ZSc6ICczODMyJywgLy8gaWN5LWxvb2tpbmcgd2FmZmxlIGxpbmVzXHJcbiAgICAnWW9qaW1ibyBLYXNoYSc6ICczODM0JywgLy8gZG9udXQgdGhhdCBmb2xsb3dzIEdla2tvIG9yYiBtYXJrZXJzXHJcbiAgICAnWW9qaW1ibyBUaW55IFNvbmcnOiAnMzgzNScsIC8vIGRvcml0byBzdGFja1xyXG4gICAgJ1lvamltYm8gRWxlY3Ryb2dlbmV0aWMgRm9yY2UnOiAnMzg0MCcsIC8vIHB1cnBsZSBvcmIgZXhwbG9zaW9uc1xyXG4gICAgJ1lvamltYm8gTWFzYW11bmUnOiAnMzg0MycsIC8vIHZlcnkgbG9uZyB0YXJnZXRlZCBsaW5lXHJcbiAgICAnWW9qaW1ibyBFcGljIFN0b3Jtc3BsaXR0ZXInOiAnMzg0NScsIC8vIHNpbmdsZSBsaW5lIGRvd24gdGhlIG1pZGRsZVxyXG4gICAgJ1lvamltYm8gU2Vhc3BsaXR0ZXIgMSc6ICczODQ2JywgLy8gZm9sbG93LXVwIFwiZ2V0IG1pZGRsZVwiIHRvIEVwaWMgU3Rvcm1zcGxpdHRlclxyXG4gICAgJ1lvamltYm8gU2Vhc3BsaXR0ZXIgMic6ICczODQ3JywgLy8gZm9sbG93LXVwIFwiZ2V0IG1pZGRsZVwiIHRvIEVwaWMgU3Rvcm1zcGxpdHRlclxyXG4gICAgJ1lvamltYm8gU2Vhc3BsaXR0ZXIgMyc6ICczODQ4JywgLy8gZm9sbG93LXVwIFwiZ2V0IG1pZGRsZVwiIHRvIEVwaWMgU3Rvcm1zcGxpdHRlclxyXG4gICAgJ1lvamltYm8gU2Vhc3BsaXR0ZXIgNCc6ICczODQ5JywgLy8gZm9sbG93LXVwIFwiZ2V0IG1pZGRsZVwiIHRvIEVwaWMgU3Rvcm1zcGxpdHRlclxyXG4gICAgJ1lvamltYm8gRHJhZ29uXFwncyBIZWFkIE1pZ2h0eSBCbG93JzogJzM4MzknLCAvLyBydW5uaW5nIGludG8gRHJhZ29uJ3MgSGVhZCB1bnRhcmdldGFibGUgYWRkXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnWW9qaW1ibyBIZWxsXFwncyBHYXRlJzogJzM4NDInLCAvLyBmYWlsaW5nIHRvIGJyZWFrIElyb24gQ2hhaW5zXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdZb2ppbWJvIFRoZSBCaXR0ZXIgRW5kJzogJzMxREUnLCAvLyBmcm9udGFsIHRhbmsgY2xlYXZlLCBubyBjYXN0IGJhclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFVsdGltYSBXZWFwb24gVWx0aW1hdGVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVdlYXBvbnNSZWZyYWluVWx0aW1hdGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1VXVSBFeWUgb2YgdGhlIFN0b3JtJzogJzJCNTInLCAvLyBkb251dCBvbiB0aGUgZmluYWxcclxuICAgICdVV1UgU2VhcmluZyBXaW5kJzogJzJCNUMnLCAvLyBoZWFsZXIgZXhwbG9zaW9uc1xyXG4gICAgJ1VXVSBFcnVwdGlvbic6ICcyQjVBJywgLy8gcmVkIGJhaXRlZCBpZnJpdCBjaXJjbGVzXHJcbiAgICAnVVdVIENyaW1zb24gQ3ljbG9uZSAxJzogJzJCNUYnLCAvLyBpZnJpdCBjaGFyZ2VcclxuICAgICdVV1UgQ3JpbXNvbiBDeWNsb25lIDInOiAnMkI2MCcsIC8vIGlmcml0IGNoYXJnZVxyXG4gICAgJ1VXVSBSYWRpYW50IFBsdW1lJzogJzJCNjEnLCAvLyBpZnJpdCBwbHVtZXNcclxuICAgICdVV1UgV2VpZ2h0IG9mIHRoZSBMYW5kJzogJzJCNjUnLCAvLyB0aXRhbiBwdWRkbGVzXHJcbiAgICAnVVdVIEJvbWIgQm91bGRlciBCdXJ5JzogJzJCNjknLCAvLyB0aXRhbiBib21icyBkcm9wcGluZ1xyXG4gICAgJ1VXVSBCb21iIEJvdWxkZXIgRnJlZWZpcmUnOiAnMkI2RScsIC8vIHRpdGFuIGJvbWJzIGF3YWtlbmluZ1xyXG4gICAgJ1VXVSBCb21iIEJvdWxkZXIgQnVyc3QnOiAnMkI2QScsIC8vIHRpdGFuIGJvbWJzIGV4cGxvZGluZ1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1VXVSBHcmVhdCBXaGlybHdpbmQnOiAnMkI0MScsIC8vIGxhcmdlIGNpcmNsZSBmcm9tIGJsb2NraW5nIG1pc3RyYWwgc29uZ1xyXG4gICAgJ1VXVSBTbGlwc3RyZWFtJzogJzJCNTMnLCAvLyB1bnRlbGVncmFwaGVkIGRvZGdlYWJsZSBmcm9udGFsIGNvbmFsXHJcbiAgICAnVVdVIFdpY2tlZCBXaGVlbCc6ICcyQjRFJywgLy8gd2lja2VkIHdoZWVsIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1VXVSBXaWNrZWQgVG9ybmFkbyc6ICcyQjRGJywgLy8gYXdva2VuIHdpY2tlZCB3aGVlbCBkb251dFxyXG4gICAgJ1VXVSBMYW5kc2xpZGUgMSc6ICcyQjcwJywgLy8gbGFuZHNsaWRlXHJcbiAgICAnVVdVIExhbmRzbGlkZSAyJzogJzJCNkYnLCAvLyBsYW5kc2xpZGVcclxuICAgICdVV1UgTGFuZHNsaWRlIDMnOiAnMkI3MScsIC8vIGxhbmRzbGlkZVxyXG4gICAgJ1VXVSBMYW5kc2xpZGUgNCc6ICcyQzIyJywgLy8gbGFuZHNsaWRlXHJcbiAgICAnVVdVIExhbmRzbGlkZSA1JzogJzJCN0YnLCAvLyBsYW5kc2xpZGUgZnJvbSB1bHRpbWFcclxuICAgICdVV1UgQWV0aGVyb2NoZW1pY2FsIExhc2VyIDEnOiAnMkI4NCcsIC8vIHN1cHByZXNzaW9uIHllbGxvdyBsaW5lIGxhc2VyIGZyb20gdWx0aW1hXHJcbiAgICAnVVdVIEFldGhlcm9jaGVtaWNhbCBMYXNlciAyJzogJzJCODUnLCAvLyBzdXBwcmVzc2lvbiB5ZWxsb3cgbGluZSBsYXNlciBmcm9tIHVsdGltYVxyXG4gICAgJ1VXVSBBZXRoZXJvY2hlbWljYWwgTGFzZXIgMyc6ICcyQjg2JywgLy8gc3VwcHJlc3Npb24geWVsbG93IGxpbmUgbGFzZXIgZnJvbSB1bHRpbWFcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1VXVSBNZXNvaGlnaCc6ICcyQjQ5JywgLy8gdGV0aGVyIHRvIGdhcnVkYSBzaXN0ZXJcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1VXVSBEb3duYnVyc3QnOiAnMkI1MCcsIC8vIHVuYXdva2VuIGdhcnVkYSB0YW5rYnVzdGVyXHJcbiAgICAnVVdVIEluY2luZXJhdGUnOiAnMkI1NicsIC8vIGlmcml0IHRhbmtidXN0ZXJcclxuICAgICdVV1UgUm9jayBCdXN0ZXInOiAnMkI2MicsIC8vIHRpdGFuIHRhbmtidXN0ZXIgMVxyXG4gICAgJ1VXVSBNb3VudGFpbiBCdXN0ZXInOiAnMkI2MycsIC8vIHRpdGFuIHRhbmtidXN0ZXIgMlxyXG4gICAgJ1VXVSBWaXNjb3VzIEFldGhlcm9wbGFzbSc6ICcyQjc2JywgLy8gdGFuayBkZWJ1ZmYgdGFua2J1c3RlclxyXG4gICAgJ1VXVSBIb21pbmcgTGFzZXInOiAnMkI3QicsIC8vIHNlY29uZCBoYXRlIHRhbmtidXN0ZXJcclxuICAgICdVV1UgRGlmZnJhY3RpdmUgTGFzZXInOiAnMkI3OCcsIC8vIHRhbmsgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1VXVSBGbGFtaW5nIENydXNoJzogJzI1QkQnLCAvLyBpZnJpdCBzdGFjayBtYXJrZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVVdVIFdpbmRidXJuJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJ0VCJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gRmVhdGhlcmxhbmNlIGV4cGxvc2lvbi4gIEl0IHNlZW1zIGxpa2UgdGhlIHBlcnNvbiB3aG8gcG9wcyBpdCBpcyB0aGVcclxuICAgICAgLy8gZmlyc3QgcGVyc29uIGxpc3RlZCBkYW1hZ2Utd2lzZSwgc28gdGhleSBhcmUgbGlrZWx5IHRoZSBjdWxwcml0LlxyXG4gICAgICBpZDogJ1VXVSBGZWF0aGVybGFuY2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyQjQzJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDUsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5zb3VyY2UgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IGtGbGFnSW5zdGFudERlYXRoLCBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNEb29tPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG4vLyBVQ1UgLSBUaGUgVW5lbmRpbmcgQ29pbCBPZiBCYWhhbXV0IChVbHRpbWF0ZSlcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVVuZW5kaW5nQ29pbE9mQmFoYW11dFVsdGltYXRlLFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdVQ1UgTHVuYXIgRHluYW1vJzogJzI2QkMnLFxyXG4gICAgJ1VDVSBJcm9uIENoYXJpb3QnOiAnMjZCQicsXHJcbiAgICAnVUNVIEV4YWZsYXJlJzogJzI2RUYnLFxyXG4gICAgJ1VDVSBXaW5ncyBPZiBTYWx2YXRpb24nOiAnMjZDQScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1VDVSBUd2lzdGVyIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyBJbnN0YW50IGRlYXRoIGhhcyBhIHNwZWNpYWwgZmxhZyB2YWx1ZSwgZGlmZmVyZW50aWF0aW5nXHJcbiAgICAgIC8vIGZyb20gdGhlIGV4cGxvc2lvbiBkYW1hZ2UgeW91IHRha2Ugd2hlbiBzb21lYm9keSBlbHNlXHJcbiAgICAgIC8vIHBvcHMgb25lLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjZBQicsIC4uLnBsYXllckRhbWFnZUZpZWxkcywgZmxhZ3M6IGtGbGFnSW5zdGFudERlYXRoIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnVHdpc3RlciBQb3AnLFxyXG4gICAgICAgICAgICBkZTogJ1dpcmJlbHN0dXJtIGJlcsO8aHJ0JyxcclxuICAgICAgICAgICAgZnI6ICdBcHBhcml0aW9uIGRlcyB0b3JuYWRlcycsXHJcbiAgICAgICAgICAgIGphOiAn44OE44Kk44K544K/44O8JyxcclxuICAgICAgICAgICAgY246ICfml4vpo44nLFxyXG4gICAgICAgICAgICBrbzogJ+2ajOyYpOumrCDrsJ/snYwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgVGhlcm1pb25pYyBCdXJzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI2QjknLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQaXp6YSBTbGljZScsXHJcbiAgICAgICAgICAgIGRlOiAnUGl6emFzdMO8Y2snLFxyXG4gICAgICAgICAgICBmcjogJ1BhcnQgZGUgcGl6emEnLFxyXG4gICAgICAgICAgICBqYTogJ+OCteODvOODn+OCquODi+ODg+OCr+ODkOODvOOCueODiCcsXHJcbiAgICAgICAgICAgIGNuOiAn5aSp5bSp5Zyw6KOCJyxcclxuICAgICAgICAgICAga286ICfsnqXtjJDsl5Ag66ee7J2MJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVUNVIENoYWluIExpZ2h0bmluZycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI2QzgnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIC8vIEl0J3MgaGFyZCB0byBhc3NpZ24gYmxhbWUgZm9yIGxpZ2h0bmluZy4gIFRoZSBkZWJ1ZmZzXHJcbiAgICAgICAgLy8gZ28gb3V0IGFuZCB0aGVuIGV4cGxvZGUgaW4gb3JkZXIsIGJ1dCB0aGUgYXR0YWNrZXIgaXNcclxuICAgICAgICAvLyB0aGUgZHJhZ29uIGFuZCBub3QgdGhlIHBsYXllci5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnaGl0IGJ5IGxpZ2h0bmluZycsXHJcbiAgICAgICAgICAgIGRlOiAndm9tIEJsaXR6IGdldHJvZmZlbicsXHJcbiAgICAgICAgICAgIGZyOiAnZnJhcHDDqShlKSBwYXIgbGEgZm91ZHJlJyxcclxuICAgICAgICAgICAgamE6ICfjg4HjgqfjgqTjg7Pjg6njgqTjg4jjg4vjg7PjgrAnLFxyXG4gICAgICAgICAgICBjbjogJ+mbt+WFiemTvicsXHJcbiAgICAgICAgICAgIGtvOiAn67KI6rCcIOunnuydjCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1VDVSBCdXJucycsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdGQScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgU2x1ZGdlJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzExRicgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgRG9vbSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJ0QyJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbSA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNEb29tW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1VDVSBEb29tIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnRDInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNEb29tID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0Rvb21bbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGVyZSBpcyBubyBjYWxsb3V0IGZvciBcInlvdSBmb3Jnb3QgdG8gY2xlYXIgZG9vbVwiLiAgVGhlIGxvZ3MgbG9va1xyXG4gICAgICAvLyBzb21ldGhpbmcgbGlrZSB0aGlzOlxyXG4gICAgICAvLyAgIFsyMDowMjozMC41NjRdIDFBOk9rb25vbWkgWWFraSBnYWlucyB0aGUgZWZmZWN0IG9mIERvb20gZnJvbSAgZm9yIDYuMDAgU2Vjb25kcy5cclxuICAgICAgLy8gICBbMjA6MDI6MzYuNDQzXSAxRTpPa29ub21pIFlha2kgbG9zZXMgdGhlIGVmZmVjdCBvZiBQcm90ZWN0IGZyb20gVGFrbyBZYWtpLlxyXG4gICAgICAvLyAgIFsyMDowMjozNi40NDNdIDFFOk9rb25vbWkgWWFraSBsb3NlcyB0aGUgZWZmZWN0IG9mIERvb20gZnJvbSAuXHJcbiAgICAgIC8vICAgWzIwOjAyOjM4LjUyNV0gMTk6T2tvbm9taSBZYWtpIHdhcyBkZWZlYXRlZCBieSBGaXJlaG9ybi5cclxuICAgICAgLy8gSW4gb3RoZXIgd29yZHMsIGRvb20gZWZmZWN0IGlzIHJlbW92ZWQgKy8tIG5ldHdvcmsgbGF0ZW5jeSwgYnV0IGNhbid0XHJcbiAgICAgIC8vIHRlbGwgdW50aWwgbGF0ZXIgdGhhdCBpdCB3YXMgYSBkZWF0aC4gIEFyZ3VhYmx5LCB0aGlzIGNvdWxkIGhhdmUgYmVlbiBhXHJcbiAgICAgIC8vIGNsb3NlLWJ1dC1zdWNjZXNzZnVsIGNsZWFyaW5nIG9mIGRvb20gYXMgd2VsbC4gIEl0IGxvb2tzIHRoZSBzYW1lLlxyXG4gICAgICAvLyBTdHJhdGVneTogaWYgeW91IGhhdmVuJ3QgY2xlYXJlZCBkb29tIHdpdGggMSBzZWNvbmQgdG8gZ28gdGhlbiB5b3UgcHJvYmFibHlcclxuICAgICAgLy8gZGllZCB0byBkb29tLiAgWW91IGNhbiBnZXQgbm9uLWZhdGFsbHkgaWNlYmFsbGVkIG9yIGF1dG8nZCBpbiBiZXR3ZWVuLFxyXG4gICAgICAvLyBidXQgd2hhdCBjYW4geW91IGRvLlxyXG4gICAgICBpZDogJ1VDVSBEb29tIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJ0QyJyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgLSAxLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzRG9vbSB8fCAhZGF0YS5oYXNEb29tW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBsZXQgdGV4dDtcclxuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbik7XHJcbiAgICAgICAgaWYgKGR1cmF0aW9uIDwgOSlcclxuICAgICAgICAgIHRleHQgPSBtYXRjaGVzLmVmZmVjdCArICcgIzEnO1xyXG4gICAgICAgIGVsc2UgaWYgKGR1cmF0aW9uIDwgMTQpXHJcbiAgICAgICAgICB0ZXh0ID0gbWF0Y2hlcy5lZmZlY3QgKyAnICMyJztcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICB0ZXh0ID0gbWF0Y2hlcy5lZmZlY3QgKyAnICMzJztcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHRleHQsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRoZSBDb3BpZWQgRmFjdG9yeVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQ29waWVkRmFjdG9yeSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgQm9tYic6ICc0OEI0JyxcclxuICAgIC8vIE1ha2Ugc3VyZSBlbmVtaWVzIGFyZSBpZ25vcmVkIG9uIHRoZXNlXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgQm9tYmFyZG1lbnQnOiAnNDhCOCcsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgQXNzYXVsdCc6ICc0OEI2JyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEhpZ2gtUG93ZXJlZCBMYXNlcic6ICc0OEM1JyxcclxuICAgICdDb3BpZWQgU2VyaWFsIFNpZGVzdHJpa2luZyBTcGluIFNwaW4gMSc6ICc0OENCJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIFNpZGVzdHJpa2luZyBTcGluIDInOiAnNDhDQycsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBDZW50cmlmdWdhbCBTcGluJzogJzQ4QzknLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgQWlyLVRvLVN1cmZhY2UgRW5lcmd5JzogJzQ4QkEnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgSGlnaC1DYWxpYmVyIExhc2VyJzogJzQ4RkEnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IFJpbmcgMSc6ICc0OEJDJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEVuZXJneSBSaW5nIDInOiAnNDhCRCcsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgUmluZyAzJzogJzQ4QkUnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IFJpbmcgNCc6ICc0OEMwJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEVuZXJneSBSaW5nIDUnOiAnNDhDMScsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgUmluZyA2JzogJzQ4QzInLFxyXG5cclxuICAgICdDb3BpZWQgVHJhc2ggRW5lcmd5IEJvbWInOiAnNDkxRCcsXHJcbiAgICAnQ29waWVkIFRyYXNoIEZyb250YWwgU29tZXJzYXVsdCc6ICc0OTFCJyxcclxuICAgICdDb3BpZWQgVHJhc2ggSGlnaC1GcmVxdWVuY3kgTGFzZXInOiAnNDkxRScsXHJcblxyXG4gICAgJ0NvcGllZCBIb2JiZXMgU2hvY2tpbmcgRGlzY2hhcmdlJzogJzQ4MEInLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgVmFyaWFibGUgQ29tYmF0IFRlc3QgMSc6ICc0OUM1JyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFZhcmlhYmxlIENvbWJhdCBUZXN0IDInOiAnNDlDNicsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBWYXJpYWJsZSBDb21iYXQgVGVzdCAzJzogJzQ5QzcnLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgVmFyaWFibGUgQ29tYmF0IFRlc3QgNCc6ICc0ODBGJyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFZhcmlhYmxlIENvbWJhdCBUZXN0IDUnOiAnNDgxMCcsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBWYXJpYWJsZSBDb21iYXQgVGVzdCA2JzogJzQ4MTEnLFxyXG5cclxuICAgICdDb3BpZWQgSG9iYmVzIFJpbmcgTGFzZXIgMSc6ICc0ODAyJyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFJpbmcgTGFzZXIgMic6ICc0ODAzJyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFJpbmcgTGFzZXIgMyc6ICc0ODA0JyxcclxuXHJcbiAgICAnQ29waWVkIEhvYmJlcyBUb3dlcmZhbGwnOiAnNDgxMycsXHJcblxyXG4gICAgJ0NvcGllZCBIb2JiZXMgRmlyZS1SZWlzdGFuY2UgVGVzdCAxJzogJzQ4MTYnLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgRmlyZS1SZWlzdGFuY2UgVGVzdCAyJzogJzQ4MTcnLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgRmlyZS1SZWlzdGFuY2UgVGVzdCAzJzogJzQ4MTgnLFxyXG5cclxuICAgICdDb3BpZWQgSG9iYmVzIE9pbCBXZWxsJzogJzQ4MUInLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgRWxlY3Ryb21hZ25ldGljIFB1bHNlJzogJzQ4MTknLFxyXG4gICAgLy8gVE9ETzogd2hhdCdzIHRoZSBlbGVjdHJpZmllZCBmbG9vciB3aXRoIGNvbnZleW9yIGJlbHRzP1xyXG5cclxuICAgICdDb3BpZWQgR29saWF0aCBFbmVyZ3kgUmluZyAxJzogJzQ5MzcnLFxyXG4gICAgJ0NvcGllZCBHb2xpYXRoIEVuZXJneSBSaW5nIDInOiAnNDkzOCcsXHJcbiAgICAnQ29waWVkIEdvbGlhdGggRW5lcmd5IFJpbmcgMyc6ICc0OTM5JyxcclxuICAgICdDb3BpZWQgR29saWF0aCBFbmVyZ3kgUmluZyA0JzogJzQ5M0EnLFxyXG4gICAgJ0NvcGllZCBHb2xpYXRoIEVuZXJneSBSaW5nIDUnOiAnNDkzNycsXHJcbiAgICAnQ29waWVkIEdvbGlhdGggTGFzZXIgVHVycmV0JzogJzQ4RTYnLFxyXG5cclxuICAgICdDb3BpZWQgRmxpZ2h0IFVuaXQgQXJlYSBCb21iaW5nJzogJzQ5NDMnLFxyXG4gICAgJ0NvcGllZCBGbGlnaHQgVW5pdCBMaWdodGZhc3QgQmxhZGUnOiAnNDk0MCcsXHJcblxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCAxJzogJzQ3MjknLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCAyJzogJzQ3MjgnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCAzJzogJzQ3MkYnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCA0JzogJzQ3MzEnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCA1JzogJzQ3MkInLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCA2JzogJzQ3MkQnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBTbWFzaCA3JzogJzQ3MzInLFxyXG5cclxuICAgICdDb3BpZWQgRW5nZWxzIEluY2VuZGlhcnkgQm9tYmluZyc6ICc0NzM5JyxcclxuICAgICdDb3BpZWQgRW5nZWxzIEd1aWRlZCBNaXNzaWxlJzogJzQ3MzYnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgU3VyZmFjZSBNaXNzaWxlJzogJzQ3MzQnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTGFzZXIgU2lnaHQnOiAnNDczQicsXHJcbiAgICAnQ29waWVkIEVuZ2VscyBGcmFjayc6ICc0NzREJyxcclxuXHJcbiAgICAnQ29waWVkIEVuZ2VscyBNYXJ4IENydXNoJzogJzQ4RkMnLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgQ3J1c2hpbmcgV2hlZWwnOiAnNDc0QicsXHJcbiAgICAnQ29waWVkIEVuZ2VscyBNYXJ4IFRocnVzdCc6ICc0OEZDJyxcclxuXHJcbiAgICAnQ29waWVkIDlTIExhc2VyIFN1cHByZXNzaW9uJzogJzQ4RTAnLCAvLyBDYW5ub25zXHJcbiAgICAnQ29waWVkIDlTIEJhbGxpc3RpYyBJbXBhY3QgMSc6ICc0OTc0JyxcclxuICAgICdDb3BpZWQgOVMgQmFsbGlzdGljIEltcGFjdCAyJzogJzQ4REMnLFxyXG4gICAgJ0NvcGllZCA5UyBCYWxsaXN0aWMgSW1wYWN0IDMnOiAnNDhFNCcsXHJcbiAgICAnQ29waWVkIDlTIEJhbGxpc3RpYyBJbXBhY3QgNCc6ICc0OEUwJyxcclxuXHJcbiAgICAnQ29waWVkIDlTIE1hcnggSW1wYWN0JzogJzQ4RDQnLFxyXG5cclxuICAgICdDb3BpZWQgOVMgVGFuayBEZXN0cnVjdGlvbiAxJzogJzQ4RTgnLFxyXG4gICAgJ0NvcGllZCA5UyBUYW5rIERlc3RydWN0aW9uIDInOiAnNDhFOScsXHJcblxyXG4gICAgJ0NvcGllZCA5UyBTZXJpYWwgU3BpbiAxJzogJzQ4QTUnLFxyXG4gICAgJ0NvcGllZCA5UyBTZXJpYWwgU3BpbiAyJzogJzQ4QTcnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQ29waWVkIEhvYmJlcyBTaG9ydC1SYW5nZSBNaXNzaWxlJzogJzQ4MTUnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiA1MDkzIHRha2luZyBIaWdoLVBvd2VyZWQgTGFzZXIgd2l0aCBhIHZ1bG4gKGJlY2F1c2Ugb2YgdGFraW5nIHR3bylcclxuLy8gVE9ETzogNEZCNSB0YWtpbmcgSGlnaC1Qb3dlcmVkIExhc2VyIHdpdGggYSB2dWxuIChiZWNhdXNlIG9mIHRha2luZyB0d28pXHJcbi8vIFRPRE86IDUwRDMgQWVyaWFsIFN1cHBvcnQ6IEJvbWJhcmRtZW50IGdvaW5nIG9mZiBmcm9tIGFkZFxyXG4vLyBUT0RPOiA1MjExIE1hbmV1dmVyOiBWb2x0IEFycmF5IG5vdCBnZXR0aW5nIGludGVycnVwdGVkXHJcbi8vIFRPRE86IDRGRjQvNEZGNSBPbmUgb2YgdGhlc2UgaXMgZmFpbGluZyBjaGVtaWNhbCBjb25mbGFncmF0aW9uXHJcbi8vIFRPRE86IHN0YW5kaW5nIGluIHdyb25nIHRlbGVwb3J0ZXI/PyBtYXliZSA1MzYzP1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVB1cHBldHNCdW5rZXIsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1B1cHBldCBBZWdpcyBCZWFtIENhbm5vbnMgMSc6ICc1MDc0JywgLy8gcm90YXRpbmcgc2VwYXJhdGluZyB3aGl0ZSBncm91bmQgYW9lXHJcbiAgICAnUHVwcGV0IEFlZ2lzIEJlYW0gQ2Fubm9ucyAyJzogJzUwNzUnLCAvLyByb3RhdGluZyBzZXBhcmF0aW5nIHdoaXRlIGdyb3VuZCBhb2VcclxuICAgICdQdXBwZXQgQWVnaXMgQmVhbSBDYW5ub25zIDMnOiAnNTA3NicsIC8vIHJvdGF0aW5nIHNlcGFyYXRpbmcgd2hpdGUgZ3JvdW5kIGFvZVxyXG4gICAgJ1B1cHBldCBBZWdpcyBDb2xsaWRlciBDYW5ub25zJzogJzUwN0UnLCAvLyByb3RhdGluZyByZWQgZ3JvdW5kIGFvZSBwaW53aGVlbFxyXG4gICAgJ1B1cHBldCBBZWdpcyBTdXJmYWNlIExhc2VyIDEnOiAnNTA5MScsIC8vIGNoYXNpbmcgbGFzZXIgaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBBZWdpcyBTdXJmYWNlIExhc2VyIDInOiAnNTA5MicsIC8vIGNoYXNpbmcgbGFzZXIgY2hhc2luZ1xyXG4gICAgJ1B1cHBldCBBZWdpcyBGbGlnaHQgUGF0aCc6ICc1MDhDJywgLy8gYmx1ZSBsaW5lIGFvZSBmcm9tIGZseWluZyB1bnRhcmdldGFibGUgYWRkc1xyXG4gICAgJ1B1cHBldCBBZWdpcyBSZWZyYWN0aW9uIENhbm5vbnMgMSc6ICc1MDgxJywgLy8gcmVmcmFjdGlvbiBjYW5ub25zIGJldHdlZW4gd2luZ3NcclxuICAgICdQdXBwZXQgQWVnaXMgTGlmZVxcJ3MgTGFzdCBTb25nJzogJzUzQjMnLCAvLyByaW5nIGFvZSB3aXRoIGdhcFxyXG4gICAgJ1B1cHBldCBMaWdodCBMb25nLUJhcnJlbGVkIExhc2VyJzogJzUyMTInLCAvLyBsaW5lIGFvZSBmcm9tIGFkZFxyXG4gICAgJ1B1cHBldCBMaWdodCBTdXJmYWNlIE1pc3NpbGUgSW1wYWN0JzogJzUyMEYnLCAvLyB1bnRhcmdldGVkIGdyb3VuZCBhb2UgZnJvbSBObyBSZXN0cmljdGlvbnNcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgSW5jZW5kaWFyeSBCb21iaW5nJzogJzRGQjknLCAvLyBmaXJlIHB1ZGRsZSBpbml0aWFsXHJcbiAgICAnUHVwcGV0IFN1cGVyaW9yIFNoYXJwIFR1cm4nOiAnNTA2RCcsIC8vIHNoYXJwIHR1cm4gZGFzaFxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTdGFuZGFyZCBTdXJmYWNlIE1pc3NpbGUgMSc6ICc0RkIxJywgLy8gTGV0aGFsIFJldm9sdXRpb24gY2lyY2xlc1xyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTdGFuZGFyZCBTdXJmYWNlIE1pc3NpbGUgMic6ICc0RkIyJywgLy8gTGV0aGFsIFJldm9sdXRpb24gY2lyY2xlc1xyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTdGFuZGFyZCBTdXJmYWNlIE1pc3NpbGUgMyc6ICc0RkIzJywgLy8gTGV0aGFsIFJldm9sdXRpb24gY2lyY2xlc1xyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTbGlkaW5nIFN3aXBlIDEnOiAnNTA2RicsIC8vIHJpZ2h0LWhhbmRlZCBzbGlkaW5nIHN3aXBlXHJcbiAgICAnUHVwcGV0IFN1cGVyaW9yIFNsaWRpbmcgU3dpcGUgMic6ICc1MDcwJywgLy8gbGVmdC1oYW5kZWQgc2xpZGluZyBzd2lwZVxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBHdWlkZWQgTWlzc2lsZSc6ICc0RkI4JywgLy8gZ3JvdW5kIGFvZSBkdXJpbmcgQXJlYSBCb21iYXJkbWVudFxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBIaWdoLU9yZGVyIEV4cGxvc2l2ZSBCbGFzdCAxJzogJzRGQzAnLCAvLyBzdGFyIGFvZVxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBIaWdoLU9yZGVyIEV4cGxvc2l2ZSBCbGFzdCAyJzogJzRGQzEnLCAvLyBzdGFyIGFvZVxyXG4gICAgJ1B1cHBldCBIZWF2eSBFbmVyZ3kgQm9tYmFyZG1lbnQnOiAnNEZGQycsIC8vIGNvbG9yZWQgbWFnaWMgaGFtbWVyLXkgZ3JvdW5kIGFvZVxyXG4gICAgJ1B1cHBldCBIZWF2eSBSZXZvbHZpbmcgTGFzZXInOiAnNTAwMCcsIC8vIGdldCB1bmRlciBsYXNlclxyXG4gICAgJ1B1cHBldCBIZWF2eSBFbmVyZ3kgQm9tYic6ICc0RkZBJywgLy8gZ2V0dGluZyBoaXQgYnkgYmFsbCBkdXJpbmcgQWN0aXZlIFN1cHByZXNzaXZlIFVuaXRcclxuICAgICdQdXBwZXQgSGVhdnkgUjAxMCBMYXNlcic6ICc0RkYwJywgLy8gbGFzZXIgcG9kXHJcbiAgICAnUHVwcGV0IEhlYXZ5IFIwMzAgSGFtbWVyJzogJzRGRjEnLCAvLyBjaXJjbGUgYW9lIHBvZFxyXG4gICAgJ1B1cHBldCBIYWxsd2F5IEhpZ2gtUG93ZXJlZCBMYXNlcic6ICc1MEIxJywgLy8gbG9uZyBhb2UgaW4gdGhlIGhhbGx3YXkgc2VjdGlvblxyXG4gICAgJ1B1cHBldCBIYWxsd2F5IEVuZXJneSBCb21iJzogJzUwQjInLCAvLyBydW5uaW5nIGludG8gYSBmbG9hdGluZyBvcmJcclxuICAgICdQdXBwZXQgQ29tcG91bmQgTWVjaGFuaWNhbCBEaXNzZWN0aW9uJzogJzUxQjMnLCAvLyBzcGlubmluZyB2ZXJ0aWNhbCBsYXNlclxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCBNZWNoYW5pY2FsIERlY2FwaXRhdGlvbic6ICc1MUI0JywgLy8gZ2V0IHVuZGVyIGxhc2VyXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIE1lY2huaWNhbCBDb250dXNpb24gVW50YXJnZXRlZCc6ICc1MUI3JywgLy8gdW50YXJnZXRlZCBncm91bmQgYW9lXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFJlbGVudGxlc3MgU3BpcmFsIDEnOiAnNTFBQScsIC8vIHRyaXBsZSB1bnRhcmdldGVkIGdyb3VuZCBhb2VzXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFJlbGVudGxlc3MgU3BpcmFsIDInOiAnNTFDQicsIC8vIHRyaXBsZSB1bnRhcmdldGVkIGdyb3VuZCBhb2VzXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIE91dCAxJzogJzU0MUYnLCAvLyAyUCBwcmltZSBibGFkZSBnZXQgb3V0XHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIE91dCAyJzogJzUxOTgnLCAvLyAyUC9wdXBwZXQgdGVsZXBvcnRpbmcvcmVwcm9kdWNlIHByaW1lIGJsYWRlIGdldCBvdXRcclxuICAgICdQdXBwZXQgQ29tcG91bmQgMlAgUHJpbWUgQmxhZGUgQmVoaW5kIDEnOiAnNTQyMCcsIC8vIDJQIHByaW1lIGJsYWRlIGdldCBiZWhpbmRcclxuICAgICdQdXBwZXQgQ29tcG91bmQgMlAgUHJpbWUgQmxhZGUgQmVoaW5kIDInOiAnNTE5OScsIC8vIDJQIHRlbGVwb3J0aW5nIHByaW1lIGJsYWRlIGdldCBiZWhpbmRcclxuICAgICdQdXBwZXQgQ29tcG91bmQgMlAgUHJpbWUgQmxhZGUgSW4gMSc6ICc1NDIxJywgLy8gMlAgcHJpbWUgYmxhZGUgZ2V0IGluXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIEluIDInOiAnNTE5QScsIC8vIDJQL3B1cHBldCB0ZWxlcG9ydGluZy9yZXByb2R1Y2UgcHJpbWUgYmxhZGUgZ2V0IGluXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFIwMTIgTGFzZXIgR3JvdW5kJzogJzUxQUUnLCAvLyB1bnRhcmdldGVkIGdyb3VuZCBjaXJjbGVcclxuICAgIC8vIFRoaXMgaXMuLi4gdG9vIG5vaXN5LlxyXG4gICAgLy8gJ1B1cHBldCBDb21wb3VuZCAyUCBGb3VyIFBhcnRzIFJlc29sdmUgMSc6ICc1MUEwJywgLy8gZm91ciBwYXJ0cyByZXNvbHZlIGp1bXBcclxuICAgIC8vICdQdXBwZXQgQ29tcG91bmQgMlAgRm91ciBQYXJ0cyBSZXNvbHZlIDInOiAnNTE5RicsIC8vIGZvdXIgcGFydHMgcmVzb2x2ZSBjbGVhdmVcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdQdXBwZXQgSGVhdnkgVXBwZXIgTGFzZXIgMSc6ICc1MDg3JywgLy8gdXBwZXIgbGFzZXIgaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBIZWF2eSBVcHBlciBMYXNlciAyJzogJzRGRjcnLCAvLyB1cHBlciBsYXNlciBjb250aW51b3VzXHJcbiAgICAnUHVwcGV0IEhlYXZ5IExvd2VyIExhc2VyIDEnOiAnNTA4NicsIC8vIGxvd2VyIGxhc2VyIGZpcnN0IHNlY3Rpb24gaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBIZWF2eSBMb3dlciBMYXNlciAyJzogJzRGRjYnLCAvLyBsb3dlciBsYXNlciBmaXJzdCBzZWN0aW9uIGNvbnRpbnVvdXNcclxuICAgICdQdXBwZXQgSGVhdnkgTG93ZXIgTGFzZXIgMyc6ICc1MDg4JywgLy8gbG93ZXIgbGFzZXIgc2Vjb25kIHNlY3Rpb24gaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBIZWF2eSBMb3dlciBMYXNlciA0JzogJzRGRjgnLCAvLyBsb3dlciBsYXNlciBzZWNvbmQgc2VjdGlvbiBjb250aW51b3VzXHJcbiAgICAnUHVwcGV0IEhlYXZ5IExvd2VyIExhc2VyIDUnOiAnNTA4OScsIC8vIGxvd2VyIGxhc2VyIHRoaXJkIHNlY3Rpb24gaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBIZWF2eSBMb3dlciBMYXNlciA2JzogJzRGRjknLCAvLyBsb3dlciBsYXNlciB0aGlyZCBzZWN0aW9uIGNvbnRpbnVvdXNcclxuICAgICdQdXBwZXQgQ29tcG91bmQgSW5jb25ncnVvdXMgU3Bpbic6ICc1MUIyJywgLy8gZmluZCB0aGUgc2FmZSBzcG90IGRvdWJsZSBkYXNoXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdQdXBwZXQgQnVybnMnOiAnMTBCJywgLy8gc3RhbmRpbmcgaW4gbWFueSB2YXJpb3VzIGZpcmUgYW9lc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAvLyBUaGlzIGlzIHByZXR0eSBsYXJnZSBhbmQgZ2V0dGluZyBoaXQgYnkgaW5pdGlhbCB3aXRob3V0IGJ1cm5zIHNlZW1zIGZpbmUuXHJcbiAgICAvLyAnUHVwcGV0IExpZ2h0IEhvbWluZyBNaXNzaWxlIEltcGFjdCc6ICc1MjEwJywgLy8gdGFyZ2V0ZWQgZmlyZSBhb2UgZnJvbSBObyBSZXN0cmljdGlvbnNcclxuICAgICdQdXBwZXQgSGVhdnkgVW5jb252ZW50aW9uYWwgVm9sdGFnZSc6ICc1MDA0JyxcclxuICAgIC8vIFByZXR0eSBub2lzeS5cclxuICAgICdQdXBwZXQgTWFuZXV2ZXIgSGlnaC1Qb3dlcmVkIExhc2VyJzogJzUwMDInLCAvLyB0YW5rIGxhc2VyXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIE1lY2huaWNhbCBDb250dXNpb24gVGFyZ2V0ZWQnOiAnNTFCNicsIC8vIHRhcmdldGVkIHNwcmVhZCBtYXJrZXJcclxuICAgICdQdXBwZXQgQ29tcG91bmQgMlAgUjAxMiBMYXNlciBUYW5rJzogJzUxQUUnLCAvLyB0YXJnZXRlZCBzcHJlYWQgcG9kIGxhc2VyIG9uIG5vbi10YW5rXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdQdXBwZXQgQWVnaXMgQW50aS1QZXJzb25uZWwgTGFzZXInOiAnNTA5MCcsIC8vIHRhbmsgYnVzdGVyIG1hcmtlclxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBQcmVjaXNpb24tR3VpZGVkIE1pc3NpbGUnOiAnNEZDNScsXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFIwMTIgTGFzZXIgVGFuayc6ICc1MUFEJywgLy8gdGFyZ2V0ZWQgcG9kIGxhc2VyIG9uIHRhbmtcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBtaXNzaW5nIFNob2NrIEJsYWNrIDI/XHJcbi8vIFRPRE86IFdoaXRlL0JsYWNrIERpc3NvbmFuY2UgZGFtYWdlIGlzIG1heWJlIHdoZW4gZmxhZ3MgZW5kIGluIDAzP1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVRvd2VyQXRQYXJhZGlnbXNCcmVhY2gsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1Rvd2VyIEtuYXZlIENvbG9zc2FsIEltcGFjdCBDZW50ZXIgMSc6ICc1RUE3JywgLy8gQ2VudGVyIGFvZSBmcm9tIEtuYXZlIGFuZCBjbG9uZXNcclxuICAgICdUb3dlciBLbmF2ZSBDb2xvc3NhbCBJbXBhY3QgQ2VudGVyIDInOiAnNjBDOCcsIC8vIENlbnRlciBhb2UgZnJvbSBLbmF2ZSBkdXJpbmcgbHVuZ2VcclxuICAgICdUb3dlciBLbmF2ZSBDb2xvc3NhbCBJbXBhY3QgU2lkZSAxJzogJzVFQTUnLCAvLyBTaWRlIGFvZXMgZnJvbSBLbmF2ZSBhbmQgY2xvbmVzXHJcbiAgICAnVG93ZXIgS25hdmUgQ29sb3NzYWwgSW1wYWN0IFNpZGUgMic6ICc1RUE2JywgLy8gU2lkZSBhb2VzIGZyb20gS25hdmUgYW5kIGNsb25lc1xyXG4gICAgJ1Rvd2VyIEtuYXZlIENvbG9zc2FsIEltcGFjdCBTaWRlIDMnOiAnNjBDNicsIC8vIFNpZGUgYW9lcyBmcm9tIEtuYXZlIGR1cmluZyBsdW5nZVxyXG4gICAgJ1Rvd2VyIEtuYXZlIENvbG9zc2FsIEltcGFjdCBTaWRlIDQnOiAnNjBDNycsIC8vIFNpZGUgYW9lcyBmcm9tIEtuYXZlIGR1cmluZyBsdW5nZVxyXG4gICAgJ1Rvd2VyIEtuYXZlIEJ1cnN0JzogJzVFRDQnLCAvLyBTcGhlcm9pZCBLbmF2aXNoIEJ1bGxldHMgY29sbGlzaW9uXHJcbiAgICAnVG93ZXIgS25hdmUgTWFnaWMgQmFycmFnZSc6ICc1RUFDJywgLy8gU3BoZXJvaWQgbGluZSBhb2VzXHJcbiAgICAnVG93ZXIgSGFuc2VsIFJlcGF5JzogJzVDNzAnLCAvLyBTaGllbGQgZGFtYWdlXHJcbiAgICAnVG93ZXIgSGFuc2VsIEV4cGxvc2lvbic6ICc1QzY3JywgLy8gQmVpbmcgaGl0IGJ5IE1hZ2ljIEJ1bGxldCBkdXJpbmcgUGFzc2luZyBMYW5jZVxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBJbXBhY3QnOiAnNUM1QycsIC8vIEJlaW5nIGhpdCBieSBNYWdpY2FsIENvbmZsdWVuY2UgZHVyaW5nIFdhbmRlcmluZyBUcmFpbFxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBCbG9vZHkgU3dlZXAgMSc6ICc1QzZDJywgLy8gRHVhbCBjbGVhdmVzIHdpdGhvdXQgdGV0aGVyXHJcbiAgICAnVG93ZXIgSGFuc2VsIEJsb29keSBTd2VlcCAyJzogJzVDNkQnLCAvLyBEdWFsIGNsZWF2ZXMgd2l0aG91dCB0ZXRoZXJcclxuICAgICdUb3dlciBIYW5zZWwgQmxvb2R5IFN3ZWVwIDMnOiAnNUM2RScsIC8vIER1YWwgY2xlYXZlcyB3aXRoIHRldGhlclxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBCbG9vZHkgU3dlZXAgNCc6ICc1QzZGJywgLy8gRHVhbCBjbGVhdmVzIHdpdGggdGV0aGVyXHJcbiAgICAnVG93ZXIgSGFuc2VsIFBhc3NpbmcgTGFuY2UnOiAnNUM2NicsIC8vIFRoZSBQYXNzaW5nIExhbmNlIGNoYXJnZSBpdHNlbGZcclxuICAgICdUb3dlciBIYW5zZWwgQnJlYXRodGhyb3VnaCAxJzogJzU1QjMnLCAvLyBoYWxmIHJvb20gY2xlYXZlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBIYW5zZWwgQnJlYXRodGhyb3VnaCAyJzogJzVDNUQnLCAvLyBoYWxmIHJvb20gY2xlYXZlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBIYW5zZWwgQnJlYXRodGhyb3VnaCAzJzogJzVDNUUnLCAvLyBoYWxmIHJvb20gY2xlYXZlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBIYW5zZWwgSHVuZ3J5IExhbmNlIDEnOiAnNUM3MScsIC8vIDJ4bGFyZ2UgY29uYWwgY2xlYXZlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBIYW5zZWwgSHVuZ3J5IExhbmNlIDInOiAnNUM3MicsIC8vIDJ4bGFyZ2UgY29uYWwgY2xlYXZlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBGbGlnaHQgVW5pdCBMaWdodGZhc3QgQmxhZGUnOiAnNUJGRScsIC8vIGxhcmdlIHJvb20gY2xlYXZlXHJcbiAgICAnVG93ZXIgRmxpZ2h0IFVuaXQgU3RhbmRhcmQgTGFzZXInOiAnNUJGRicsIC8vIHRyYWNraW5nIGxhc2VyXHJcbiAgICAnVG93ZXIgMlAgV2hpcmxpbmcgQXNzYXVsdCc6ICc1QkZCJywgLy8gbGluZSBhb2UgZnJvbSAyUCBjbG9uZXNcclxuICAgICdUb3dlciAyUCBCYWxhbmNlZCBFZGdlJzogJzVCRkEnLCAvLyBjaXJjdWxhciBhb2Ugb24gMlAgY2xvbmVzXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciAxJzogJzYwMDYnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciAyJzogJzYwMDcnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciAzJzogJzYwMDgnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciA0JzogJzYwMDknLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciA1JzogJzYzMTAnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciA2JzogJzYzMTEnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciA3JzogJzYzMTInLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgR2VuZXJhdGUgQmFycmllciA4JzogJzYzMTMnLCAvLyBiZWluZyBoaXQgYnkgYmFycmllcnMgYXBwZWFyaW5nXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgU2hvY2sgV2hpdGUgMSc6ICc2MDBGJywgLy8gd2hpdGUgc2hvY2t3YXZlIGNpcmNsZSBub3QgZHJvcHBlZCBvbiBibGFja1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFNob2NrIFdoaXRlIDInOiAnNjAxMCcsIC8vIHdoaXRlIHNob2Nrd2F2ZSBjaXJjbGUgbm90IGRyb3BwZWQgb24gYmxhY2tcclxuICAgICdUb3dlciBSZWQgR2lybCBTaG9jayBCbGFjayAxJzogJzYwMTEnLCAvLyBibGFjayBzaG9ja3dhdmUgY2lyY2xlIG5vdCBkcm9wcGVkIG9uIHdoaXRlXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgUG9pbnQgV2hpdGUgMSc6ICc2MDFGJywgLy8gYmVpbmcgaGl0IGJ5IGEgd2hpdGUgbGFzZXJcclxuICAgICdUb3dlciBSZWQgR2lybCBQb2ludCBXaGl0ZSAyJzogJzYwMjEnLCAvLyBiZWluZyBoaXQgYnkgYSB3aGl0ZSBsYXNlclxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFBvaW50IEJsYWNrIDEnOiAnNjAyMCcsIC8vIGJlaW5nIGhpdCBieSBhIGJsYWNrIGxhc2VyXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgUG9pbnQgQmxhY2sgMic6ICc2MDIyJywgLy8gYmVpbmcgaGl0IGJ5IGEgYmxhY2sgbGFzZXJcclxuICAgICdUb3dlciBSZWQgR2lybCBXaXBlIFdoaXRlJzogJzYwMEMnLCAvLyBub3QgbGluZSBvZiBzaWdodGluZyB0aGUgd2hpdGUgbWV0ZW9yXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgV2lwZSBCbGFjayc6ICc2MDBEJywgLy8gbm90IGxpbmUgb2Ygc2lnaHRpbmcgdGhlIGJsYWNrIG1ldGVvclxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIERpZmZ1c2UgRW5lcmd5JzogJzYwNTYnLCAvLyByb3RhdGluZyBjbG9uZSBidWJibGUgY2xlYXZlc1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFB5bG9uIEJpZyBFeHBsb3Npb24nOiAnNjAyNycsIC8vIG5vdCBraWxsaW5nIGEgcHlsb24gZHVyaW5nIGhhY2tpbmcgcGhhc2VcclxuICAgICdUb3dlciBSZWQgR2lybCBQeWxvbiBFeHBsb3Npb24nOiAnNjAyNicsIC8vIHB5bG9uIGR1cmluZyBDaGlsZCdzIHBsYXlcclxuICAgICdUb3dlciBQaGlsb3NvcGhlciBEZXBsb3kgQXJtYW1lbnRzIE1pZGRsZSc6ICc1QzAyJywgLy8gbWlkZGxlIGxhc2VyXHJcbiAgICAnVG93ZXIgUGhpbG9zb3BoZXIgRGVwbG95IEFybWFtZW50cyBTaWRlcyc6ICc1QzA1JywgLy8gc2lkZXMgbGFzZXJcclxuICAgICdUb3dlciBQaGlsb3NvcGhlciBEZXBsb3kgQXJtYW1lbnRzIDMnOiAnNjA3OCcsIC8vIGdvZXMgd2l0aCA1QzAxXHJcbiAgICAnVG93ZXIgUGhpbG9zb3BoZXIgRGVwbG95IEFybWFtZW50cyA0JzogJzYwNzknLCAvLyBnb2VzIHdpdGggNUMwNFxyXG4gICAgJ1Rvd2VyIFBoaWxvc29waGVyIEVuZXJneSBCb21iJzogJzVDMDUnLCAvLyBwaW5rIGJ1YmJsZVxyXG4gICAgJ1Rvd2VyIEZhbHNlIElkb2wgTWFkZSBNYWdpYyBSaWdodCc6ICc1QkQ3JywgLy8gcm90YXRpbmcgd2hlZWwgZ29pbmcgcmlnaHRcclxuICAgICdUb3dlciBGYWxzZSBJZG9sIE1hZGUgTWFnaWMgTGVmdCc6ICc1QkQ2JywgLy8gcm90YXRpbmcgd2hlZWwgZ29pbmcgbGVmdFxyXG4gICAgJ1Rvd2VyIEZhbHNlIElkb2wgTGlnaHRlciBOb3RlJzogJzVCREEnLCAvLyBsaWdodGVyIG5vdGUgbW92aW5nIGFvZXNcclxuICAgICdUb3dlciBGYWxzZSBJZG9sIE1hZ2ljYWwgSW50ZXJmZXJlbmNlJzogJzVCRDUnLCAvLyBsYXNlcnMgZHVyaW5nIFJoeXRobSBSaW5nc1xyXG4gICAgJ1Rvd2VyIEZhbHNlIElkb2wgU2NhdHRlcmVkIE1hZ2ljJzogJzVCREYnLCAvLyBjaXJjbGUgYW9lcyBmcm9tIFNlZWQgT2YgTWFnaWNcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBVbmV2ZW4gRm90dGluZyc6ICc1QkUyJywgLy8gYnVpbGRpbmcgZnJvbSBSZWNyZWF0ZSBTdHJ1Y3R1cmVcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBDcmFzaCc6ICc1QkU1JywgLy8gdHJhaW5zIGZyb20gTWl4ZWQgU2lnbmFsc1xyXG4gICAgJ1Rvd2VyIEhlciBJbmZsb3Jlc2NlbmNlIEhlYXZ5IEFybXMgMSc6ICc1QkVEJywgLy8gaGVhdnkgYXJtcyBmcm9udC9iYWNrIGF0dGFja1xyXG4gICAgJ1Rvd2VyIEhlciBJbmZsb3Jlc2NlbmNlIEhlYXZ5IEFybXMgMic6ICc1QkVGJywgLy8gaGVhdnkgYXJtcyBzaWRlcyBhdHRhY2tcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBFbmVyZ3kgU2NhdHRlcmVkIE1hZ2ljJzogJzVCRTgnLCAvLyBvcmJzIGZyb20gUmVkIEdpcmwgYnkgdHJhaW5cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBQbGFjZSBPZiBQb3dlcic6ICc1QzBEJywgLy8gaW5zdGFkZWF0aCBtaWRkbGUgY2lyY2xlIGJlZm9yZSBibGFjay93aGl0ZSByaW5nc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVG93ZXIgS25hdmUgTWFnaWMgQXJ0aWxsZXJ5IEFscGhhJzogJzVFQUInLCAvLyBTcHJlYWRcclxuICAgICdUb3dlciBIYW5zZWwgU2VlZCBPZiBNYWdpYyBBbHBoYSc6ICc1QzYxJywgLy8gU3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUb3dlciBLbmF2ZSBNYWdpYyBBcnRpbGxlcnkgQmV0YSc6ICc1RUIzJywgLy8gVGFua2J1c3RlclxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIE1hbmlwdWxhdGUgRW5lcmd5JzogJzYwMUEnLCAvLyBUYW5rYnVzdGVyXHJcbiAgICAnVG93ZXIgRmFsc2UgSWRvbCBEYXJrZXIgTm90ZSc6ICc1QkRDJywgLy8gVGFua2J1c3RlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdUb3dlciBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gNUVCMSA9IEtuYXZlIEx1bmdlXHJcbiAgICAgIC8vIDVCRjIgPSBIZXIgSW5mbG9yZXNlbmNlIFNob2Nrd2F2ZVxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNUVCMScsICc1QkYyJ10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFrYWRhZW1pYUFueWRlcixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQW55ZGVyIEFjcmlkIFN0cmVhbSc6ICc0MzA0JyxcclxuICAgICdBbnlkZXIgV2F0ZXJzcG91dCc6ICc0MzA2JyxcclxuICAgICdBbnlkZXIgUmFnaW5nIFdhdGVycyc6ICc0MzAyJyxcclxuICAgICdBbnlkZXIgVmlvbGVudCBCcmVhY2gnOiAnNDMwNScsXHJcbiAgICAnQW55ZGVyIFRpZGFsIEd1aWxsb3RpbmUgMSc6ICczRTA4JyxcclxuICAgICdBbnlkZXIgVGlkYWwgR3VpbGxvdGluZSAyJzogJzNFMEEnLFxyXG4gICAgJ0FueWRlciBQZWxhZ2ljIENsZWF2ZXIgMSc6ICczRTA5JyxcclxuICAgICdBbnlkZXIgUGVsYWdpYyBDbGVhdmVyIDInOiAnM0UwQicsXHJcbiAgICAnQW55ZGVyIEFxdWF0aWMgTGFuY2UnOiAnM0UwNScsXHJcbiAgICAnQW55ZGVyIFN5cnVwIFNwb3V0JzogJzQzMDgnLFxyXG4gICAgJ0FueWRlciBOZWVkbGUgU3Rvcm0nOiAnNDMwOScsXHJcbiAgICAnQW55ZGVyIEV4dGVuc2libGUgVGVuZHJpbHMgMSc6ICczRTEwJyxcclxuICAgICdBbnlkZXIgRXh0ZW5zaWJsZSBUZW5kcmlscyAyJzogJzNFMTEnLFxyXG4gICAgJ0FueWRlciBQdXRyaWQgQnJlYXRoJzogJzNFMTInLFxyXG4gICAgJ0FueWRlciBEZXRvbmF0b3InOiAnNDMwRicsXHJcbiAgICAnQW55ZGVyIERvbWluaW9uIFNsYXNoJzogJzQzMEQnLFxyXG4gICAgJ0FueWRlciBRdWFzYXInOiAnNDMwQicsXHJcbiAgICAnQW55ZGVyIERhcmsgQXJyaXZpc21lJzogJzQzMEUnLFxyXG4gICAgJ0FueWRlciBUaHVuZGVyc3Rvcm0nOiAnM0UxQycsXHJcbiAgICAnQW55ZGVyIFdpbmRpbmcgQ3VycmVudCc6ICczRTFGJyxcclxuICAgIC8vIDNFMjAgaXMgYmVpbmcgaGl0IGJ5IHRoZSBncm93aW5nIG9yYnMsIG1heWJlP1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQW1hdXJvdCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQW1hdXJvdCBCdXJuaW5nIFNreSc6ICczNTRBJyxcclxuICAgICdBbWF1cm90IFdoYWNrJzogJzM1M0MnLFxyXG4gICAgJ0FtYXVyb3QgQWV0aGVyc3Bpa2UnOiAnMzUzQicsXHJcbiAgICAnQW1hdXJvdCBWZW5lbW91cyBCcmVhdGgnOiAnM0NDRScsXHJcbiAgICAnQW1hdXJvdCBDb3NtaWMgU2hyYXBuZWwnOiAnNEQyNicsXHJcbiAgICAnQW1hdXJvdCBFYXJ0aHF1YWtlJzogJzNDQ0QnLFxyXG4gICAgJ0FtYXVyb3QgTWV0ZW9yIFJhaW4nOiAnM0NDNicsXHJcbiAgICAnQW1hdXJvdCBGaW5hbCBTa3knOiAnM0NDQicsXHJcbiAgICAnQW1hdXJvdCBNYWxldm9sZW5jZSc6ICczNTQxJyxcclxuICAgICdBbWF1cm90IFR1cm5hYm91dCc6ICczNTQyJyxcclxuICAgICdBbWF1cm90IFNpY2tseSBJbmZlcm5vJzogJzNERTMnLFxyXG4gICAgJ0FtYXVyb3QgRGlzcXVpZXRpbmcgR2xlYW0nOiAnMzU0NicsXHJcbiAgICAnQW1hdXJvdCBCbGFjayBEZWF0aCc6ICczNTQzJyxcclxuICAgICdBbWF1cm90IEZvcmNlIG9mIExvYXRoaW5nJzogJzM1NDQnLFxyXG4gICAgJ0FtYXVyb3QgRGFtbmluZyBSYXkgMSc6ICczRTAwJyxcclxuICAgICdBbWF1cm90IERhbW5pbmcgUmF5IDInOiAnM0UwMScsXHJcbiAgICAnQW1hdXJvdCBEZWFkbHkgVGVudGFjbGVzJzogJzM1NDcnLFxyXG4gICAgJ0FtYXVyb3QgTWlzZm9ydHVuZSc6ICczQ0UyJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdBbWF1cm90IEFwb2thbHlwc2lzJzogJzNDRDcnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQW5hbW5lc2lzQW55ZGVyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBbmFtbmVzaXMgVHJlbmNoIFBodWFibyBTcGluZSBMYXNoJzogJzREMUEnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFRyZW5jaCBBbmVtb25lIEZhbGxpbmcgUm9jayc6ICc0RTM3JywgLy8gZ3JvdW5kIGNpcmNsZSBhb2UgZnJvbSBUcmVuY2ggQW5lbW9uZSBzaG93aW5nIHVwXHJcbiAgICAnQW5hbW5lc2lzIFRyZW5jaCBEYWdvbml0ZSBTZXdlciBXYXRlcic6ICc0RDFDJywgLy8gZnJvbnRhbCBjb25hbCBmcm9tIFRyZW5jaCBBbmVtb25lICg/ISlcclxuICAgICdBbmFtbmVzaXMgVHJlbmNoIFlvdnJhIFJvY2sgSGFyZCc6ICc0RDIxJywgLy8gdGFyZ2V0ZWQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBUcmVuY2ggWW92cmEgVG9ycmVudGlhbCBUb3JtZW50JzogJzREMjEnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gTHVtaW5vdXMgUmF5JzogJzRFMjcnLCAvLyBVbmtub3duIGxpbmUgYW9lXHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gU2luc3RlciBCdWJibGUgRXhwbG9zaW9uJzogJzRCNkUnLCAvLyBVbmtub3duIGV4cGxvc2lvbnMgZHVyaW5nIFNjcnV0aW55XHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gUmVmbGVjdGlvbic6ICc0QjZGJywgLy8gVW5rbm93biBjb25hbCBhdHRhY2sgZHVyaW5nIFNjcnV0aW55XHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gQ2xlYXJvdXQgMSc6ICc0Qjc0JywgLy8gVW5rbm93biBmcm9udGFsIGNvbmVcclxuICAgICdBbmFtbmVzaXMgVW5rbm93biBDbGVhcm91dCAyJzogJzRCNkInLCAvLyBVbmtub3duIGZyb250YWwgY29uZVxyXG4gICAgJ0FuYW1uZXNpcyBVbmtub3duIFNldGJhY2sgMSc6ICc0Qjc1JywgLy8gVW5rbm93biByZWFyIGNvbmVcclxuICAgICdBbmFtbmVzaXMgVW5rbm93biBTZXRiYWNrIDInOiAnNUI2QycsIC8vIFVua25vd24gcmVhciBjb25lXHJcbiAgICAnQW5hbW5lc2lzIEFueWRlciBDbGlvbmlkIEFjcmlkIFN0cmVhbSc6ICc0RDI0JywgLy8gdGFyZ2V0ZWQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBBbnlkZXIgRGl2aW5lciBEcmVhZHN0b3JtJzogJzREMjgnLCAvLyBncm91bmQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBLeWtsb3BzIDIwMDAtTWluYSBTd2luZyc6ICc0QjU1JywgLy8gS3lrbG9wcyBnZXQgb3V0IG1lY2hhbmljXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgVGVycmlibGUgSGFtbWVyJzogJzRCNUQnLCAvLyBLeWtsb3BzIEhhbW1lci9CbGFkZSBhbHRlcm5hdGluZyBzcXVhcmVzXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgVGVycmlibGUgQmxhZGUnOiAnNEI1RScsIC8vIEt5a2xvcHMgSGFtbWVyL0JsYWRlIGFsdGVybmF0aW5nIHNxdWFyZXNcclxuICAgICdBbmFtbmVzaXMgS3lrbG9wcyBSYWdpbmcgR2xvd2VyJzogJzRCNTYnLCAvLyBLeWtsb3BzIGxpbmUgYW9lXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgRXllIE9mIFRoZSBDeWNsb25lJzogJzRCNTcnLCAvLyBLeWtsb3BzIGRvbnV0XHJcbiAgICAnQW5hbW5lc2lzIEFueWRlciBIYXJwb29uZXIgSHlkcm9iYWxsJzogJzREMjYnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFJ1a3NocyBTd2lmdCBTaGlmdCc6ICc0QjgzJywgLy8gUnVrc2hzIERlZW0gdGVsZXBvcnQgTi9TXHJcbiAgICAnQW5hbW5lc2lzIFJ1a3NocyBEZXB0aCBHcmlwIFdhdmVicmVha2VyJzogJzMzRDQnLCAvLyBSdWtzaHMgRGVlbSBoYW5kIGF0dGFja3NcclxuICAgICdBbmFtbmVzaXMgUnVrc2hzIFJpc2luZyBUaWRlJzogJzRCOEInLCAvLyBSdWtzaHMgRGVlbSBjcm9zcyBhb2VcclxuICAgICdBbmFtbmVzaXMgUnVrc2hzIENvbW1hbmQgQ3VycmVudCc6ICc0QjgyJywgLy8gUnVrc2hzIERlZW0gcHJvdGVhbi1pc2ggZ3JvdW5kIGFvZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0FuYW1uZXNpcyBUcmVuY2ggWHpvbWl0IE1hbnRsZSBEcmlsbCc6ICc0RDE5JywgLy8gY2hhcmdlIGF0dGFja1xyXG4gICAgJ0FuYW1uZXNpcyBJbyBPdXNpYSBCYXJyZWxpbmcgU21hc2gnOiAnNEUyNCcsIC8vIGNoYXJnZSBhdHRhY2tcclxuICAgICdBbmFtbmVzaXMgS3lrbG9wcyBXYW5kZXJlclxcJ3MgUHlyZSc6ICc0QjVGJywgLy8gS3lrbG9wcyBzcHJlYWQgYXR0YWNrXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogTWlzc2luZyBHcm93aW5nIHRldGhlcnMgb24gYm9zcyAyLlxyXG4vLyAoTWF5YmUgZ2F0aGVyIHBhcnR5IG1lbWJlciBuYW1lcyBvbiB0aGUgcHJldmlvdXMgVElJSUlNQkVFRUVFRVIgY2FzdCBmb3IgY29tcGFyaXNvbj8pXHJcbi8vIFRPRE86IEZhaWxpbmcgdG8gaW50ZXJydXB0IERvaG5mYXVzdCBGdWF0aCBvbiBXYXRlcmluZyBXaGVlbCBjYXN0cz9cclxuLy8gKDE1Oi4uLi4uLi4uOkRvaG5mYXN0IEZ1YXRoOjNEQUE6V2F0ZXJpbmcgV2hlZWw6Li4uLi4uLi46KFxceXtOYW1lfSk6KVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRvaG5NaGVnLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdEb2huIE1oZWcgR2V5c2VyJzogJzIyNjAnLCAvLyBXYXRlciBlcnVwdGlvbnMsIGJvc3MgMVxyXG4gICAgJ0RvaG4gTWhlZyBIeWRyb2ZhbGwnOiAnMjJCRCcsIC8vIEdyb3VuZCBBb0UgbWFya2VyLCBib3NzIDFcclxuICAgICdEb2huIE1oZWcgTGF1Z2hpbmcgTGVhcCc6ICcyMjk0JywgLy8gR3JvdW5kIEFvRSBtYXJrZXIsIGJvc3MgMVxyXG4gICAgJ0RvaG4gTWhlZyBTd2luZ2UnOiAnMjJDQScsIC8vIEZyb250YWwgY29uZSwgYm9zcyAyXHJcbiAgICAnRG9obiBNaGVnIENhbm9weSc6ICczREIwJywgLy8gRnJvbnRhbCBjb25lLCBEb2huZmF1c3QgUm93YW5zIHRocm91Z2hvdXQgaW5zdGFuY2VcclxuICAgICdEb2huIE1oZWcgUGluZWNvbmUgQm9tYic6ICczREIxJywgLy8gQ2lyY3VsYXIgZ3JvdW5kIEFvRSBtYXJrZXIsIERvaG5mYXVzdCBSb3dhbnMgdGhyb3VnaG91dCBpbnN0YW5jZVxyXG4gICAgJ0RvaG4gTWhlZyBCaWxlIEJvbWJhcmRtZW50JzogJzM0RUUnLCAvLyBHcm91bmQgQW9FIG1hcmtlciwgYm9zcyAzXHJcbiAgICAnRG9obiBNaGVnIENvcnJvc2l2ZSBCaWxlJzogJzM0RUMnLCAvLyBGcm9udGFsIGNvbmUsIGJvc3MgM1xyXG4gICAgJ0RvaG4gTWhlZyBGbGFpbGluZyBUZW50YWNsZXMnOiAnMzY4MScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0RvaG4gTWhlZyBJbXAgQ2hvaXInLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNDZFJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEb2huIE1oZWcgVG9hZCBDaG9pcicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxQjcnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RvaG4gTWhlZyBGb29sXFwncyBUdW1ibGUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMTgzJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBCZXJzZXJrZXIgMm5kLzNyZCB3aWxkIGFuZ3Vpc2ggc2hvdWxkIGJlIHNoYXJlZCB3aXRoIGp1c3QgYSByb2NrXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlSGVyb2VzR2F1bnRsZXQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RIRyBCbGFkZVxcJ3MgQmVuaXNvbic6ICc1MjI4JywgLy8gcGxkIGNvbmFsXHJcbiAgICAnVEhHIEFic29sdXRlIEhvbHknOiAnNTI0QicsIC8vIHdobSB2ZXJ5IGxhcmdlIGFvZVxyXG4gICAgJ1RIRyBIaXNzYXRzdTogR29rYSc6ICc1MjNEJywgLy8gc2FtIGxpbmUgYW9lXHJcbiAgICAnVEhHIFdob2xlIFNlbGYnOiAnNTIyRCcsIC8vIG1uayB3aWRlIGxpbmUgYW9lXHJcbiAgICAnVEhHIFJhbmRncml0aCc6ICc1MjMyJywgLy8gZHJnIHZlcnkgYmlnIGxpbmUgYW9lXHJcbiAgICAnVEhHIFZhY3V1bSBCbGFkZSAxJzogJzUwNjEnLCAvLyBTcGVjdHJhbCBUaGllZiBjaXJjdWxhciBncm91bmQgYW9lIGZyb20gbWFya2VyXHJcbiAgICAnVEhHIFZhY3V1bSBCbGFkZSAyJzogJzUwNjInLCAvLyBTcGVjdHJhbCBUaGllZiBjaXJjdWxhciBncm91bmQgYW9lIGZyb20gbWFya2VyXHJcbiAgICAnVEhHIENvd2FyZFxcJ3MgQ3VubmluZyc6ICc0RkQ3JywgLy8gU3BlY3RyYWwgVGhpZWYgQ2hpY2tlbiBLbmlmZSBsYXNlclxyXG4gICAgJ1RIRyBQYXBlcmN1dHRlciAxJzogJzRGRDEnLCAvLyBTcGVjdHJhbCBUaGllZiBsaW5lIGFvZSBmcm9tIG1hcmtlclxyXG4gICAgJ1RIRyBQYXBlcmN1dHRlciAyJzogJzRGRDInLCAvLyBTcGVjdHJhbCBUaGllZiBsaW5lIGFvZSBmcm9tIG1hcmtlclxyXG4gICAgJ1RIRyBSaW5nIG9mIERlYXRoJzogJzUyMzYnLCAvLyBkcmcgY2lyY3VsYXIgYW9lXHJcbiAgICAnVEhHIEx1bmFyIEVjbGlwc2UnOiAnNTIyNycsIC8vIHBsZCBjaXJjdWxhciBhb2VcclxuICAgICdUSEcgQWJzb2x1dGUgR3Jhdml0eSc6ICc1MjQ4JywgLy8gaW5rIG1hZ2UgY2lyY3VsYXJcclxuICAgICdUSEcgUmFpbiBvZiBMaWdodCc6ICc1MjQyJywgLy8gYmFyZCBsYXJnZSBjaXJjdWxlIGFvZVxyXG4gICAgJ1RIRyBEb29taW5nIEZvcmNlJzogJzUyMzknLCAvLyBkcmcgbGluZSBhb2VcclxuICAgICdUSEcgQWJzb2x1dGUgRGFyayBJSSc6ICc0RjYxJywgLy8gTmVjcm9tYW5jZXIgMTIwIGRlZ3JlZSBjb25hbFxyXG4gICAgJ1RIRyBCdXJzdCc6ICc1M0I3JywgLy8gTmVjcm9tYW5jZXIgbmVjcm9idXJzdCBzbWFsbCB6b21iaWUgZXhwbG9zaW9uXHJcbiAgICAnVEhHIFBhaW4gTWlyZSc6ICc0RkE0JywgLy8gTmVjcm9tYW5jZXIgdmVyeSBsYXJnZSBncmVlbiBibGVlZCBwdWRkbGVcclxuICAgICdUSEcgRGFyayBEZWx1Z2UnOiAnNEY1RCcsIC8vIE5lY3JvbWFuY2VyIGdyb3VuZCBhb2VcclxuICAgICdUSEcgVGVra2EgR29qaW4nOiAnNTIzRScsIC8vIHNhbSA5MCBkZWdyZWUgY29uYWxcclxuICAgICdUSEcgUmFnaW5nIFNsaWNlIDEnOiAnNTIwQScsIC8vIEJlcnNlcmtlciBsaW5lIGNsZWF2ZVxyXG4gICAgJ1RIRyBSYWdpbmcgU2xpY2UgMic6ICc1MjBCJywgLy8gQmVyc2Vya2VyIGxpbmUgY2xlYXZlXHJcbiAgICAnVEhHIFdpbGQgUmFnZSc6ICc1MjAzJywgLy8gQmVyc2Vya2VyIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1RIRyBCbGVlZGluZyc6ICc4MjgnLCAvLyBTdGFuZGluZyBpbiB0aGUgTmVjcm9tYW5jZXIgcHVkZGxlIG9yIG91dHNpZGUgdGhlIEJlcnNlcmtlciBhcmVuYVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnVEhHIFRydWx5IEJlcnNlcmsnOiAnOTA2JywgLy8gU3RhbmRpbmcgaW4gdGhlIGNyYXRlciB0b28gbG9uZ1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVEhHIEFic29sdXRlIFRodW5kZXIgSVYnOiAnNTI0NScsIC8vIGhlYWRtYXJrZXIgYW9lIGZyb20gYmxtXHJcbiAgICAnVEhHIE1vb25kaXZlcic6ICc1MjMzJywgLy8gaGVhZG1hcmtlciBhb2UgZnJvbSBkcmdcclxuICAgICdUSEcgU3BlY3RyYWwgR3VzdCc6ICc1M0NGJywgLy8gU3BlY3RyYWwgVGhpZWYgaGVhZG1hcmtlciBhb2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RIRyBGYWxsaW5nIFJvY2snOiAnNTIwNScsIC8vIEJlcnNlcmtlciBoZWFkbWFya2VyIGFvZSB0aGF0IGNyZWF0ZXMgcnViYmxlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgLy8gVGhpcyBzaG91bGQgYWx3YXlzIGJlIHNoYXJlZC4gIE9uIGFsbCB0aW1lcyBidXQgdGhlIDJuZCBhbmQgM3JkLCBpdCdzIGEgcGFydHkgc2hhcmUuXHJcbiAgICAvLyBUT0RPOiBvbiB0aGUgMm5kIGFuZCAzcmQgdGltZSB0aGlzIHNob3VsZCBvbmx5IGJlIHNoYXJlZCB3aXRoIGEgcm9jay5cclxuICAgIC8vIFRPRE86IGFsdGVybmF0aXZlbHkgd2FybiBvbiB0YWtpbmcgb25lIG9mIHRoZXNlIHdpdGggYSA0NzIgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBlZmZlY3RcclxuICAgICdUSEcgV2lsZCBBbmd1aXNoJzogJzUyMDknLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdUSEcgV2lsZCBSYW1wYWdlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNTIwNycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gVGhpcyBpcyB6ZXJvIGRhbWFnZSBpZiB5b3UgYXJlIGluIHRoZSBjcmF0ZXIuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkhvbG1pbnN0ZXJTd2l0Y2gsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0hvbG1pbnN0ZXIgVGh1bWJzY3Jldyc6ICczREM2JyxcclxuICAgICdIb2xtaW5zdGVyIFdvb2RlbiBob3JzZSc6ICczREM3JyxcclxuICAgICdIb2xtaW5zdGVyIExpZ2h0IFNob3QnOiAnM0RDOCcsXHJcbiAgICAnSG9sbWluc3RlciBIZXJldGljXFwncyBGb3JrJzogJzNEQ0UnLFxyXG4gICAgJ0hvbG1pbnN0ZXIgSG9seSBXYXRlcic6ICczREQ0JyxcclxuICAgICdIb2xtaW5zdGVyIEZpZXJjZSBCZWF0aW5nIDEnOiAnM0RERCcsXHJcbiAgICAnSG9sbWluc3RlciBGaWVyY2UgQmVhdGluZyAyJzogJzNEREUnLFxyXG4gICAgJ0hvbG1pbnN0ZXIgRmllcmNlIEJlYXRpbmcgMyc6ICczRERGJyxcclxuICAgICdIb2xtaW5zdGVyIENhdCBPXFwnIE5pbmUgVGFpbHMnOiAnM0RFMScsXHJcbiAgICAnSG9sbWluc3RlciBSaWdodCBLbm91dCc6ICczREU2JyxcclxuICAgICdIb2xtaW5zdGVyIExlZnQgS25vdXQnOiAnM0RFNycsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnSG9sbWluc3RlciBBZXRoZXJzdXAnOiAnM0RFOScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdIb2xtaW5zdGVyIEZsYWdlbGxhdGlvbic6ICczREQ2JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0hvbG1pbnN0ZXIgVGFwaGVwaG9iaWEnOiAnNDE4MScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5NYWxpa2Foc1dlbGwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ01hbGlrYWggRmFsbGluZyBSb2NrJzogJzNDRUEnLFxyXG4gICAgJ01hbGlrYWggV2VsbGJvcmUnOiAnM0NFRCcsXHJcbiAgICAnTWFsaWthaCBHZXlzZXIgRXJ1cHRpb24nOiAnM0NFRScsXHJcbiAgICAnTWFsaWthaCBTd2lmdCBTcGlsbCc6ICczQ0YwJyxcclxuICAgICdNYWxpa2FoIEJyZWFraW5nIFdoZWVsIDEnOiAnM0NGNScsXHJcbiAgICAnTWFsaWthaCBDcnlzdGFsIE5haWwnOiAnM0NGNycsXHJcbiAgICAnTWFsaWthaCBIZXJldGljXFwncyBGb3JrIDEnOiAnM0NGOScsXHJcbiAgICAnTWFsaWthaCBCcmVha2luZyBXaGVlbCAyJzogJzNDRkEnLFxyXG4gICAgJ01hbGlrYWggSGVyZXRpY1xcJ3MgRm9yayAyJzogJzNFMEUnLFxyXG4gICAgJ01hbGlrYWggRWFydGhzaGFrZSc6ICczRTM5JyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogY291bGQgaW5jbHVkZSA1NDg0IE11ZG1hbiBSb2NreSBSb2xsIGFzIGEgc2hhcmVXYXJuLCBidXQgaXQncyBsb3cgZGFtYWdlIGFuZCBjb21tb24uXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuTWF0b3lhc1JlbGljdCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTWF0b3lhIFJlbGljdCBXZXJld29vZCBPdmF0aW9uJzogJzU1MTgnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ01hdG95YSBDYXZlIFRhcmFudHVsYSBIYXdrIEFwaXRveGluJzogJzU1MTknLCAvLyBiaWcgY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBTcHJpZ2dhbiBTdG9uZWJlYXJlciBSb21wJzogJzU1MUEnLCAvLyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgU29ubnkgT2YgWmlnZ3kgSml0dGVyaW5nIEdsYXJlJzogJzU1MUMnLCAvLyBsb25nIG5hcnJvdyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgTXVkbWFuIFF1YWdtaXJlJzogJzU0ODEnLCAvLyBNdWRtYW4gYW9lIHB1ZGRsZXNcclxuICAgICdNYXRveWEgTXVkbWFuIEJyaXR0bGUgQnJlY2NpYSAxJzogJzU0OEUnLCAvLyBleHBhbmRpbmcgY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBNdWRtYW4gQnJpdHRsZSBCcmVjY2lhIDInOiAnNTQ4RicsIC8vIGV4cGFuZGluZyBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIE11ZG1hbiBCcml0dGxlIEJyZWNjaWEgMyc6ICc1NDkwJywgLy8gZXhwYW5kaW5nIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgTXVkbWFuIE11ZCBCdWJibGUnOiAnNTQ4NycsIC8vIHN0YW5kaW5nIGluIG11ZCBwdWRkbGU/XHJcbiAgICAnTWF0b3lhIENhdmUgUHVnaWwgU2NyZXdkcml2ZXInOiAnNTUxRScsIC8vIGNvbmFsIGFvZVxyXG4gICAgJ01hdG95YSBOaXhpZSBHdXJnbGUnOiAnNTk5MicsIC8vIE5peGllIHdhbGwgZmx1c2hcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIFB5cm9jbGFzdGljIFNob3QnOiAnNTdFQicsIC8vIHRoZSBsaW5lIGFvZXMgYXMgeW91IHJ1biB0byB0cmFzaFxyXG4gICAgJ01hdG95YSBSZWxpY3QgRmxhbiBGbG9vZCc6ICc1NTIzJywgLy8gYmlnIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgUHlyb2R1Y3QgRWxkdGh1cnMgTWFzaCc6ICc1NTI3JywgLy8gbGluZSBhb2VcclxuICAgICdNYXR5b2EgUHlyb2R1Y3QgRWxkdGh1cnMgU3Bpbic6ICc1NTI4JywgLy8gdmVyeSBsYXJnZSBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIFJlbGljdCBCYXZhcm9pcyBUaHVuZGVyIElJSSc6ICc1NTI1JywgLy8gY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBSZWxpY3QgTWFyc2htYWxsb3cgQW5jaWVudCBBZXJvJzogJzU1MjQnLCAvLyB2ZXJ5IGxhcmdlIGxpbmUgZ3JvYW9lXHJcbiAgICAnTWF0b3lhIFJlbGljdCBQdWRkaW5nIEZpcmUgSUknOiAnNTUyMicsIC8vIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIEhvdCBMYXZhJzogJzU3RTknLCAvLyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIFZvbGNhbmljIERyb3AnOiAnNTdFOCcsIC8vIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgTW90aGVyIFBvcnhpZSBNZWRpdW0gUmVhcic6ICc1OTFEJywgLy8ga25vY2tiYWNrIGludG8gc2FmZSBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIE1vdGhlciBQb3J4aWUgQmFyYmVxdWUgTGluZSc6ICc1OTE3JywgLy8gbGluZSBhb2UgZHVyaW5nIGJicVxyXG4gICAgJ01hdG95YSBNb3RoZXIgUG9yeGllIEJhcmJlcXVlIENpcmNsZSc6ICc1OTE4JywgLy8gY2lyY2xlIGFvZSBkdXJpbmcgYmJxXHJcbiAgICAnTWF0b3lhIE1vdGhlciBQb3J4aWUgVG8gQSBDcmlzcCc6ICc1OTI1JywgLy8gZ2V0dGluZyB0byBjbG9zZSB0byBib3NzIGR1cmluZyBiYnFcclxuICAgICdNYXRveWEgTW90aGVyIFByb3hpZSBCdWZmZXQnOiAnNTkyNicsIC8vIEFlb2xpYW4gQ2F2ZSBTcHJpdGUgbGluZSBhb2UgKGlzIHRoaXMgYSBwdW4/KVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ01hdG95YSBOaXhpZSBTZWEgU2hhbnR5JzogJzU5OEMnLCAvLyBOb3QgdGFraW5nIHRoZSBwdWRkbGUgdXAgdG8gdGhlIHRvcD8gRmFpbGluZyBhZGQgZW5yYWdlP1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTWF0b3lhIE5peGllIENyYWNrJzogJzU5OTAnLCAvLyBOaXhpZSBDcmFzaC1TbWFzaCB0YW5rIHRldGhlcnNcclxuICAgICdNYXRveWEgTml4aWUgU3B1dHRlcic6ICc1OTkzJywgLy8gTml4aWUgc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuTXRHdWxnLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdHdWxnIEltbW9sYXRpb24nOiAnNDFBQScsXHJcbiAgICAnR3VsZyBUYWlsIFNtYXNoJzogJzQxQUInLFxyXG4gICAgJ0d1bGcgSGVhdmVuc2xhc2gnOiAnNDFBOScsXHJcbiAgICAnR3VsZyBUeXBob29uIFdpbmcgMSc6ICczRDAwJyxcclxuICAgICdHdWxnIFR5cGhvb24gV2luZyAyJzogJzNEMDEnLFxyXG4gICAgJ0d1bGcgSHVycmljYW5lIFdpbmcnOiAnM0QwMycsXHJcbiAgICAnR3VsZyBFYXJ0aCBTaGFrZXInOiAnMzdGNScsXHJcbiAgICAnR3VsZyBTYW5jdGlmaWNhdGlvbic6ICc0MUFFJyxcclxuICAgICdHdWxnIEV4ZWdlc2lzJzogJzNEMDcnLFxyXG4gICAgJ0d1bGcgUGVyZmVjdCBDb250cml0aW9uJzogJzNEMEUnLFxyXG4gICAgJ0d1bGcgU2FuY3RpZmllZCBBZXJvJzogJzQxQUQnLFxyXG4gICAgJ0d1bGcgRGl2aW5lIERpbWludWVuZG8gMSc6ICczRDE2JyxcclxuICAgICdHdWxnIERpdmluZSBEaW1pbnVlbmRvIDInOiAnM0QxOCcsXHJcbiAgICAnR3VsZyBEaXZpbmUgRGltaW51ZW5kbyAzJzogJzQ2NjknLFxyXG4gICAgJ0d1bGcgRGl2aW5lIERpbWludWVuZG8gNCc6ICczRDE5JyxcclxuICAgICdHdWxnIERpdmluZSBEaW1pbnVlbmRvIDUnOiAnM0QyMScsXHJcbiAgICAnR3VsZyBDb252aWN0aW9uIE1hcmNhdG8gMSc6ICczRDFBJyxcclxuICAgICdHdWxnIENvbnZpY3Rpb24gTWFyY2F0byAyJzogJzNEMUInLFxyXG4gICAgJ0d1bGcgQ29udmljdGlvbiBNYXJjYXRvIDMnOiAnM0QyMCcsXHJcbiAgICAnR3VsZyBWZW5hIEFtb3Jpcyc6ICczRDI3JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdHdWxnIEx1bWVuIEluZmluaXR1bSc6ICc0MUIyJyxcclxuICAgICdHdWxnIFJpZ2h0IFBhbG0nOiAnMzdGOCcsXHJcbiAgICAnR3VsZyBMZWZ0IFBhbG0nOiAnMzdGQScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IFdoYXQgdG8gZG8gYWJvdXQgS2FobiBSYWkgNUI1MD9cclxuLy8gSXQgc2VlbXMgaW1wb3NzaWJsZSBmb3IgdGhlIG1hcmtlZCBwZXJzb24gdG8gYXZvaWQgZW50aXJlbHkuXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuUGFnbHRoYW4sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1BhZ2x0aGFuIFRlbG92b3VpdnJlIFBsYWd1ZSBTd2lwZSc6ICc2MEZDJywgLy8gZnJvbnRhbCBjb25hbCBjbGVhdmVcclxuICAgICdQYWdsdGhhbiBMZXNzZXIgVGVsb2RyYWdvbiBFbmd1bGZpbmcgRmxhbWVzJzogJzYwRjUnLCAvLyBmcm9udGFsIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1BhZ2x0aGFuIEFtaHVsdWsgTGlnaHRuaW5nIEJvbHQnOiAnNUM0QycsIC8vIGNpcmN1bGFyIGxpZ2h0bmluZyBhb2UgKG9uIHNlbGYgb3IgcG9zdClcclxuICAgICdQYWdsdGhhbiBBbWh1bHVrIEJhbGwgT2YgTGV2aW4gU2hvY2snOiAnNUM1MicsIC8vIHB1bHNpbmcgc21hbGwgY2lyY3VsYXIgYW9lc1xyXG4gICAgJ1BhZ2x0aGFuIEFtaHVsdWsgU3VwZXJjaGFyZ2VkIEJhbGwgT2YgTGV2aW4gU2hvY2snOiAnNUM1MycsIC8vIHB1bHNpbmcgbGFyZ2UgY2lyY3VsYXIgYW9lXHJcbiAgICAnUGFnbHRoYW4gQW1odWx1ayBXaWRlIEJsYXN0ZXInOiAnNjBDNScsIC8vIHJlYXIgY29uYWwgY2xlYXZlXHJcbiAgICAnUGFnbHRoYW4gVGVsb2Jyb2JpbnlhayBGYWxsIE9mIE1hbic6ICc2MTQ4JywgLy8gY2lyY3VsYXIgYW9lXHJcbiAgICAnUGFnbHRoYW4gVGVsb3RlayBSZWFwZXIgTWFnaXRlayBDYW5ub24nOiAnNjEyMScsIC8vIGNpcmN1bGFyIGFvZVxyXG4gICAgJ1BhZ2x0aGFuIFRlbG9kcmFnb24gU2hlZXQgb2YgSWNlJzogJzYwRjgnLCAvLyBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBUZWxvZHJhZ29uIEZyb3N0IEJyZWF0aCc6ICc2MEY3JywgLy8gdmVyeSBsYXJnZSBjb25hbCBjbGVhdmVcclxuICAgICdQYWdsdGhhbiBNYWdpdGVrIENvcmUgU3RhYmxlIENhbm5vbic6ICc1Qzk0JywgLy8gbGFyZ2UgbGluZSBhb2VzXHJcbiAgICAnUGFnbHRoYW4gTWFnaXRlayBDb3JlIDItVG9uemUgTWFnaXRlayBNaXNzaWxlJzogJzVDOTUnLCAvLyBsYXJnZSBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBUZWxvdGVrIFNreSBBcm1vciBBZXRoZXJzaG90JzogJzVDOUMnLCAvLyBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBNYXJrIElJIFRlbG90ZWsgQ29sb3NzdXMgRXhoYXVzdCc6ICc1Qzk5JywgLy8gbGFyZ2UgbGluZSBhb2VcclxuICAgICdQYWdsdGhhbiBNYWdpdGVrIE1pc3NpbGUgRXhwbG9zaXZlIEZvcmNlJzogJzVDOTgnLCAvLyBzbG93IG1vdmluZyBob3Jpem9udGFsIG1pc3NpbGVzXHJcbiAgICAnUGFnbHRoYW4gVGlhbWF0IEZsYW1pc3BoZXJlJzogJzYxMEYnLCAvLyB2ZXJ5IGxvbmcgbGluZSBhb2VcclxuICAgICdQYWdsdGhhbiBBcm1vcmVkIFRlbG9kcmFnb24gVG9ydG9pc2UgU3RvbXAnOiAnNjE0QicsIC8vIGxhcmdlIGNpcmN1bGFyIGFvZSBmcm9tIHR1cnRsZVxyXG4gICAgJ1BhZ2x0aGFuIFRlbG9kcmFnb24gVGh1bmRlcm91cyBCcmVhdGgnOiAnNjE0OScsIC8vIGxhcmdlIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1BhZ2x0aGFuIEx1bmFyIEJhaGFtdXQgTHVuYXIgTmFpbCBVcGJ1cnN0JzogJzYwNUInLCAvLyBzbWFsbCBhb2VzIGJlZm9yZSBCaWcgQnVyc3RcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IEx1bmFyIE5haWwgQmlnIEJ1cnN0JzogJzVCNDgnLCAvLyBsYXJnZSBjaXJjdWxhciBhb2VzIGZyb20gbmFpbHNcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IFBlcmlnZWFuIEJyZWF0aCc6ICc1QjU5JywgLy8gbGFyZ2UgY29uYWwgY2xlYXZlXHJcbiAgICAnUGFnbHRoYW4gTHVuYXIgQmFoYW11dCBNZWdhZmxhcmUnOiAnNUI0RScsIC8vIG1lZ2FmbGFyZSBwZXBwZXJvbmlcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IE1lZ2FmbGFyZSBEaXZlJzogJzVCNTInLCAvLyBtZWdhZmxhcmUgbGluZSBhb2UgYWNyb3NzIHRoZSBhcmVuYVxyXG4gICAgJ1BhZ2x0aGFuIEx1bmFyIEJhaGFtdXQgTHVuYXIgRmxhcmUnOiAnNUI0QScsIC8vIGxhcmdlIHB1cnBsZSBzaHJpbmtpbmcgY2lyY2xlc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUGFnbHRoYW4gTHVuYXIgQmFoYW11dCBNZWdhZmxhcmUnOiAnNUI0RCcsIC8vIG1lZ2FmbGFyZSBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlUWl0YW5hUmF2ZWwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1FpdGFuYSBTdW4gVG9zcyc6ICczQzhBJywgLy8gR3JvdW5kIEFvRSwgYm9zcyBvbmVcclxuICAgICdRaXRhbmEgUm9ua2FuIExpZ2h0IDEnOiAnM0M4QycsIC8vIFN0YXR1ZSBhdHRhY2ssIGJvc3Mgb25lXHJcbiAgICAnUWl0YW5hIExvemF0bFxcJ3MgRnVyeSAxJzogJzNDOEYnLCAvLyBTZW1pY2lyY2xlIGNsZWF2ZSwgYm9zcyBvbmVcclxuICAgICdRaXRhbmEgTG96YXRsXFwncyBGdXJ5IDInOiAnM0M5MCcsIC8vIFNlbWljaXJjbGUgY2xlYXZlLCBib3NzIG9uZVxyXG4gICAgJ1FpdGFuYSBGYWxsaW5nIFJvY2snOiAnM0M5NicsIC8vIFNtYWxsIGdyb3VuZCBBb0UsIGJvc3MgdHdvXHJcbiAgICAnUWl0YW5hIEZhbGxpbmcgQm91bGRlcic6ICczQzk3JywgLy8gTGFyZ2UgZ3JvdW5kIEFvRSwgYm9zcyB0d29cclxuICAgICdRaXRhbmEgVG93ZXJmYWxsJzogJzNDOTgnLCAvLyBQaWxsYXIgY29sbGFwc2UsIGJvc3MgdHdvXHJcbiAgICAnUWl0YW5hIFZpcGVyIFBvaXNvbiAyJzogJzNDOUUnLCAvLyBTdGF0aW9uYXJ5IHBvaXNvbiBwdWRkbGVzLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIENvbmZlc3Npb24gb2YgRmFpdGggMSc6ICczQ0EyJywgLy8gRGFuZ2Vyb3VzIG1pZGRsZSBkdXJpbmcgc3ByZWFkIGNpcmNsZXMsIGJvc3MgdGhyZWVcclxuICAgICdRaXRhbmEgQ29uZmVzc2lvbiBvZiBGYWl0aCAzJzogJzNDQTYnLCAvLyBEYW5nZXJvdXMgc2lkZXMgZHVyaW5nIHN0YWNrIG1hcmtlciwgYm9zcyB0aHJlZVxyXG4gICAgJ1FpdGFuYSBDb25mZXNzaW9uIG9mIEZhaXRoIDQnOiAnM0NBNycsIC8vIERhbmdlcm91cyBzaWRlcyBkdXJpbmcgc3RhY2sgbWFya2VyLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIFJvbmthbiBMaWdodCAyJzogJzNENkQnLCAvLyBTdGF0dWUgYXR0YWNrLCBib3NzIG9uZVxyXG4gICAgJ1FpdGFuYSBXcmF0aCBvZiB0aGUgUm9ua2EnOiAnM0UyQycsIC8vIFN0YXR1ZSBsaW5lIGF0dGFjayBmcm9tIG1pbmktYm9zc2VzIGJlZm9yZSBmaXJzdCBib3NzXHJcbiAgICAnUWl0YW5hIFNpbnNwaXR0ZXInOiAnM0UzNicsIC8vIEdvcmlsbGEgYm91bGRlciB0b3NzIEFvRSBiZWZvcmUgdGhpcmQgYm9zc1xyXG4gICAgJ1FpdGFuYSBIb3VuZCBvdXQgb2YgSGVhdmVuJzogJzQyQjgnLCAvLyBUZXRoZXIgZXh0ZW5zaW9uIGZhaWx1cmUsIGJvc3MgdGhyZWU7IDQyQjcgaXMgY29ycmVjdCBleGVjdXRpb25cclxuICAgICdRaXRhbmEgUm9ua2FuIEFieXNzJzogJzQzRUInLCAvLyBHcm91bmQgQW9FIGZyb20gbWluaS1ib3NzZXMgYmVmb3JlIGZpcnN0IGJvc3NcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1FpdGFuYSBWaXBlciBQb2lzb24gMSc6ICczQzlEJywgLy8gQW9FIGZyb20gdGhlIDAwQUIgcG9pc29uIGhlYWQgbWFya2VyLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIENvbmZlc3Npb24gb2YgRmFpdGggMic6ICczQ0EzJywgLy8gT3ZlcmxhcHBlZCBjaXJjbGVzIGZhaWx1cmUgb24gdGhlIHNwcmVhZCBjaXJjbGVzIHZlcnNpb24gb2YgdGhlIG1lY2hhbmljXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRoZSBHcmFuZCBDb3Ntb3NcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUdyYW5kQ29zbW9zLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdDb3Ntb3MgSXJvbiBKdXN0aWNlJzogJzQ5MUYnLFxyXG4gICAgJ0Nvc21vcyBTbWl0ZSBPZiBSYWdlJzogJzQ5MjEnLFxyXG5cclxuICAgICdDb3Ntb3MgVHJpYnVsYXRpb24nOiAnNDlBNCcsXHJcbiAgICAnQ29zbW9zIERhcmsgU2hvY2snOiAnNDc2RicsXHJcbiAgICAnQ29zbW9zIFN3ZWVwJzogJzQ3NzAnLFxyXG4gICAgJ0Nvc21vcyBEZWVwIENsZWFuJzogJzQ3NzEnLFxyXG5cclxuICAgICdDb3Ntb3MgU2hhZG93IEJ1cnN0JzogJzQ5MjQnLFxyXG4gICAgJ0Nvc21vcyBCbG9vZHkgQ2FyZXNzJzogJzQ5MjcnLFxyXG4gICAgJ0Nvc21vcyBOZXBlbnRoaWMgUGx1bmdlJzogJzQ5MjgnLFxyXG4gICAgJ0Nvc21vcyBCcmV3aW5nIFN0b3JtJzogJzQ5MjknLFxyXG5cclxuICAgICdDb3Ntb3MgT2RlIFRvIEZhbGxlbiBQZXRhbHMnOiAnNDk1MCcsXHJcbiAgICAnQ29zbW9zIEZhciBXaW5kIEdyb3VuZCc6ICc0MjczJyxcclxuXHJcbiAgICAnQ29zbW9zIEZpcmUgQnJlYXRoJzogJzQ5MkInLFxyXG4gICAgJ0Nvc21vcyBSb25rYW4gRnJlZXplJzogJzQ5MkUnLFxyXG4gICAgJ0Nvc21vcyBPdmVycG93ZXInOiAnNDkyRCcsXHJcblxyXG4gICAgJ0Nvc21vcyBTY29yY2hpbmcgTGVmdCc6ICc0NzYzJyxcclxuICAgICdDb3Ntb3MgU2NvcmNoaW5nIFJpZ2h0JzogJzQ3NjInLFxyXG4gICAgJ0Nvc21vcyBPdGhlcndvcmRseSBIZWF0JzogJzQ3NUMnLFxyXG4gICAgJ0Nvc21vcyBGaXJlXFwncyBJcmUnOiAnNDc2MScsXHJcbiAgICAnQ29zbW9zIFBsdW1tZXQnOiAnNDc2NycsXHJcblxyXG4gICAgJ0Nvc21vcyBGaXJlXFwncyBEb21haW4gVGV0aGVyJzogJzQ3NUYnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQ29zbW9zIERhcmsgV2VsbCc6ICc0NzZEJyxcclxuICAgICdDb3Ntb3MgRmFyIFdpbmQgU3ByZWFkJzogJzQ3MjQnLFxyXG4gICAgJ0Nvc21vcyBCbGFjayBGbGFtZSc6ICc0NzVEJyxcclxuICAgICdDb3Ntb3MgRmlyZVxcJ3MgRG9tYWluJzogJzQ3NjAnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlVHdpbm5pbmcsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1R3aW5uaW5nIEF1dG8gQ2Fubm9ucyc6ICc0M0E5JyxcclxuICAgICdUd2lubmluZyBIZWF2ZSc6ICczREI5JyxcclxuICAgICdUd2lubmluZyAzMiBUb256ZSBTd2lwZSc6ICczREJCJyxcclxuICAgICdUd2lubmluZyBTaWRlc3dpcGUnOiAnM0RCRicsXHJcbiAgICAnVHdpbm5pbmcgV2luZCBTcG91dCc6ICczREJFJyxcclxuICAgICdUd2lubmluZyBTaG9jayc6ICczREYxJyxcclxuICAgICdUd2lubmluZyBMYXNlcmJsYWRlJzogJzNERUMnLFxyXG4gICAgJ1R3aW5uaW5nIFZvcnBhbCBCbGFkZSc6ICczREMyJyxcclxuICAgICdUd2lubmluZyBUaHJvd24gRmxhbWVzJzogJzNEQzMnLFxyXG4gICAgJ1R3aW5uaW5nIE1hZ2l0ZWsgUmF5JzogJzNERjMnLFxyXG4gICAgJ1R3aW5uaW5nIEhpZ2ggR3Jhdml0eSc6ICczREZBJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUd2lubmluZyAxMjggVG9uemUgU3dpcGUnOiAnM0RCQScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogRGVhZCBJcm9uIDVBQjAgKGVhcnRoc2hha2VycywgYnV0IG9ubHkgaWYgeW91IHRha2UgdHdvPylcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EZWx1YnJ1bVJlZ2luYWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjeSBGb3VyZm9sZCc6ICc1QjM0JywgLy8gRm91ciBnbG93aW5nIHN3b3JkIGhhbGYgcm9vbSBjbGVhdmVzXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIEJhbGVmdWwgU3dhdGhlJzogJzVBQjQnLCAvLyBHcm91bmQgYW9lIHRvIGVpdGhlciBzaWRlIG9mIGJvc3NcclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgQmFsZWZ1bCBCbGFkZSc6ICc1QjI4JywgLy8gSGlkZSBiZWhpbmQgcGlsbGFycyBhdHRhY2tcclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDEnOiAnNUFBNCcsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDInOiAnNUFBNScsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDMnOiAnNUFBNicsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBXaGl0ZSAxJzogJzVBQTcnLCAvLyBXaGl0ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBJcm9uIFNwbGl0dGVyIFdoaXRlIDInOiAnNUFBOCcsIC8vIFdoaXRlIHJpbmcgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIElyb24gU3BsaXR0ZXIgV2hpdGUgMyc6ICc1QUE5JywgLy8gV2hpdGUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgU2NvcmNoaW5nIFNoYWNrbGUnOiAnNUFBRScsIC8vIENoYWluIGRhbWFnZVxyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjaWZ1bCBCcmVlemUnOiAnNUFBQicsIC8vIFdhZmZsZSBjcmlzcy1jcm9zcyBmbG9vciBtYXJrZXJzXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIE1lcmNpZnVsIEJsb29tcyc6ICc1QUFEJywgLy8gUHVycGxlIGdyb3dpbmcgY2lyY2xlXHJcbiAgICAnRGVsdWJydW0gRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUnOiAnNTc2MScsIC8vIFJpZ2h0IGNpcmN1bGFyIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIERhaHUgTGVmdC1TaWRlZCBTaG9ja3dhdmUnOiAnNTc2MicsIC8vIExlZnQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW0gRGFodSBGaXJlYnJlYXRoZSc6ICc1NzY1JywgLy8gQ29uYWwgYnJlYXRoXHJcbiAgICAnRGVsdWJydW0gRGFodSBGaXJlYnJlYXRoZSBSb3RhdGluZyc6ICc1NzVBJywgLy8gQ29uYWwgYnJlYXRoLCByb3RhdGluZ1xyXG4gICAgJ0RlbHVicnVtIERhaHUgSGVhZCBEb3duJzogJzU3NTYnLCAvLyBsaW5lIGFvZSBjaGFyZ2UgZnJvbSBNYXJjaG9zaWFzIGFkZFxyXG4gICAgJ0RlbHVicnVtIERhaHUgSHVudGVyXFwncyBDbGF3JzogJzU3NTcnLCAvLyBjaXJjdWxhciBncm91bmQgYW9lIGNlbnRlcmVkIG9uIE1hcmNob3NpYXMgYWRkXHJcbiAgICAnRGVsdWJydW0gRGFodSBGYWxsaW5nIFJvY2snOiAnNTc1QycsIC8vIGdyb3VuZCBhb2UgZnJvbSBSZXZlcmJlcmF0aW5nIFJvYXJcclxuICAgICdEZWx1YnJ1bSBEYWh1IEhvdCBDaGFyZ2UnOiAnNTc2NCcsIC8vIGRvdWJsZSBjaGFyZ2VcclxuICAgICdEZWx1YnJ1bSBEYWh1IFJpcHBlciBDbGF3JzogJzU3NUQnLCAvLyBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIERhaHUgVGFpbCBTd2luZyc6ICc1NzVGJywgLy8gdGFpbCBzd2luZyA7KVxyXG4gICAgJ0RlbHVicnVtIEd1YXJkIFBhd24gT2ZmJzogJzU4MDYnLCAvLyBRdWVlbidzIFNvbGRpZXIgU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2VcclxuICAgICdEZWx1YnJ1bSBHdWFyZCBUdXJyZXRcXCdzIFRvdXIgMSc6ICc1ODBEJywgLy8gUXVlZW4ncyBHdW5uZXIgcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdFxyXG4gICAgJ0RlbHVicnVtIEd1YXJkIFR1cnJldFxcJ3MgVG91ciAyJzogJzU4MEUnLCAvLyBRdWVlbidzIEd1bm5lciByZWZsZWN0aXZlIHR1cnJldCBzaG90XHJcbiAgICAnRGVsdWJydW0gR3VhcmQgVHVycmV0XFwncyBUb3VyIDMnOiAnNTgwRicsIC8vIFF1ZWVuJ3MgR3VubmVyIHJlZmxlY3RpdmUgdHVycmV0IHNob3RcclxuICAgICdEZWx1YnJ1bSBHdWFyZCBPcHRpbWFsIFBsYXkgU2hpZWxkJzogJzU3RjMnLCAvLyBRdWVlbidzIEtuaWdodCBzaGllbGQgZ2V0IHVuZGVyXHJcbiAgICAnRGVsdWJydW0gR3VhcmQgT3B0aW1hbCBQbGF5IFN3b3JkJzogJzU3RjInLCAvLyBRdWVlbidzIEtuaWdodCBzd29yZCBnZXQgb3V0XHJcbiAgICAnRGVsdWJydW0gR3VhcmQgQ291bnRlcnBsYXknOiAnNTdGNicsIC8vIEhpdHRpbmcgYWV0aGVyaWFsIHdhcmQgZGlyZWN0aW9uYWwgYmFycmllclxyXG4gICAgJ0RlbHVicnVtIFBoYW50b20gU3dpcmxpbmcgTWlhc21hIDEnOiAnNTdBOScsIC8vIEluaXRpYWwgcGhhbnRvbSBkb251dCBhb2UgZnJvbSBjaXJjbGVcclxuICAgICdEZWx1YnJ1bSBQaGFudG9tIFN3aXJsaW5nIE1pYXNtYSAyJzogJzU3QUEnLCAvLyBNb3ZpbmcgcGhhbnRvbSBkb251dCBhb2VzIGZyb20gY2lyY2xlXHJcbiAgICAnRGVsdWJydW0gUGhhbnRvbSBDcmVlcGluZyBNaWFzbWEnOiAnNTdBNScsIC8vIHBoYW50b20gbGluZSBhb2UgZnJvbSBzcXVhcmVcclxuICAgICdEZWx1YnJ1bSBQaGFudG9tIFZpbGUgV2F2ZSc6ICc1N0IxJywgLy8gcGhhbnRvbSBjb25hbCBhb2VcclxuICAgICdEZWx1YnJ1bSBBdm93ZWQgRnVyeSBPZiBCb3pqYSc6ICc1OTczJywgLy8gVHJpbml0eSBBdm93ZWQgQWxsZWdpYW50IEFyc2VuYWwgXCJvdXRcIlxyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBGbGFzaHZhbmUnOiAnNTk3MicsIC8vIFRyaW5pdHkgQXZvd2VkIEFsbGVnaWFudCBBcnNlbmFsIFwiZ2V0IGJlaGluZFwiXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEluZmVybmFsIFNsYXNoJzogJzU5NzEnLCAvLyBUcmluaXR5IEF2b3dlZCBBbGxlZ2lhbnQgQXJzZW5hbCBcImdldCBmcm9udFwiXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEZsYW1lcyBPZiBCb3pqYSc6ICc1OTY4JywgLy8gODAlIGZsb29yIGFvZSBiZWZvcmUgc2hpbW1lcmluZyBzaG90IHN3b3Jkc1xyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBHbGVhbWluZyBBcnJvdyc6ICc1OTc0JywgLy8gVHJpbml0eSBBdmF0YXIgbGluZSBhb2VzIGZyb20gb3V0c2lkZVxyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIFRoZSBNZWFucyAxJzogJzU5QkInLCAvLyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUaGUgTWVhbnMgMic6ICc1OUJEJywgLy8gVGhlIFF1ZWVuJ3MgQmVjayBhbmQgQ2FsbCBjcm9zcyBhb2UgZnJvbSBhZGRzXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gVGhlIEVuZCAxJzogJzU5QkEnLCAvLyBBbHNvIFRoZSBRdWVlbidzIEJlY2sgYW5kIENhbGwgY3Jvc3MgYW9lIGZyb20gYWRkc1xyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIFRoZSBFbmQgMic6ICc1OUJDJywgLy8gQWxzbyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBOb3J0aHN3YWluXFwncyBHbG93JzogJzU5QzQnLCAvLyBleHBhbmRpbmcgbGluZXMgd2l0aCBleHBsb3Npb24gaW50ZXJzZWN0aW9uc1xyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIEp1ZGdtZW50IEJsYWRlIExlZnQnOiAnNUI4MycsIC8vIGRhc2ggYWNyb3NzIHJvb20gd2l0aCBsZWZ0IGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIEp1ZGdtZW50IEJsYWRlIFJpZ2h0JzogJzVCODMnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggcmlnaHQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gUXVlZW5cXCdzIEp1c3RpY2UnOiAnNTlCRicsIC8vIGZhaWxpbmcgdG8gd2FsayB0aGUgcmlnaHQgbnVtYmVyIG9mIHNxdWFyZXNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMSc6ICc1OUUwJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMic6ICc1OUUxJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMyc6ICc1OUUyJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBQYXduIE9mZic6ICc1OURBJywgLy8gU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2UgZHVyaW5nIFF1ZWVuXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gT3B0aW1hbCBQbGF5IFNoaWVsZCc6ICc1OUNFJywgLy8gUXVlZW4ncyBLbmlnaHQgc2hpZWxkIGdldCB1bmRlciBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBPcHRpbWFsIFBsYXkgU3dvcmQnOiAnNTlDQycsIC8vIFF1ZWVuJ3MgS25pZ2h0IHN3b3JkIGdldCBvdXQgZHVyaW5nIFF1ZWVuXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRGVsdWJydW0gSGlkZGVuIFRyYXAgTWFzc2l2ZSBFeHBsb3Npb24nOiAnNUE2RScsIC8vIGV4cGxvc2lvbiB0cmFwXHJcbiAgICAnRGVsdWJydW0gSGlkZGVuIFRyYXAgUG9pc29uIFRyYXAnOiAnNUE2RicsIC8vIHBvaXNvbiB0cmFwXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEhlYXQgU2hvY2snOiAnNTk1RScsIC8vIHRvbyBtdWNoIGhlYXQgb3IgZmFpbGluZyB0byByZWd1bGF0ZSB0ZW1wZXJhdHVyZVxyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBDb2xkIFNob2NrJzogJzU5NUYnLCAvLyB0b28gbXVjaCBjb2xkIG9yIGZhaWxpbmcgdG8gcmVndWxhdGUgdGVtcGVyYXR1cmVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjaWZ1bCBNb29uJzogJzI2MicsIC8vIFwiUGV0cmlmaWNhdGlvblwiIGZyb20gQWV0aGVyaWFsIE9yYiBsb29rYXdheVxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRGVsdWJydW0gRGFodSBIZWF0IEJyZWF0aCc6ICc1NzY2JywgLy8gdGFuayBjbGVhdmVcclxuICAgICdEZWx1YnJ1bSBBdm93ZWQgV3JhdGggT2YgQm96amEnOiAnNTk3NScsIC8vIHRhbmsgY2xlYXZlXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBBdCBsZWFzdCBkdXJpbmcgVGhlIFF1ZWVuLCB0aGVzZSBhYmlsaXR5IGlkcyBjYW4gYmUgb3JkZXJlZCBkaWZmZXJlbnRseSxcclxuICAgICAgLy8gYW5kIHRoZSBmaXJzdCBleHBsb3Npb24gXCJoaXRzXCIgZXZlcnlvbmUsIGFsdGhvdWdoIHdpdGggXCIxQlwiIGZsYWdzLlxyXG4gICAgICBpZDogJ0RlbHVicnVtIExvdHMgQ2FzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc1NjVBJywgJzU2NUInLCAnNTdGRCcsICc1N0ZFJywgJzVCODYnLCAnNUI4NycsICc1OUQyJywgJzVEOTMnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChfZGF0YSwgbWF0Y2hlcykgPT4gbWF0Y2hlcy5mbGFncy5zbGljZSgtMikgPT09ICcwMycsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IERhaHUgNTc3NiBTcGl0IEZsYW1lIHNob3VsZCBhbHdheXMgaGl0IGEgTWFyY2hvc2lhc1xyXG4vLyBUT0RPOiBoaXR0aW5nIHBoYW50b20gd2l0aCBpY2Ugc3Bpa2VzIHdpdGggYW55dGhpbmcgYnV0IGRpc3BlbD9cclxuLy8gVE9ETzogZmFpbGluZyBpY3kvZmllcnkgcG9ydGVudCAoZ3VhcmQgYW5kIHF1ZWVuKVxyXG4vLyAgICAgICBgMTg6UHlyZXRpYyBEb1QgVGljayBvbiAke25hbWV9IGZvciAke2RhbWFnZX0gZGFtYWdlLmBcclxuLy8gVE9ETzogV2luZHMgT2YgRmF0ZSAvIFdlaWdodCBPZiBGb3J0dW5lP1xyXG4vLyBUT0RPOiBUdXJyZXQncyBUb3VyP1xyXG4vLyBnZW5lcmFsIHRyYXBzOiBleHBsb3Npb246IDVBNzEsIHBvaXNvbiB0cmFwOiA1QTcyLCBtaW5pOiA1QTczXHJcbi8vIGR1ZWwgdHJhcHM6IG1pbmk6IDU3QTEsIGljZTogNTc5RiwgdG9hZDogNTdBMFxyXG4vLyBUT0RPOiB0YWtpbmcgbWFuYSBmbGFtZSB3aXRob3V0IHJlZmxlY3RcclxuLy8gVE9ETzogdGFraW5nIE1hZWxzdHJvbSdzIEJvbHQgd2l0aG91dCBsaWdodG5pbmcgYnVmZlxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHVicnVtUmVnaW5hZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIFNsaW1lcyBIZWxsaXNoIFNsYXNoJzogJzU3RUEnLCAvLyBCb3pqYW4gU29sZGllciBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgU2xpbWVzIFZpc2NvdXMgUnVwdHVyZSc6ICc1MDE2JywgLy8gRnVsbHkgbWVyZ2VkIHZpc2NvdXMgc2xpbWUgYW9lXHJcblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBHb2xlbXMgRGVtb2xpc2gnOiAnNTg4MCcsIC8vIGludGVycnVwdGlibGUgUnVpbnMgR29sZW0gY2FzdFxyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgQmFsZWZ1bCBTd2F0aGUnOiAnNUFEMScsIC8vIEdyb3VuZCBhb2UgdG8gZWl0aGVyIHNpZGUgb2YgYm9zc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBCYWxlZnVsIEJsYWRlJzogJzVCMkEnLCAvLyBIaWRlIGJlaGluZCBwaWxsYXJzIGF0dGFja1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBTY29yY2hpbmcgU2hhY2tsZSc6ICc1QUNCJywgLy8gQ2hhaW5zXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmN5IEZvdXJmb2xkIDEnOiAnNUI5NCcsIC8vIEZvdXIgZ2xvd2luZyBzd29yZCBoYWxmIHJvb20gY2xlYXZlc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBNZXJjeSBGb3VyZm9sZCAyJzogJzVBQjknLCAvLyBGb3VyIGdsb3dpbmcgc3dvcmQgaGFsZiByb29tIGNsZWF2ZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgTWVyY3kgRm91cmZvbGQgMyc6ICc1QUJBJywgLy8gRm91ciBnbG93aW5nIHN3b3JkIGhhbGYgcm9vbSBjbGVhdmVzXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmN5IEZvdXJmb2xkIDQnOiAnNUFCQicsIC8vIEZvdXIgZ2xvd2luZyBzd29yZCBoYWxmIHJvb20gY2xlYXZlc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBNZXJjeSBGb3VyZm9sZCA1JzogJzVBQkMnLCAvLyBGb3VyIGdsb3dpbmcgc3dvcmQgaGFsZiByb29tIGNsZWF2ZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgTWVyY2lmdWwgQnJlZXplJzogJzVBQzgnLCAvLyBXYWZmbGUgY3Jpc3MtY3Jvc3MgZmxvb3IgbWFya2Vyc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBCYWxlZnVsIENvbWV0JzogJzVBRDcnLCAvLyBDbG9uZSBtZXRlb3IgZHJvcHBpbmcgYmVmb3JlIGNoYXJnZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgQmFsZWZ1bCBGaXJlc3Rvcm0nOiAnNUFEOCcsIC8vIENsb25lIGNoYXJnZSBhZnRlciBCYWxlZnVsIENvbWV0XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gUm9zZSc6ICc1QUQ5JywgLy8gQ2xvbmUgbGluZSBhb2VzXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gU3BsaXR0ZXIgQmx1ZSAxJzogJzVBQzEnLCAvLyBCbHVlIHJpbiBnIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIEJsdWUgMic6ICc1QUMyJywgLy8gQmx1ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIEJsdWUgMyc6ICc1QUMzJywgLy8gQmx1ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIFdoaXRlIDEnOiAnNUFDNCcsIC8vIFdoaXRlIHJpbmcgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gU3BsaXR0ZXIgV2hpdGUgMic6ICc1QUM1JywgLy8gV2hpdGUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgSXJvbiBTcGxpdHRlciBXaGl0ZSAzJzogJzVBQzYnLCAvLyBXaGl0ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBBY3QgT2YgTWVyY3knOiAnNUFDRicsIC8vIGNyb3NzLXNoYXBlZCBsaW5lIGFvZXNcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUgMSc6ICc1NzcwJywgLy8gUmlnaHQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUgMic6ICc1NzcyJywgLy8gUmlnaHQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBMZWZ0LVNpZGVkIFNob2Nrd2F2ZSAxJzogJzU3NkYnLCAvLyBMZWZ0IGNpcmN1bGFyIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IERhaHUgTGVmdC1TaWRlZCBTaG9ja3dhdmUgMic6ICc1NzcxJywgLy8gTGVmdCBjaXJjdWxhciBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZpcmVicmVhdGhlJzogJzU3NzQnLCAvLyBDb25hbCBicmVhdGhcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZpcmVicmVhdGhlIFJvdGF0aW5nJzogJzU3NkMnLCAvLyBDb25hbCBicmVhdGgsIHJvdGF0aW5nXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBIZWFkIERvd24nOiAnNTc2OCcsIC8vIGxpbmUgYW9lIGNoYXJnZSBmcm9tIE1hcmNob3NpYXMgYWRkXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBIdW50ZXJcXCdzIENsYXcnOiAnNTc2OScsIC8vIGNpcmN1bGFyIGdyb3VuZCBhb2UgY2VudGVyZWQgb24gTWFyY2hvc2lhcyBhZGRcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZhbGxpbmcgUm9jayc6ICc1NzZFJywgLy8gZ3JvdW5kIGFvZSBmcm9tIFJldmVyYmVyYXRpbmcgUm9hclxyXG4gICAgJ0RlbHVicnVtU2F2IERhaHUgSG90IENoYXJnZSc6ICc1NzczJywgLy8gZG91YmxlIGNoYXJnZVxyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIE1hc3NpdmUgRXhwbG9zaW9uJzogJzU3OUUnLCAvLyBib21icyBiZWluZyBjbGVhcmVkXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBWaWNpb3VzIFN3aXBlJzogJzU3OTcnLCAvLyBjaXJjdWxhciBhb2UgYXJvdW5kIGJvc3NcclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIEZvY3VzZWQgVHJlbW9yIDEnOiAnNTc4RicsIC8vIHNxdWFyZSBmbG9vciBhb2VzXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBGb2N1c2VkIFRyZW1vciAyJzogJzU3OTEnLCAvLyBzcXVhcmUgZmxvb3IgYW9lc1xyXG4gICAgJ0RlbHVicnVtU2F2IER1ZWwgRGV2b3VyJzogJzU3ODknLCAvLyBjb25hbCBhb2UgYWZ0ZXIgd2l0aGVyaW5nIGN1cnNlXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBGbGFpbGluZyBTdHJpa2UgMSc6ICc1NzhDJywgLy8gaW5pdGlhbCByb3RhdGluZyBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIEZsYWlsaW5nIFN0cmlrZSAyJzogJzU3OEQnLCAvLyByb3RhdGluZyBjbGVhdmVzXHJcblxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIE9wdGltYWwgT2ZmZW5zaXZlIFN3b3JkJzogJzU4MTknLCAvLyBtaWRkbGUgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgT3B0aW1hbCBPZmZlbnNpdmUgU2hpZWxkJzogJzU4MUEnLCAvLyBtaWRkbGUgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgT3B0aW1hbCBQbGF5IFN3b3JkJzogJzU4MTYnLCAvLyBPcHRpbWFsIFBsYXkgU3dvcmQgXCJnZXQgb3V0XCJcclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBPcHRpbWFsIFBsYXkgU2hpZWxkJzogJzU4MTcnLCAvLyBPcHRpbWFsIHBsYXkgc2hpZWxkIFwiZ2V0IGluXCJcclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBPcHRpbWFsIFBsYXkgQ2xlYXZlJzogJzU4MTgnLCAvLyBPcHRpbWFsIFBsYXkgY2xlYXZlcyBmb3Igc3dvcmQvc2hpZWxkXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgVW5sdWNreSBMb3QnOiAnNTgxRCcsIC8vIFF1ZWVuJ3MgS25pZ2h0IG9yYiBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBCdXJuIDEnOiAnNTgzRCcsIC8vIHNtYWxsIGZpcmUgYWRkc1xyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIEJ1cm4gMic6ICc1ODNFJywgLy8gbGFyZ2UgZmlyZSBhZGRzXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgUGF3biBPZmYnOiAnNTgzQScsIC8vIFF1ZWVuJ3MgU29sZGllciBTZWNyZXRzIFJldmVhbGVkIHRldGhlcmVkIGNsb25lIGFvZVxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMSc6ICc1ODQ3JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIGluaXRpYWwgbGluZXMgMVxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMic6ICc1ODQ4JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIGluaXRpYWwgbGluZXMgMlxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMyc6ICc1ODQ5JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIHNlY29uZCBsaW5lc1xyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIENvdW50ZXJwbGF5JzogJzU4RjUnLCAvLyBIaXR0aW5nIGFldGhlcmlhbCB3YXJkIGRpcmVjdGlvbmFsIGJhcnJpZXJcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBTd2lybGluZyBNaWFzbWEgMSc6ICc1N0I4JywgLy8gSW5pdGlhbCBwaGFudG9tIGRvbnV0IGFvZVxyXG4gICAgJ0RlbHVicnVtU2F2IFBoYW50b20gU3dpcmxpbmcgTWlhc21hIDInOiAnNTdCOScsIC8vIE1vdmluZyBwaGFudG9tIGRvbnV0IGFvZXNcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIENyZWVwaW5nIE1pYXNtYSAxJzogJzU3QjQnLCAvLyBJbml0aWFsIHBoYW50b20gbGluZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIENyZWVwaW5nIE1pYXNtYSAyJzogJzU3QjUnLCAvLyBMYXRlciBwaGFudG9tIGxpbmUgYW9lXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBMaW5nZXJpbmcgTWlhc21hIDEnOiAnNTdCNicsIC8vIEluaXRpYWwgcGhhbnRvbSBjaXJjbGUgYW9lXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBMaW5nZXJpbmcgTWlhc21hIDInOiAnNTdCNycsIC8vIE1vdmluZyBwaGFudG9tIGNpcmNsZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIFZpbGUgV2F2ZSc6ICc1N0JGJywgLy8gcGhhbnRvbSBjb25hbCBhb2VcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgQXZvd2VkIEZ1cnkgT2YgQm96amEnOiAnNTk0QycsIC8vIFRyaW5pdHkgQXZvd2VkIEFsbGVnaWFudCBBcnNlbmFsIFwib3V0XCJcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgRmxhc2h2YW5lJzogJzU5NEInLCAvLyBUcmluaXR5IEF2b3dlZCBBbGxlZ2lhbnQgQXJzZW5hbCBcImdldCBiZWhpbmRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IEF2b3dlZCBJbmZlcm5hbCBTbGFzaCc6ICc1OTRBJywgLy8gVHJpbml0eSBBdm93ZWQgQWxsZWdpYW50IEFyc2VuYWwgXCJnZXQgZnJvbnRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IEF2b3dlZCBGbGFtZXMgT2YgQm96amEnOiAnNTkzOScsIC8vIDgwJSBmbG9vciBhb2UgYmVmb3JlIHNoaW1tZXJpbmcgc2hvdCBzd29yZHNcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgR2xlYW1pbmcgQXJyb3cnOiAnNTk0RCcsIC8vIFRyaW5pdHkgQXZhdGFyIGxpbmUgYW9lcyBmcm9tIG91dHNpZGVcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgTG9yZCBXaGFjayc6ICc1N0QwJywgLy8gY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgTG9yZCBEZXZhc3RhdGluZyBCb2x0IDEnOiAnNTdDNScsIC8vIGxpZ2h0bmluZyByaW5nc1xyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgRGV2YXN0YXRpbmcgQm9sdCAyJzogJzU3QzYnLCAvLyBsaWdodG5pbmcgcmluZ3NcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIEVsZWN0cm9jdXRpb24nOiAnNTdDQycsIC8vIHJhbmRvbSBjaXJjbGUgYW9lc1xyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgUmFwaWQgQm9sdHMnOiAnNTdDMycsIC8vIGRyb3BwZWQgbGlnaHRuaW5nIGFvZXNcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIDExMTEtVG9uemUgU3dpbmcnOiAnNTdEOCcsIC8vIHZlcnkgbGFyZ2UgXCJnZXQgb3V0XCIgc3dpbmdcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIE1vbmsgQXR0YWNrJzogJzU1QTYnLCAvLyBNb25rIGFkZCBhdXRvLWF0dGFja1xyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBOb3J0aHN3YWluXFwncyBHbG93JzogJzU5RjQnLCAvLyBleHBhbmRpbmcgbGluZXMgd2l0aCBleHBsb3Npb24gaW50ZXJzZWN0aW9uc1xyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFRoZSBNZWFucyAxJzogJzU5RTcnLCAvLyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUaGUgTWVhbnMgMic6ICc1OUVBJywgLy8gVGhlIFF1ZWVuJ3MgQmVjayBhbmQgQ2FsbCBjcm9zcyBhb2UgZnJvbSBhZGRzXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gVGhlIEVuZCAxJzogJzU5RTgnLCAvLyBBbHNvIFRoZSBRdWVlbidzIEJlY2sgYW5kIENhbGwgY3Jvc3MgYW9lIGZyb20gYWRkc1xyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFRoZSBFbmQgMic6ICc1OUU5JywgLy8gQWxzbyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBPcHRpbWFsIE9mZmVuc2l2ZSBTd29yZCc6ICc1QTAyJywgLy8gbWlkZGxlIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgT2ZmZW5zaXZlIFNoaWVsZCc6ICc1QTAzJywgLy8gbWlkZGxlIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIEp1ZGdtZW50IEJsYWRlIExlZnQgMSc6ICc1OUYyJywgLy8gZGFzaCBhY3Jvc3Mgcm9vbSB3aXRoIGxlZnQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gSnVkZ21lbnQgQmxhZGUgTGVmdCAyJzogJzVCODUnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggbGVmdCBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBKdWRnbWVudCBCbGFkZSBSaWdodCAxJzogJzU5RjEnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggcmlnaHQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gSnVkZ21lbnQgQmxhZGUgUmlnaHQgMic6ICc1Qjg0JywgLy8gZGFzaCBhY3Jvc3Mgcm9vbSB3aXRoIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFBhd24gT2ZmJzogJzVBMUQnLCAvLyBRdWVlbidzIFNvbGRpZXIgU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBPcHRpbWFsIFBsYXkgU3dvcmQnOiAnNTlGRicsIC8vIE9wdGltYWwgUGxheSBTd29yZCBcImdldCBvdXRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgUGxheSBTaGllbGQnOiAnNUEwMCcsIC8vIE9wdGltYWwgcGxheSBzaGllbGQgXCJnZXQgaW5cIlxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgUGxheSBDbGVhdmUnOiAnNUEwMScsIC8vIE9wdGltYWwgUGxheSBjbGVhdmVzIGZvciBzd29yZC9zaGllbGRcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDEnOiAnNUEyOCcsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBpbml0aWFsIGxpbmVzIDFcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDInOiAnNUEyQScsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBpbml0aWFsIGxpbmVzIDJcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDMnOiAnNUEyOScsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBzZWNvbmQgbGluZXNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgSGVhdCBTaG9jayc6ICc1OTI3JywgLy8gdG9vIG11Y2ggaGVhdCBvciBmYWlsaW5nIHRvIHJlZ3VsYXRlIHRlbXBlcmF0dXJlXHJcbiAgICAnRGVsdWJydW1TYXYgQXZvd2VkIENvbGQgU2hvY2snOiAnNTkyOCcsIC8vIHRvbyBtdWNoIGNvbGQgb3IgZmFpbGluZyB0byByZWd1bGF0ZSB0ZW1wZXJhdHVyZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFF1ZWVuXFwncyBKdXN0aWNlJzogJzU5RUInLCAvLyBmYWlsaW5nIHRvIHdhbGsgdGhlIHJpZ2h0IG51bWJlciBvZiBzcXVhcmVzXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gR3VubmhpbGRyXFwncyBCbGFkZXMnOiAnNUIyMicsIC8vIG5vdCBiZWluZyBpbiB0aGUgY2hlc3MgYmx1ZSBzYWZlIHNxdWFyZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFVubHVja3kgTG90JzogJzU1QjYnLCAvLyBsaWdodG5pbmcgb3JiIGF0dGFja1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmNpZnVsIE1vb24nOiAnMjYyJywgLy8gXCJQZXRyaWZpY2F0aW9uXCIgZnJvbSBBZXRoZXJpYWwgT3JiIGxvb2thd2F5XHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgUGhhbnRvbSBCYWxlZnVsIE9uc2xhdWdodCc6ICc1QUQ2JywgLy8gc29sbyB0YW5rIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgRm9lIFNwbGl0dGVyJzogJzU3RDcnLCAvLyB0YW5rIGNsZWF2ZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gVGhlc2UgYWJpbGl0eSBpZHMgY2FuIGJlIG9yZGVyZWQgZGlmZmVyZW50bHkgYW5kIFwiaGl0XCIgcGVvcGxlIHdoZW4gbGV2aXRhdGluZy5cclxuICAgICAgaWQ6ICdEZWx1YnJ1bVNhdiBHdWFyZCBMb3RzIENhc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6IFsnNTgyNycsICc1ODI4JywgJzVCNkMnLCAnNUI2RCcsICc1QkI2JywgJzVCQjcnLCAnNUI4OCcsICc1Qjg5J10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoX2RhdGEsIG1hdGNoZXMpID0+IG1hdGNoZXMuZmxhZ3Muc2xpY2UoLTIpID09PSAnMDMnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RlbHVicnVtU2F2IEdvbGVtIENvbXBhY3Rpb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU3NDYnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIHRleHQ6IGAke21hdGNoZXMuc291cmNlfTogJHttYXRjaGVzLmFiaWxpdHl9YCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEZWx1YnJ1bVNhdiBTbGltZSBTYW5ndWluZSBGdXNpb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU1NEQnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIHRleHQ6IGAke21hdGNoZXMuc291cmNlfTogJHttYXRjaGVzLmFiaWxpdHl9YCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZUxpdGFueSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTEwTiBGb3J3YXJkIEltcGxvc2lvbic6ICc1NkI0JywgLy8gaG93bCBib3NzIGltcGxvc2lvblxyXG4gICAgJ0UxME4gRm9yd2FyZCBTaGFkb3cgSW1wbG9zaW9uJzogJzU2QjUnLCAvLyBob3dsIHNoYWRvdyBpbXBsb3Npb25cclxuICAgICdFMTBOIEJhY2t3YXJkIEltcGxvc2lvbic6ICc1NkI3JywgLy8gdGFpbCBib3NzIGltcGxvc2lvblxyXG4gICAgJ0UxME4gQmFja3dhcmQgU2hhZG93IEltcGxvc2lvbic6ICc1NkI4JywgLy8gdGFpbCBzaGFkb3cgaW1wbG9zaW9uXHJcbiAgICAnRTEwTiBCYXJicyBPZiBBZ29ueSAxJzogJzU2RDknLCAvLyBTaGFkb3cgV2FycmlvciAzIGRvZyByb29tIGNsZWF2ZVxyXG4gICAgJ0UxME4gQmFyYnMgT2YgQWdvbnkgMic6ICc1QjI2JywgLy8gU2hhZG93IFdhcnJpb3IgMyBkb2cgcm9vbSBjbGVhdmVcclxuICAgICdFMTBOIENsb2FrIE9mIFNoYWRvd3MnOiAnNUIxMScsIC8vIG5vbi1zcXVpZ2dseSBsaW5lIGV4cGxvc2lvbnNcclxuICAgICdFMTBOIFRocm9uZSBPZiBTaGFkb3cnOiAnNTZDNycsIC8vIHN0YW5kaW5nIHVwIGdldCBvdXRcclxuICAgICdFMTBOIFJpZ2h0IEdpZ2EgU2xhc2gnOiAnNTZBRScsIC8vIGJvc3MgcmlnaHQgZ2lnYSBzbGFzaFxyXG4gICAgJ0UxME4gUmlnaHQgU2hhZG93IFNsYXNoJzogJzU2QUYnLCAvLyBnaWdhIHNsYXNoIGZyb20gc2hhZG93XHJcbiAgICAnRTEwTiBMZWZ0IEdpZ2EgU2xhc2gnOiAnNTZCMScsIC8vIGJvc3MgbGVmdCBnaWdhIHNsYXNoXHJcbiAgICAnRTEwTiBMZWZ0IFNoYWRvdyBTbGFzaCc6ICc1NkJEJywgLy8gZ2lnYSBzbGFzaCBmcm9tIHNoYWRvd1xyXG4gICAgJ0UxME4gU2hhZG93eSBFcnVwdGlvbic6ICc1NkUxJywgLy8gYmFpdGVkIGdyb3VuZCBhb2UgbWFya2VycyBwYWlyZWQgd2l0aCBiYXJic1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTEwTiBTaGFkb3dcXCdzIEVkZ2UnOiAnNTZEQicsIC8vIFRhbmtidXN0ZXIgc2luZ2xlIHRhcmdldCBmb2xsb3d1cFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IGhpdHRpbmcgc2hhZG93IG9mIHRoZSBoZXJvIHdpdGggYWJpbGl0aWVzIGNhbiBjYXVzZSB5b3UgdG8gdGFrZSBkYW1hZ2UsIGxpc3QgdGhvc2U/XHJcbi8vICAgICAgIGUuZy4gcGlja2luZyB1cCB5b3VyIGZpcnN0IHBpdGNoIGJvZyBwdWRkbGUgd2lsbCBjYXVzZSB5b3UgdG8gZGllIHRvIHRoZSBkYW1hZ2VcclxuLy8gICAgICAgeW91ciBzaGFkb3cgdGFrZXMgZnJvbSBEZWVwc2hhZG93IE5vdmEgb3IgRGlzdGFudCBTY3JlYW0uXHJcbi8vIFRPRE86IDU3M0IgQmxpZ2h0aW5nIEJsaXR6IGlzc3VlcyBkdXJpbmcgbGltaXQgY3V0IG51bWJlcnNcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VMaXRhbnlTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxMFMgSW1wbG9zaW9uIFNpbmdsZSAxJzogJzU2RjInLCAvLyBzaW5nbGUgdGFpbCB1cCBzaGFkb3cgaW1wbG9zaW9uXHJcbiAgICAnRTEwUyBJbXBsb3Npb24gU2luZ2xlIDInOiAnNTZFRicsIC8vIHNpbmdsZSBob3dsIHNoYWRvdyBpbXBsb3Npb25cclxuICAgICdFMTBTIEltcGxvc2lvbiBRdWFkcnVwbGUgMSc6ICc1NkVGJywgLy8gcXVhZHJ1cGxlIHNldCBvZiBzaGFkb3cgaW1wbG9zaW9uc1xyXG4gICAgJ0UxMFMgSW1wbG9zaW9uIFF1YWRydXBsZSAyJzogJzU2RjInLCAvLyBxdWFkcnVwbGUgc2V0IG9mIHNoYWRvdyBpbXBsb3Npb25zXHJcbiAgICAnRTEwUyBHaWdhIFNsYXNoIFNpbmdsZSAxJzogJzU2RUMnLCAvLyBHaWdhIHNsYXNoIHNpbmdsZSBmcm9tIHNoYWRvd1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBTaW5nbGUgMic6ICc1NkVEJywgLy8gR2lnYSBzbGFzaCBzaW5nbGUgZnJvbSBzaGFkb3dcclxuICAgICdFMTBTIEdpZ2EgU2xhc2ggQm94IDEnOiAnNTcwOScsIC8vIEdpZ2Egc2xhc2ggYm94IGZyb20gZm91ciBncm91bmQgc2hhZG93c1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBCb3ggMic6ICc1NzBEJywgLy8gR2lnYSBzbGFzaCBib3ggZnJvbSBmb3VyIGdyb3VuZCBzaGFkb3dzXHJcbiAgICAnRTEwUyBHaWdhIFNsYXNoIFF1YWRydXBsZSAxJzogJzU2RUMnLCAvLyBxdWFkcnVwbGUgc2V0IG9mIGdpZ2Egc2xhc2ggY2xlYXZlc1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBRdWFkcnVwbGUgMic6ICc1NkU5JywgLy8gcXVhZHJ1cGxlIHNldCBvZiBnaWdhIHNsYXNoIGNsZWF2ZXNcclxuICAgICdFMTBTIENsb2FrIE9mIFNoYWRvd3MgMSc6ICc1QjEzJywgLy8gaW5pdGlhbCBub24tc3F1aWdnbHkgbGluZSBleHBsb3Npb25zXHJcbiAgICAnRTEwUyBDbG9hayBPZiBTaGFkb3dzIDInOiAnNUIxNCcsIC8vIHNlY29uZCBzcXVpZ2dseSBsaW5lIGV4cGxvc2lvbnNcclxuICAgICdFMTBTIFRocm9uZSBPZiBTaGFkb3cnOiAnNTcxNycsIC8vIHN0YW5kaW5nIHVwIGdldCBvdXRcclxuICAgICdFMTBTIFNoYWRvd3kgRXJ1cHRpb24nOiAnNTczOCcsIC8vIGJhaXRlZCBncm91bmQgYW9lIGR1cmluZyBhbXBsaWZpZXJcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFMTBTIFN3YXRoIE9mIFNpbGVuY2UgMSc6ICc1NzFBJywgLy8gU2hhZG93IGNsb25lIGNsZWF2ZSAodG9vIGNsb3NlKVxyXG4gICAgJ0UxMFMgU3dhdGggT2YgU2lsZW5jZSAyJzogJzVCQkYnLCAvLyBTaGFkb3cgY2xvbmUgY2xlYXZlICh0aW1lZClcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMFMgU2hhZGVmaXJlJzogJzU3MzInLCAvLyBwdXJwbGUgdGFuayB1bWJyYWwgb3Jic1xyXG4gICAgJ0UxMFMgUGl0Y2ggQm9nJzogJzU3MjInLCAvLyBtYXJrZXIgc3ByZWFkIHRoYXQgZHJvcHMgYSBzaGFkb3cgcHVkZGxlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFMTBTIFNoYWRvd1xcJ3MgRWRnZSc6ICc1NzI1JywgLy8gVGFua2J1c3RlciBzaW5nbGUgdGFyZ2V0IGZvbGxvd3VwXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMFMgRGFtYWdlIERvd24gT3JicycsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAnRmxhbWVzaGFkb3cnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTY2hhdHRlbmZsYW1tZScsIGVmZmVjdElkOiAnODJDJyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IHNvdXJjZTogJ0ZsYW1tZSBvbWJyYWxlJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAn44K344Oj44OJ44Km44OV44Os44Kk44OgJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAn5b2x54OI54GrJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZGFtYWdlJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogYCR7bWF0Y2hlcy5lZmZlY3R9IChwYXJ0aWFsIHN0YWNrKWAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEwUyBEYW1hZ2UgRG93biBCb3NzJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU2hhY2tsZXMgYmVpbmcgbWVzc2VkIHVwIGFwcGVhciB0byBqdXN0IGdpdmUgdGhlIERhbWFnZSBEb3duLCB3aXRoIG5vdGhpbmcgZWxzZS5cclxuICAgICAgLy8gTWVzc2luZyB1cCB0b3dlcnMgaXMgdGhlIFRocmljZS1Db21lIFJ1aW4gZWZmZWN0ICg5RTIpLCBidXQgYWxzbyBEYW1hZ2UgRG93bi5cclxuICAgICAgLy8gVE9ETzogc29tZSBvZiB0aGVzZSB3aWxsIGJlIGR1cGxpY2F0ZWQgd2l0aCBvdGhlcnMsIGxpa2UgYEUxMFMgVGhyb25lIE9mIFNoYWRvd2AuXHJcbiAgICAgIC8vIE1heWJlIGl0J2QgYmUgbmljZSB0byBmaWd1cmUgb3V0IGhvdyB0byBwdXQgdGhlIGRhbWFnZSBtYXJrZXIgb24gdGhhdD9cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTaGFkb3drZWVwZXInLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTY2hhdHRlbmvDtm5pZycsIGVmZmVjdElkOiAnODJDJyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IHNvdXJjZTogJ1JvaSBEZSBMXFwnT21icmUnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICflvbHjga7njosnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICflvbHkuYvnjosnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdkYW1hZ2UnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBgJHttYXRjaGVzLmVmZmVjdH1gIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBTaGFkb3cgV2FycmlvciA0IGRvZyByb29tIGNsZWF2ZVxyXG4gICAgICAvLyBUaGlzIGNhbiBiZSBtaXRpZ2F0ZWQgYnkgdGhlIHdob2xlIGdyb3VwLCBzbyBhZGQgYSBkYW1hZ2UgY29uZGl0aW9uLlxyXG4gICAgICBpZDogJ0UxMFMgQmFyYnMgT2YgQWdvbnknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6IFsnNTcyQScsICc1QjI3J10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VBbmFtb3JwaG9zaXMsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxMU4gQnVybnQgU3RyaWtlIExpZ2h0bmluZyc6ICc1NjJFJywgLy8gTGluZSBjbGVhdmVcclxuICAgICdFMTFOIEJ1cm50IFN0cmlrZSBGaXJlJzogJzU2MkMnLCAvLyBMaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gQnVybnQgU3RyaWtlIEhvbHknOiAnNTYzMCcsIC8vIExpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBCdXJub3V0JzogJzU2MkYnLCAvLyBCdXJudCBTdHJpa2UgbGlnaHRuaW5nIGV4cGFuc2lvblxyXG4gICAgJ0UxMU4gU2hpbmluZyBCbGFkZSc6ICc1NjMxJywgLy8gQmFpdGVkIGV4cGxvc2lvblxyXG4gICAgJ0UxMU4gSGFsbyBPZiBGbGFtZSBCcmlnaHRmaXJlJzogJzU2M0InLCAvLyBSZWQgY2lyY2xlIGludGVybWlzc2lvbiBleHBsb3Npb25cclxuICAgICdFMTFOIEhhbG8gT2YgTGV2aW4gQnJpZ2h0ZmlyZSc6ICc1NjNDJywgLy8gQmx1ZSBjaXJjbGUgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMU4gUmVzb3VuZGluZyBDcmFjayc6ICc1NjREJywgLy8gRGVtaS1HdWt1bWF0eiAyNzAgZGVncmVlIGZyb250YWwgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBCdXJudCBTdHJpa2UgTGlnaHRuaW5nJzogJzU2NDUnLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gSW1hZ2UgQnVybnQgU3RyaWtlIEZpcmUnOiAnNTY0MycsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGxpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBCdXJub3V0JzogJzU2NDYnLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaWdodG5pbmcgZXhwYW5zaW9uXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTExTiBCbGFzdGluZyBab25lJzogJzU2M0UnLCAvLyBQcmlzbWF0aWMgRGVjZXB0aW9uIGNoYXJnZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMU4gQnVybiBNYXJrJzogJzU2NEYnLCAvLyBQb3dkZXIgTWFyayBkZWJ1ZmYgZXhwbG9zaW9uXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMU4gQmxhc3RidXJuIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA1NjJEID0gQnVybnQgU3RyaWtlIGZpcmUgZm9sbG93dXAgZHVyaW5nIG1vc3Qgb2YgdGhlIGZpZ2h0XHJcbiAgICAgIC8vIDU2NDQgPSBzYW1lIHRoaW5nLCBidXQgZnJvbSBGYXRlYnJlYWtlcidzIEltYWdlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc1NjJEJywgJzU2NDQnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIDU2NUEvNTY4RCBTaW5zbW9rZSBCb3VuZCBPZiBGYWl0aCBzaGFyZVxyXG4vLyA1NjVFLzU2OTkgQm93c2hvY2sgaGl0cyB0YXJnZXQgb2YgNTY1RCAodHdpY2UpIGFuZCB0d28gb3RoZXJzXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNQcm9taXNlQW5hbW9ycGhvc2lzU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFMTFTIEJ1cm50IFN0cmlrZSBGaXJlJzogJzU2NTInLCAvLyBMaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMVMgQnVybnQgU3RyaWtlIExpZ2h0bmluZyc6ICc1NjU0JywgLy8gTGluZSBjbGVhdmVcclxuICAgICdFMTFTIEJ1cm50IFN0cmlrZSBIb2x5JzogJzU2NTYnLCAvLyBMaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMVMgU2hpbmluZyBCbGFkZSc6ICc1NjU3JywgLy8gQmFpdGVkIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgQnVybnQgU3RyaWtlIEN5Y2xlIEZpcmUnOiAnNTY4RScsIC8vIExpbmUgY2xlYXZlIGR1cmluZyBDeWNsZVxyXG4gICAgJ0UxMVMgQnVybnQgU3RyaWtlIEN5Y2xlIExpZ2h0bmluZyc6ICc1Njk1JywgLy8gTGluZSBjbGVhdmUgZHVyaW5nIEN5Y2xlXHJcbiAgICAnRTExUyBCdXJudCBTdHJpa2UgQ3ljbGUgSG9seSc6ICc1NjlEJywgLy8gTGluZSBjbGVhdmUgZHVyaW5nIEN5Y2xlXHJcbiAgICAnRTExUyBTaGluaW5nIEJsYWRlIEN5Y2xlJzogJzU2OUUnLCAvLyBCYWl0ZWQgZXhwbG9zaW9uIGR1cmluZyBDeWNsZVxyXG4gICAgJ0UxMVMgSGFsbyBPZiBGbGFtZSBCcmlnaHRmaXJlJzogJzU2NkQnLCAvLyBSZWQgY2lyY2xlIGludGVybWlzc2lvbiBleHBsb3Npb25cclxuICAgICdFMTFTIEhhbG8gT2YgTGV2aW4gQnJpZ2h0ZmlyZSc6ICc1NjZDJywgLy8gQmx1ZSBjaXJjbGUgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgUG9ydGFsIE9mIEZsYW1lIEJyaWdodCBQdWxzZSc6ICc1NjcxJywgLy8gUmVkIGNhcmQgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgUG9ydGFsIE9mIExldmluIEJyaWdodCBQdWxzZSc6ICc1NjcwJywgLy8gQmx1ZSBjYXJkIGludGVybWlzc2lvbiBleHBsb3Npb25cclxuICAgICdFMTFTIFJlc29uYW50IFdpbmRzJzogJzU2ODknLCAvLyBEZW1pLUd1a3VtYXR6IFwiZ2V0IGluXCJcclxuICAgICdFMTFTIFJlc291bmRpbmcgQ3JhY2snOiAnNTY4OCcsIC8vIERlbWktR3VrdW1hdHogMjcwIGRlZ3JlZSBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ0UxMVMgSW1hZ2UgQnVybnQgU3RyaWtlIExpZ2h0bmluZyc6ICc1NjdCJywgLy8gRmF0ZSBCcmVha2VyJ3MgSW1hZ2UgbGluZSBjbGVhdmVcclxuICAgICdFMTFOIEltYWdlIEJ1cm5vdXQnOiAnNTY3QycsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGxpZ2h0bmluZyBleHBhbnNpb25cclxuICAgICdFMTFOIEltYWdlIEJ1cm50IFN0cmlrZSBGaXJlJzogJzU2NzknLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gSW1hZ2UgQnVybnQgU3RyaWtlIEhvbHknOiAnNTY3QicsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGxpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBTaGluaW5nIEJsYWRlJzogJzU2N0UnLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBiYWl0ZWQgZXhwbG9zaW9uXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTExUyBCdXJub3V0JzogJzU2NTUnLCAvLyBCdXJudCBTdHJpa2UgbGlnaHRuaW5nIGV4cGFuc2lvblxyXG4gICAgJ0UxMVMgQnVybm91dCBDeWNsZSc6ICc1Njk2JywgLy8gQnVybnQgU3RyaWtlIGxpZ2h0bmluZyBleHBhbnNpb25cclxuICAgICdFMTFTIEJsYXN0aW5nIFpvbmUnOiAnNTY3NCcsIC8vIFByaXNtYXRpYyBEZWNlcHRpb24gY2hhcmdlc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTExUyBFbGVtZW50YWwgQnJlYWsnOiAnNTY2NCcsIC8vIEVsZW1lbnRhbCBCcmVhayBwcm90ZWFuXHJcbiAgICAnRTExUyBFbGVtZW50YWwgQnJlYWsgQ3ljbGUnOiAnNTY4QycsIC8vIEVsZW1lbnRhbCBCcmVhayBwcm90ZWFuIGR1cmluZyBDeWNsZVxyXG4gICAgJ0UxMVMgU2luc21pdGUnOiAnNTY2NycsIC8vIExpZ2h0bmluZyBFbGVtZW50YWwgQnJlYWsgc3ByZWFkXHJcbiAgICAnRTExUyBTaW5zbWl0ZSBDeWNsZSc6ICc1Njk0JywgLy8gTGlnaHRuaW5nIEVsZW1lbnRhbCBCcmVhayBzcHJlYWQgZHVyaW5nIEN5Y2xlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFMTFTIEJ1cm4gTWFyayc6ICc1NkEzJywgLy8gUG93ZGVyIE1hcmsgZGVidWZmIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgU2luc2lnaHQgMSc6ICc1NjYxJywgLy8gSG9seSBCb3VuZCBPZiBGYWl0aCB0ZXRoZXJcclxuICAgICdFMTFTIFNpbnNpZ2h0IDInOiAnNUJDNycsIC8vIEhvbHkgQm91bmQgT2YgRmFpdGggdGV0aGVyIGZyb20gRmF0ZWJyZWFrZXIncyBJbWFnZVxyXG4gICAgJ0UxMVMgU2luc2lnaHQgMyc6ICc1NkEwJywgLy8gSG9seSBCb3VuZCBPZiBGYWl0aCB0ZXRoZXIgZHVyaW5nIEN5Y2xlXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0UxMVMgSG9seSBTaW5zaWdodCBHcm91cCBTaGFyZSc6ICc1NjY5JyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTExUyBCbGFzdGJ1cm4gS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIC8vIDU2NTMgPSBCdXJudCBTdHJpa2UgZmlyZSBmb2xsb3d1cCBkdXJpbmcgbW9zdCBvZiB0aGUgZmlnaHRcclxuICAgICAgLy8gNTY3QSA9IHNhbWUgdGhpbmcsIGJ1dCBmcm9tIEZhdGVicmVha2VyJ3MgSW1hZ2VcclxuICAgICAgLy8gNTY4RiA9IHNhbWUgdGhpbmcsIGJ1dCBkdXJpbmcgQ3ljbGUgb2YgRmFpdGhcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzU2NTMnLCAnNTY3QScsICc1NjhGJ10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZUV0ZXJuaXR5LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFMTJOIEp1ZGdtZW50IEpvbHQgU2luZ2xlJzogJzU4NUYnLCAvLyBSYW11aCBnZXQgb3V0IGNhc3RcclxuICAgICdFMTJOIEp1ZGdtZW50IEpvbHQnOiAnNEUzMCcsIC8vIFJhbXVoIGdldCBvdXQgY2FzdFxyXG4gICAgJ0UxMk4gVGVtcG9yYXJ5IEN1cnJlbnQgU2luZ2xlJzogJzU4NUMnLCAvLyBMZXZpIGdldCB1bmRlciBjYXN0XHJcbiAgICAnRTEyTiBUZW1wb3JhcnkgQ3VycmVudCc6ICc0RTJEJywgLy8gTGV2aSBnZXQgdW5kZXIgY2FzdFxyXG4gICAgJ0UxMk4gQ29uZmxhZyBTdHJpa2UgU2luZ2xlJzogJzU4NUQnLCAvLyBJZnJpdCBnZXQgc2lkZXMgY2FzdFxyXG4gICAgJ0UxMk4gQ29uZmxhZyBTdHJpa2UnOiAnNEUyRScsIC8vIElmcml0IGdldCBzaWRlcyBjYXN0XHJcbiAgICAnRTEyTiBGZXJvc3Rvcm0gU2luZ2xlJzogJzU4NUUnLCAvLyBHYXJ1ZGEgZ2V0IGludGVyY2FyZGluYWxzIGNhc3RcclxuICAgICdFMTJOIEZlcm9zdG9ybSc6ICc0RTJGJywgLy8gR2FydWRhIGdldCBpbnRlcmNhcmRpbmFscyBjYXN0XHJcbiAgICAnRTEyTiBSYXB0dXJvdXMgUmVhY2ggMSc6ICc1ODc4JywgLy8gSGFpcmN1dFxyXG4gICAgJ0UxMk4gUmFwdHVyb3VzIFJlYWNoIDInOiAnNTg3NycsIC8vIEhhaXJjdXRcclxuICAgICdFMTJOIEJvbWIgRXhwbG9zaW9uJzogJzU4NkQnLCAvLyBTbWFsbCBib21iIGV4cGxvc2lvblxyXG4gICAgJ0UxMk4gVGl0YW5pYyBCb21iIEV4cGxvc2lvbic6ICc1ODZGJywgLy8gTGFyZ2UgYm9tYiBleHBsb3Npb25cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMk4gRWFydGhzaGFrZXInOiAnNTg4NScsIC8vIEVhcnRoc2hha2VyIG9uIGZpcnN0IHBsYXRmb3JtXHJcbiAgICAnRTEyTiBQcm9taXNlIEZyaWdpZCBTdG9uZSAxJzogJzU4NjcnLCAvLyBTaGl2YSBzcHJlYWQgd2l0aCBzbGlkaW5nXHJcbiAgICAnRTEyTiBQcm9taXNlIEZyaWdpZCBTdG9uZSAyJzogJzU4NjknLCAvLyBTaGl2YSBzcHJlYWQgd2l0aCBSYXB0dXJvdXMgUmVhY2hcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IHsgTGFuZyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9sYW5ndWFnZXMnO1xyXG5pbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCB7IFVucmVhY2hhYmxlQ29kZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9ub3RfcmVhY2hlZCc7XHJcbmltcG9ydCBPdXRwdXRzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9vdXRwdXRzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBOZXRNYXRjaGVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvbmV0X21hdGNoZXMnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IExvY2FsZVRleHQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy90cmlnZ2VyJztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgZGVjT2Zmc2V0PzogbnVtYmVyO1xyXG4gIGxhc2VyTmFtZVRvTnVtPzogeyBbbmFtZTogc3RyaW5nXTogbnVtYmVyIH07XHJcbiAgc2N1bHB0dXJlVGV0aGVyTmFtZVRvSWQ/OiB7IFtuYW1lOiBzdHJpbmddOiBzdHJpbmcgfTtcclxuICBzY3VscHR1cmVZUG9zaXRpb25zPzogeyBbc2N1bHB0dXJlSWQ6IHN0cmluZ106IG51bWJlciB9O1xyXG4gIGJsYWRlT2ZGbGFtZUNvdW50PzogbnVtYmVyO1xyXG4gIHBpbGxhcklkVG9Pd25lcj86IHsgW3BpbGxhcklkOiBzdHJpbmddOiBzdHJpbmcgfTtcclxuICBzbWFsbExpb25JZFRvT3duZXI/OiB7IFtwaWxsYXJJZDogc3RyaW5nXTogc3RyaW5nIH07XHJcbiAgc21hbGxMaW9uT3duZXJzPzogc3RyaW5nW107XHJcbiAgbm9ydGhCaWdMaW9uPzogc3RyaW5nO1xyXG4gIGZpcmU/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIFRPRE86IGFkZCBzZXBhcmF0ZSBkYW1hZ2VXYXJuLWVzcXVlIGljb24gZm9yIGRhbWFnZSBkb3ducz9cclxuLy8gVE9ETzogNThBNiBVbmRlciBUaGUgV2VpZ2h0IC8gNThCMiBDbGFzc2ljYWwgU2N1bHB0dXJlIG1pc3Npbmcgc29tZWJvZHkgaW4gcGFydHkgd2FybmluZz9cclxuLy8gVE9ETzogNThDQSBEYXJrIFdhdGVyIElJSSAvIDU4QzUgU2hlbGwgQ3J1c2hlciBzaG91bGQgaGl0IGV2ZXJ5b25lIGluIHBhcnR5XHJcbi8vIFRPRE86IERhcmsgQWVybyBJSUkgNThENCBzaG91bGQgbm90IGJlIGEgc2hhcmUgZXhjZXB0IG9uIGFkdmFuY2VkIHJlbGF0aXZpdHkgZm9yIGRvdWJsZSBhZXJvLlxyXG4vLyAoZm9yIGdhaW5zIGVmZmVjdCwgc2luZ2xlIGFlcm8gPSB+MjMgc2Vjb25kcywgZG91YmxlIGFlcm8gPSB+MzEgc2Vjb25kcyBkdXJhdGlvbilcclxuXHJcbi8vIER1ZSB0byBjaGFuZ2VzIGludHJvZHVjZWQgaW4gcGF0Y2ggNS4yLCBvdmVyaGVhZCBtYXJrZXJzIG5vdyBoYXZlIGEgcmFuZG9tIG9mZnNldFxyXG4vLyBhZGRlZCB0byB0aGVpciBJRC4gVGhpcyBvZmZzZXQgY3VycmVudGx5IGFwcGVhcnMgdG8gYmUgc2V0IHBlciBpbnN0YW5jZSwgc29cclxuLy8gd2UgY2FuIGRldGVybWluZSB3aGF0IGl0IGlzIGZyb20gdGhlIGZpcnN0IG92ZXJoZWFkIG1hcmtlciB3ZSBzZWUuXHJcbi8vIFRoZSBmaXJzdCAxQiBtYXJrZXIgaW4gdGhlIGVuY291bnRlciBpcyB0aGUgZm9ybWxlc3MgdGFua2J1c3RlciwgSUQgMDA0Ri5cclxuY29uc3QgZmlyc3RIZWFkbWFya2VyID0gcGFyc2VJbnQoJzAwREEnLCAxNik7XHJcbmNvbnN0IGdldEhlYWRtYXJrZXJJZCA9IChkYXRhOiBEYXRhLCBtYXRjaGVzOiBOZXRNYXRjaGVzWydIZWFkTWFya2VyJ10pID0+IHtcclxuICAvLyBJZiB3ZSBuYWl2ZWx5IGp1c3QgY2hlY2sgIWRhdGEuZGVjT2Zmc2V0IGFuZCBsZWF2ZSBpdCwgaXQgYnJlYWtzIGlmIHRoZSBmaXJzdCBtYXJrZXIgaXMgMDBEQS5cclxuICAvLyAoVGhpcyBtYWtlcyB0aGUgb2Zmc2V0IDAsIGFuZCAhMCBpcyB0cnVlLilcclxuICBpZiAodHlwZW9mIGRhdGEuZGVjT2Zmc2V0ID09PSAndW5kZWZpbmVkJylcclxuICAgIGRhdGEuZGVjT2Zmc2V0ID0gcGFyc2VJbnQobWF0Y2hlcy5pZCwgMTYpIC0gZmlyc3RIZWFkbWFya2VyO1xyXG4gIC8vIFRoZSBsZWFkaW5nIHplcm9lcyBhcmUgc3RyaXBwZWQgd2hlbiBjb252ZXJ0aW5nIGJhY2sgdG8gc3RyaW5nLCBzbyB3ZSByZS1hZGQgdGhlbSBoZXJlLlxyXG4gIC8vIEZvcnR1bmF0ZWx5LCB3ZSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IHdoZXRoZXIgb3Igbm90IHRoaXMgaXMgcm9idXN0LFxyXG4gIC8vIHNpbmNlIHdlIGtub3cgYWxsIHRoZSBJRHMgdGhhdCB3aWxsIGJlIHByZXNlbnQgaW4gdGhlIGVuY291bnRlci5cclxuICByZXR1cm4gKHBhcnNlSW50KG1hdGNoZXMuaWQsIDE2KSAtIGRhdGEuZGVjT2Zmc2V0KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKS5wYWRTdGFydCg0LCAnMCcpO1xyXG59O1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZUV0ZXJuaXR5U2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFMTJTIFByb21pc2UgUmFwdHVyb3VzIFJlYWNoIExlZnQnOiAnNThBRCcsIC8vIEhhaXJjdXQgd2l0aCBsZWZ0IHNhZmUgc2lkZVxyXG4gICAgJ0UxMlMgUHJvbWlzZSBSYXB0dXJvdXMgUmVhY2ggUmlnaHQnOiAnNThBRScsIC8vIEhhaXJjdXQgd2l0aCByaWdodCBzYWZlIHNpZGVcclxuICAgICdFMTJTIFByb21pc2UgVGVtcG9yYXJ5IEN1cnJlbnQnOiAnNEU0NCcsIC8vIExldmkgZ2V0IHVuZGVyIGNhc3QgKGRhbWFnZSBkb3duKVxyXG4gICAgJ0UxMlMgUHJvbWlzZSBDb25mbGFnIFN0cmlrZSc6ICc0RTQ1JywgLy8gSWZyaXQgZ2V0IHNpZGVzIGNhc3QgKGRhbWFnZSBkb3duKVxyXG4gICAgJ0UxMlMgUHJvbWlzZSBGZXJvc3Rvcm0nOiAnNEU0NicsIC8vIEdhcnVkYSBnZXQgaW50ZXJjYXJkaW5hbHMgY2FzdCAoZGFtYWdlIGRvd24pXHJcbiAgICAnRTEyUyBQcm9taXNlIEp1ZGdtZW50IEpvbHQnOiAnNEU0NycsIC8vIFJhbXVoIGdldCBvdXQgY2FzdCAoZGFtYWdlIGRvd24pXHJcbiAgICAnRTEyUyBQcm9taXNlIFNoYXR0ZXInOiAnNTg5QycsIC8vIEljZSBQaWxsYXIgZXhwbG9zaW9uIGlmIHRldGhlciBub3QgZ290dGVuXHJcbiAgICAnRTEyUyBQcm9taXNlIEltcGFjdCc6ICc1OEExJywgLy8gVGl0YW4gYm9tYiBkcm9wXHJcbiAgICAnRTEyUyBPcmFjbGUgRGFyayBCbGl6emFyZCBJSUknOiAnNThEMycsIC8vIFJlbGF0aXZpdHkgZG9udXQgbWVjaGFuaWNcclxuICAgICdFMTJTIE9yYWNsZSBBcG9jYWx5cHNlJzogJzU4RTYnLCAvLyBMaWdodCB1cCBjaXJjbGUgZXhwbG9zaW9ucyAoZGFtYWdlIGRvd24pXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTEyUyBPcmFjbGUgTWFlbHN0cm9tJzogJzU4REEnLCAvLyBBZHZhbmNlZCBSZWxhdGl2aXR5IHRyYWZmaWMgbGlnaHQgYW9lXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdFMTJTIE9yYWNsZSBEb29tJzogJzlENCcsIC8vIFJlbGF0aXZpdHkgcHVuaXNobWVudCBmb3IgbXVsdGlwbGUgbWlzdGFrZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMlMgUHJvbWlzZSBGcmlnaWQgU3RvbmUnOiAnNTg5RScsIC8vIFNoaXZhIHNwcmVhZFxyXG4gICAgJ0UxMlMgT3JhY2xlIERhcmtlc3QgRGFuY2UnOiAnNEUzMycsIC8vIEZhcnRoZXN0IHRhcmdldCBiYWl0ICsganVtcCBiZWZvcmUga25vY2tiYWNrXHJcbiAgICAnRTEyUyBPcmFjbGUgRGFyayBDdXJyZW50JzogJzU4RDgnLCAvLyBCYWl0ZWQgdHJhZmZpYyBsaWdodCBsYXNlcnNcclxuICAgICdFMTJTIE9yYWNsZSBTcGlyaXQgVGFrZXInOiAnNThDNicsIC8vIFJhbmRvbSBqdW1wIHNwcmVhZCBtZWNoYW5pYyBhZnRlciBTaGVsbCBDcnVzaGVyXHJcbiAgICAnRTEyUyBPcmFjbGUgU29tYmVyIERhbmNlIDEnOiAnNThCRicsIC8vIEZhcnRoZXN0IHRhcmdldCBiYWl0IGZvciBEdWFsIEFwb2NhbHlwc2VcclxuICAgICdFMTJTIE9yYWNsZSBTb21iZXIgRGFuY2UgMic6ICc1OEMwJywgLy8gU2Vjb25kIHNvbWJlciBkYW5jZSBqdW1wXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFMTJTIFByb21pc2UgV2VpZ2h0IE9mIFRoZSBXb3JsZCc6ICc1OEE1JywgLy8gVGl0YW4gYm9tYiBibHVlIG1hcmtlclxyXG4gICAgJ0UxMlMgUHJvbWlzZSBQdWxzZSBPZiBUaGUgTGFuZCc6ICc1OEEzJywgLy8gVGl0YW4gYm9tYiB5ZWxsb3cgbWFya2VyXHJcbiAgICAnRTEyUyBPcmFjbGUgRGFyayBFcnVwdGlvbiAxJzogJzU4Q0UnLCAvLyBJbml0aWFsIHdhcm11cCBzcHJlYWQgbWVjaGFuaWNcclxuICAgICdFMTJTIE9yYWNsZSBEYXJrIEVydXB0aW9uIDInOiAnNThDRCcsIC8vIFJlbGF0aXZpdHkgc3ByZWFkIG1lY2hhbmljXHJcbiAgICAnRTEyUyBPcmFjbGUgQmxhY2sgSGFsbyc6ICc1OEM3JywgLy8gVGFua2J1c3RlciBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnRTEyUyBQcm9taXNlIEZvcmNlIE9mIFRoZSBMYW5kJzogJzU4QTQnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gQmlnIGNpcmNsZSBncm91bmQgYW9lcyBkdXJpbmcgU2hpdmEganVuY3Rpb24uXHJcbiAgICAgIC8vIFRoaXMgY2FuIGJlIHNoaWVsZGVkIHRocm91Z2ggYXMgbG9uZyBhcyB0aGF0IHBlcnNvbiBkb2Vzbid0IHN0YWNrLlxyXG4gICAgICBpZDogJ0UxMlMgSWNpY2xlIEltcGFjdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzRFNUEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIEhlYWRtYXJrZXInLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoe30pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgaWQgPSBnZXRIZWFkbWFya2VySWQoZGF0YSwgbWF0Y2hlcyk7XHJcbiAgICAgICAgY29uc3QgZmlyc3RMYXNlck1hcmtlciA9ICcwMDkxJztcclxuICAgICAgICBjb25zdCBsYXN0TGFzZXJNYXJrZXIgPSAnMDA5OCc7XHJcbiAgICAgICAgaWYgKGlkID49IGZpcnN0TGFzZXJNYXJrZXIgJiYgaWQgPD0gbGFzdExhc2VyTWFya2VyKSB7XHJcbiAgICAgICAgICAvLyBpZHMgYXJlIHNlcXVlbnRpYWw6ICMxIHNxdWFyZSwgIzIgc3F1YXJlLCAjMyBzcXVhcmUsICM0IHNxdWFyZSwgIzEgdHJpYW5nbGUgZXRjXHJcbiAgICAgICAgICBjb25zdCBkZWNPZmZzZXQgPSBwYXJzZUludChpZCwgMTYpIC0gcGFyc2VJbnQoZmlyc3RMYXNlck1hcmtlciwgMTYpO1xyXG5cclxuICAgICAgICAgIC8vIGRlY09mZnNldCBpcyAwLTcsIHNvIG1hcCAwLTMgdG8gMS00IGFuZCA0LTcgdG8gMS00LlxyXG4gICAgICAgICAgZGF0YS5sYXNlck5hbWVUb051bSA/Pz0ge307XHJcbiAgICAgICAgICBkYXRhLmxhc2VyTmFtZVRvTnVtW21hdGNoZXMudGFyZ2V0XSA9IGRlY09mZnNldCAlIDQgKyAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFRoZXNlIHNjdWxwdHVyZXMgYXJlIGFkZGVkIGF0IHRoZSBzdGFydCBvZiB0aGUgZmlnaHQsIHNvIHdlIG5lZWQgdG8gY2hlY2sgd2hlcmUgdGhleVxyXG4gICAgICAvLyB1c2UgdGhlIFwiQ2xhc3NpY2FsIFNjdWxwdHVyZVwiIGFiaWxpdHkgYW5kIGVuZCB1cCBvbiB0aGUgYXJlbmEgZm9yIHJlYWwuXHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIENoaXNlbGVkIFNjdWxwdHVyZSBDbGFzc2ljYWwgU2N1bHB0dXJlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IHNvdXJjZTogJ0NoaXNlbGVkIFNjdWxwdHVyZScsIGlkOiAnNThCMicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBUaGlzIHdpbGwgcnVuIHBlciBwZXJzb24gdGhhdCBnZXRzIGhpdCBieSB0aGUgc2FtZSBzY3VscHR1cmUsIGJ1dCB0aGF0J3MgZmluZS5cclxuICAgICAgICAvLyBSZWNvcmQgdGhlIHkgcG9zaXRpb24gb2YgZWFjaCBzY3VscHR1cmUgc28gd2UgY2FuIHVzZSBpdCBmb3IgYmV0dGVyIHRleHQgbGF0ZXIuXHJcbiAgICAgICAgZGF0YS5zY3VscHR1cmVZUG9zaXRpb25zID8/PSB7fTtcclxuICAgICAgICBkYXRhLnNjdWxwdHVyZVlQb3NpdGlvbnNbbWF0Y2hlcy5zb3VyY2VJZC50b1VwcGVyQ2FzZSgpXSA9IHBhcnNlRmxvYXQobWF0Y2hlcy55KTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFRoZSBzb3VyY2Ugb2YgdGhlIHRldGhlciBpcyB0aGUgcGxheWVyLCB0aGUgdGFyZ2V0IGlzIHRoZSBzY3VscHR1cmUuXHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIENoaXNlbGVkIFNjdWxwdHVyZSBUZXRoZXInLFxyXG4gICAgICB0eXBlOiAnVGV0aGVyJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgdGFyZ2V0OiAnQ2hpc2VsZWQgU2N1bHB0dXJlJywgaWQ6ICcwMDExJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuc2N1bHB0dXJlVGV0aGVyTmFtZVRvSWQgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuc2N1bHB0dXJlVGV0aGVyTmFtZVRvSWRbbWF0Y2hlcy5zb3VyY2VdID0gbWF0Y2hlcy50YXJnZXRJZC50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgQmxhZGUgT2YgRmxhbWUgQ291bnRlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHNvdXJjZTogJ0NoaXNlbGVkIFNjdWxwdHVyZScsIGlkOiAnNThCMycgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogMSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAxLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5ibGFkZU9mRmxhbWVDb3VudCA9IGRhdGEuYmxhZGVPZkZsYW1lQ291bnQgfHwgMDtcclxuICAgICAgICBkYXRhLmJsYWRlT2ZGbGFtZUNvdW50Kys7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGlzIGlzIHRoZSBDaGlzZWxlZCBTY3VscHR1cmUgbGFzZXIgd2l0aCB0aGUgbGltaXQgY3V0IGRvdHMuXHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIEJsYWRlIE9mIEZsYW1lJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgdHlwZTogJzIyJywgc291cmNlOiAnQ2hpc2VsZWQgU2N1bHB0dXJlJywgaWQ6ICc1OEIzJyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEubGFzZXJOYW1lVG9OdW0gfHwgIWRhdGEuc2N1bHB0dXJlVGV0aGVyTmFtZVRvSWQgfHwgIWRhdGEuc2N1bHB0dXJlWVBvc2l0aW9ucylcclxuICAgICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgICAgLy8gRmluZCB0aGUgcGVyc29uIHdobyBoYXMgdGhpcyBsYXNlciBudW1iZXIgYW5kIGlzIHRldGhlcmVkIHRvIHRoaXMgc3RhdHVlLlxyXG4gICAgICAgIGNvbnN0IG51bWJlciA9IChkYXRhLmJsYWRlT2ZGbGFtZUNvdW50IHx8IDApICsgMTtcclxuICAgICAgICBjb25zdCBzb3VyY2VJZCA9IG1hdGNoZXMuc291cmNlSWQudG9VcHBlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBuYW1lcyA9IE9iamVjdC5rZXlzKGRhdGEubGFzZXJOYW1lVG9OdW0pO1xyXG4gICAgICAgIGNvbnN0IHdpdGhOdW0gPSBuYW1lcy5maWx0ZXIoKG5hbWUpID0+IGRhdGEubGFzZXJOYW1lVG9OdW0/LltuYW1lXSA9PT0gbnVtYmVyKTtcclxuICAgICAgICBjb25zdCBvd25lcnMgPSB3aXRoTnVtLmZpbHRlcigobmFtZSkgPT4gZGF0YS5zY3VscHR1cmVUZXRoZXJOYW1lVG9JZD8uW25hbWVdID09PSBzb3VyY2VJZCk7XHJcblxyXG4gICAgICAgIC8vIGlmIHNvbWUgbG9naWMgZXJyb3IsIGp1c3QgYWJvcnQuXHJcbiAgICAgICAgaWYgKG93bmVycy5sZW5ndGggIT09IDEpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIC8vIFRoZSBvd25lciBoaXR0aW5nIHRoZW1zZWx2ZXMgaXNuJ3QgYSBtaXN0YWtlLi4udGVjaG5pY2FsbHkuXHJcbiAgICAgICAgaWYgKG93bmVyc1swXSA9PT0gbWF0Y2hlcy50YXJnZXQpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIC8vIE5vdyB0cnkgdG8gZmlndXJlIG91dCB3aGljaCBzdGF0dWUgaXMgd2hpY2guXHJcbiAgICAgICAgLy8gUGVvcGxlIGNhbiBwdXQgdGhlc2Ugd2hlcmV2ZXIuICBUaGV5IGNvdWxkIGdvIHNpZGV3YXlzLCBvciBkaWFnb25hbCwgb3Igd2hhdGV2ZXIuXHJcbiAgICAgICAgLy8gSXQgc2VlbXMgbW9vb29vc3QgcGVvcGxlIHB1dCB0aGVzZSBub3J0aCAvIHNvdXRoIChvbiB0aGUgc291dGggZWRnZSBvZiB0aGUgYXJlbmEpLlxyXG4gICAgICAgIC8vIExldCdzIHNheSBhIG1pbmltdW0gb2YgMiB5YWxtcyBhcGFydCBpbiB0aGUgeSBkaXJlY3Rpb24gdG8gY29uc2lkZXIgdGhlbSBcIm5vcnRoL3NvdXRoXCIuXHJcbiAgICAgICAgY29uc3QgbWluaW11bVlhbG1zRm9yU3RhdHVlcyA9IDI7XHJcblxyXG4gICAgICAgIGxldCBpc1N0YXR1ZVBvc2l0aW9uS25vd24gPSBmYWxzZTtcclxuICAgICAgICBsZXQgaXNTdGF0dWVOb3J0aCA9IGZhbHNlO1xyXG4gICAgICAgIGNvbnN0IHNjdWxwdHVyZUlkcyA9IE9iamVjdC5rZXlzKGRhdGEuc2N1bHB0dXJlWVBvc2l0aW9ucyk7XHJcbiAgICAgICAgaWYgKHNjdWxwdHVyZUlkcy5sZW5ndGggPT09IDIgJiYgc2N1bHB0dXJlSWRzLmluY2x1ZGVzKHNvdXJjZUlkKSkge1xyXG4gICAgICAgICAgY29uc3Qgb3RoZXJJZCA9IHNjdWxwdHVyZUlkc1swXSA9PT0gc291cmNlSWQgPyBzY3VscHR1cmVJZHNbMV0gOiBzY3VscHR1cmVJZHNbMF07XHJcbiAgICAgICAgICBjb25zdCBzb3VyY2VZID0gZGF0YS5zY3VscHR1cmVZUG9zaXRpb25zW3NvdXJjZUlkXTtcclxuICAgICAgICAgIGNvbnN0IG90aGVyWSA9IGRhdGEuc2N1bHB0dXJlWVBvc2l0aW9uc1tvdGhlcklkID8/ICcnXTtcclxuICAgICAgICAgIGlmIChzb3VyY2VZID09PSB1bmRlZmluZWQgfHwgb3RoZXJZID09PSB1bmRlZmluZWQgfHwgb3RoZXJJZCA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVW5yZWFjaGFibGVDb2RlKCk7XHJcbiAgICAgICAgICBjb25zdCB5RGlmZiA9IE1hdGguYWJzKHNvdXJjZVkgLSBvdGhlclkpO1xyXG4gICAgICAgICAgaWYgKHlEaWZmID4gbWluaW11bVlhbG1zRm9yU3RhdHVlcykge1xyXG4gICAgICAgICAgICBpc1N0YXR1ZVBvc2l0aW9uS25vd24gPSB0cnVlO1xyXG4gICAgICAgICAgICBpc1N0YXR1ZU5vcnRoID0gc291cmNlWSA8IG90aGVyWTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG93bmVyID0gb3duZXJzWzBdO1xyXG4gICAgICAgIGNvbnN0IG93bmVyTmljayA9IGRhdGEuU2hvcnROYW1lKG93bmVyKTtcclxuICAgICAgICBsZXQgdGV4dCA9IHtcclxuICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChmcm9tICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKHZvbiAke293bmVyTmlja30sICMke251bWJlcn0pYCxcclxuICAgICAgICAgIGphOiBgJHttYXRjaGVzLmFiaWxpdHl9ICgke293bmVyTmlja33jgYvjgonjgIEjJHtudW1iZXJ9KWAsXHJcbiAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5p2l6IeqJHtvd25lck5pY2t977yMIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOuMgOyDgeyekCBcIiR7b3duZXJOaWNrfVwiLCAke251bWJlcn3rsogpYCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChpc1N0YXR1ZVBvc2l0aW9uS25vd24gJiYgaXNTdGF0dWVOb3J0aCkge1xyXG4gICAgICAgICAgdGV4dCA9IHtcclxuICAgICAgICAgICAgZW46IGAke21hdGNoZXMuYWJpbGl0eX0gKGZyb20gJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9IG5vcnRoKWAsXHJcbiAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh2b24gJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9IG5vcmRlbilgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5YyX44GuJHtvd25lck5pY2t944GL44KJ44CBIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5p2l6Ieq5YyX5pa5JHtvd25lck5pY2t977yMIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo64yA7IOB7J6QIFwiJHtvd25lck5pY2t9XCIsICR7bnVtYmVyfeuyiCDrtoHsqr0pYCxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfSBlbHNlIGlmIChpc1N0YXR1ZVBvc2l0aW9uS25vd24gJiYgIWlzU3RhdHVlTm9ydGgpIHtcclxuICAgICAgICAgIHRleHQgPSB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChmcm9tICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSBzb3V0aClgLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAodm9uICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSBTw7xkZW4pYCxcclxuICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOWNl+OBriR7b3duZXJOaWNrfeOBi+OCieOAgSMke251bWJlcn0pYCxcclxuICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOadpeiHquWNl+aWuSR7b3duZXJOaWNrfe+8jCMke251bWJlcn0pYCxcclxuICAgICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOuMgOyDgeyekCBcIiR7b3duZXJOaWNrfVwiLCAke251bWJlcn3rsogg64Ko7Kq9KWAsXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgYmxhbWU6IG93bmVyLFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB0ZXh0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBJY2UgUGlsbGFyIFRyYWNrZXInLFxyXG4gICAgICB0eXBlOiAnVGV0aGVyJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgc291cmNlOiAnSWNlIFBpbGxhcicsIGlkOiBbJzAwMDEnLCAnMDAzOSddIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5waWxsYXJJZFRvT3duZXIgPz89IHt9O1xyXG4gICAgICAgIGRhdGEucGlsbGFySWRUb093bmVyW21hdGNoZXMuc291cmNlSWRdID0gbWF0Y2hlcy50YXJnZXQ7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBJY2UgUGlsbGFyIE1pc3Rha2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICdJY2UgUGlsbGFyJywgaWQ6ICc1ODlCJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmICghZGF0YS5waWxsYXJJZFRvT3duZXIpXHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIG1hdGNoZXMudGFyZ2V0ICE9PSBkYXRhLnBpbGxhcklkVG9Pd25lclttYXRjaGVzLnNvdXJjZUlkXTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBjb25zdCBwaWxsYXJPd25lciA9IGRhdGEuU2hvcnROYW1lKGRhdGEucGlsbGFySWRUb093bmVyPy5bbWF0Y2hlcy5zb3VyY2VJZF0pO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46IGAke21hdGNoZXMuYWJpbGl0eX0gKGZyb20gJHtwaWxsYXJPd25lcn0pYCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKHZvbiAke3BpbGxhck93bmVyfSlgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZGUgJHtwaWxsYXJPd25lcn0pYCxcclxuICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKCR7cGlsbGFyT3duZXJ944GL44KJKWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjmnaXoh6oke3BpbGxhck93bmVyfSlgLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo64yA7IOB7J6QIFwiJHtwaWxsYXJPd25lcn1cIilgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgR2FpbiBGaXJlIFJlc2lzdGFuY2UgRG93biBJSScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRoZSBCZWFzdGx5IFNjdWxwdHVyZSBnaXZlcyBhIDMgc2Vjb25kIGRlYnVmZiwgdGhlIFJlZ2FsIFNjdWxwdHVyZSBnaXZlcyBhIDE0cyBvbmUuXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4MzInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5maXJlID8/PSB7fTtcclxuICAgICAgICBkYXRhLmZpcmVbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIExvc2UgRmlyZSBSZXNpc3RhbmNlIERvd24gSUknLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnODMyJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuZmlyZSA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5maXJlW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgU21hbGwgTGlvbiBUZXRoZXInLFxyXG4gICAgICB0eXBlOiAnVGV0aGVyJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgc291cmNlOiAnQmVhc3RseSBTY3VscHR1cmUnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBuZXRSZWdleERlOiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ0FiYmlsZCBFaW5lcyBMw7Z3ZW4nLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBuZXRSZWdleEZyOiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ0Nyw6lhdGlvbiBMw6lvbmluZScsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgc291cmNlOiAn5Ym144KJ44KM44Gf542F5a2QJywgaWQ6ICcwMDExJyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6ICfooqvliJvpgKDnmoTni67lrZAnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zbWFsbExpb25JZFRvT3duZXIgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuc21hbGxMaW9uSWRUb093bmVyW21hdGNoZXMuc291cmNlSWQudG9VcHBlckNhc2UoKV0gPSBtYXRjaGVzLnRhcmdldDtcclxuICAgICAgICBkYXRhLnNtYWxsTGlvbk93bmVycyA/Pz0gW107XHJcbiAgICAgICAgZGF0YS5zbWFsbExpb25Pd25lcnMucHVzaChtYXRjaGVzLnRhcmdldCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBTbWFsbCBMaW9uIExpb25zYmxhemUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgc291cmNlOiAnQmVhc3RseSBTY3VscHR1cmUnLCBpZDogJzU4QjknIH0pLFxyXG4gICAgICBuZXRSZWdleERlOiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgc291cmNlOiAnQWJiaWxkIEVpbmVzIEzDtndlbicsIGlkOiAnNThCOScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBzb3VyY2U6ICdDcsOpYXRpb24gTMOpb25pbmUnLCBpZDogJzU4QjknIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgc291cmNlOiAn5Ym144KJ44KM44Gf542F5a2QJywgaWQ6ICc1OEI5JyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IHNvdXJjZTogJ+iiq+WIm+mAoOeahOeLruWtkCcsIGlkOiAnNThCOScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gRm9sa3MgYmFpdGluZyB0aGUgYmlnIGxpb24gc2Vjb25kIGNhbiB0YWtlIHRoZSBmaXJzdCBzbWFsbCBsaW9uIGhpdCxcclxuICAgICAgICAvLyBzbyBpdCdzIG5vdCBzdWZmaWNpZW50IHRvIGNoZWNrIG9ubHkgdGhlIG93bmVyLlxyXG4gICAgICAgIGlmICghZGF0YS5zbWFsbExpb25Pd25lcnMpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgY29uc3Qgb3duZXIgPSBkYXRhLnNtYWxsTGlvbklkVG9Pd25lcj8uW21hdGNoZXMuc291cmNlSWQudG9VcHBlckNhc2UoKV07XHJcbiAgICAgICAgaWYgKCFvd25lcilcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpZiAobWF0Y2hlcy50YXJnZXQgPT09IG93bmVyKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAvLyBJZiB0aGUgdGFyZ2V0IGFsc28gaGFzIGEgc21hbGwgbGlvbiB0ZXRoZXIsIHRoYXQgaXMgYWx3YXlzIGEgbWlzdGFrZS5cclxuICAgICAgICAvLyBPdGhlcndpc2UsIGl0J3Mgb25seSBhIG1pc3Rha2UgaWYgdGhlIHRhcmdldCBoYXMgYSBmaXJlIGRlYnVmZi5cclxuICAgICAgICBjb25zdCBoYXNTbWFsbExpb24gPSBkYXRhLnNtYWxsTGlvbk93bmVycy5pbmNsdWRlcyhtYXRjaGVzLnRhcmdldCk7XHJcbiAgICAgICAgY29uc3QgaGFzRmlyZURlYnVmZiA9IGRhdGEuZmlyZSAmJiBkYXRhLmZpcmVbbWF0Y2hlcy50YXJnZXRdO1xyXG5cclxuICAgICAgICBpZiAoaGFzU21hbGxMaW9uIHx8IGhhc0ZpcmVEZWJ1ZmYpIHtcclxuICAgICAgICAgIGNvbnN0IG93bmVyTmljayA9IGRhdGEuU2hvcnROYW1lKG93bmVyKTtcclxuXHJcbiAgICAgICAgICBjb25zdCBjZW50ZXJZID0gLTc1O1xyXG4gICAgICAgICAgY29uc3QgeCA9IHBhcnNlRmxvYXQobWF0Y2hlcy54KTtcclxuICAgICAgICAgIGNvbnN0IHkgPSBwYXJzZUZsb2F0KG1hdGNoZXMueSk7XHJcbiAgICAgICAgICBsZXQgZGlyT2JqID0gbnVsbDtcclxuICAgICAgICAgIGlmICh5IDwgY2VudGVyWSkge1xyXG4gICAgICAgICAgICBpZiAoeCA+IDApXHJcbiAgICAgICAgICAgICAgZGlyT2JqID0gT3V0cHV0cy5kaXJORTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgIGRpck9iaiA9IE91dHB1dHMuZGlyTlc7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoeCA+IDApXHJcbiAgICAgICAgICAgICAgZGlyT2JqID0gT3V0cHV0cy5kaXJTRTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgIGRpck9iaiA9IE91dHB1dHMuZGlyU1c7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgICBibGFtZTogb3duZXIsXHJcbiAgICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChmcm9tICR7b3duZXJOaWNrfSwgJHtkaXJPYmpbJ2VuJ119KWAsXHJcbiAgICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKHZvbiAke293bmVyTmlja30sICR7ZGlyT2JqWydkZSddfSlgLFxyXG4gICAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChkZSAke293bmVyTmlja30sICR7ZGlyT2JqWydmciddfSlgLFxyXG4gICAgICAgICAgICAgIGphOiBgJHttYXRjaGVzLmFiaWxpdHl9ICgke293bmVyTmlja33jgYvjgoksICR7ZGlyT2JqWydqYSddfSlgLFxyXG4gICAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjmnaXoh6oke293bmVyTmlja30sICR7ZGlyT2JqWydjbiddfWAsXHJcbiAgICAgICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOuMgOyDgeyekCBcIiR7b3duZXJOaWNrfVwiLCAke2Rpck9ialsna28nXX0pYCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgTm9ydGggQmlnIExpb24nLFxyXG4gICAgICB0eXBlOiAnQWRkZWRDb21iYXRhbnQnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hZGRlZENvbWJhdGFudEZ1bGwoeyBuYW1lOiAnUmVnYWwgU2N1bHB0dXJlJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHkgPSBwYXJzZUZsb2F0KG1hdGNoZXMueSk7XHJcbiAgICAgICAgY29uc3QgY2VudGVyWSA9IC03NTtcclxuICAgICAgICBpZiAoeSA8IGNlbnRlclkpXHJcbiAgICAgICAgICBkYXRhLm5vcnRoQmlnTGlvbiA9IG1hdGNoZXMuaWQudG9VcHBlckNhc2UoKTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIEJpZyBMaW9uIEtpbmdzYmxhemUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICdSZWdhbCBTY3VscHR1cmUnLCBpZDogJzRGOUUnIH0pLFxyXG4gICAgICBuZXRSZWdleERlOiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICdBYmJpbGQgZWluZXMgZ3Jvw59lbiBMw7Z3ZW4nLCBpZDogJzRGOUUnIH0pLFxyXG4gICAgICBuZXRSZWdleEZyOiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICdjcsOpYXRpb24gbMOpb25pbmUgcm95YWxlJywgaWQ6ICc0RjlFJyB9KSxcclxuICAgICAgbmV0UmVnZXhKYTogTmV0UmVnZXhlcy5hYmlsaXR5KHsgc291cmNlOiAn5Ym144KJ44KM44Gf542F5a2Q546LJywgaWQ6ICc0RjlFJyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5hYmlsaXR5KHsgc291cmNlOiAn6KKr5Yib6YCg55qE54uu5a2Q546LJywgaWQ6ICc0RjlFJyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBjb25zdCBzaW5nbGVUYXJnZXQgPSBtYXRjaGVzLnR5cGUgPT09ICcyMSc7XHJcbiAgICAgICAgY29uc3QgaGFzRmlyZURlYnVmZiA9IGRhdGEuZmlyZSAmJiBkYXRhLmZpcmVbbWF0Y2hlcy50YXJnZXRdO1xyXG5cclxuICAgICAgICAvLyBTdWNjZXNzIGlmIG9ubHkgb25lIHBlcnNvbiB0YWtlcyBpdCBhbmQgdGhleSBoYXZlIG5vIGZpcmUgZGVidWZmLlxyXG4gICAgICAgIGlmIChzaW5nbGVUYXJnZXQgJiYgIWhhc0ZpcmVEZWJ1ZmYpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIGNvbnN0IG5vcnRoQmlnTGlvbjogTG9jYWxlVGV4dCA9IHtcclxuICAgICAgICAgIGVuOiAnbm9ydGggYmlnIGxpb24nLFxyXG4gICAgICAgICAgZGU6ICdOb3JkZW0sIGdyb8OfZXIgTMO2d2UnLFxyXG4gICAgICAgICAgamE6ICflpKfjg6njgqTjgqrjg7Mo5YyXKScsXHJcbiAgICAgICAgICBjbjogJ+WMl+aWueWkp+eLruWtkCcsXHJcbiAgICAgICAgICBrbzogJ+u2geyqvSDtgbAg7IKs7J6QJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IHNvdXRoQmlnTGlvbjogTG9jYWxlVGV4dCA9IHtcclxuICAgICAgICAgIGVuOiAnc291dGggYmlnIGxpb24nLFxyXG4gICAgICAgICAgZGU6ICdTw7xkZW4sIGdyb8OfZXIgTMO2d2UnLFxyXG4gICAgICAgICAgamE6ICflpKfjg6njgqTjgqrjg7Mo5Y2XKScsXHJcbiAgICAgICAgICBjbjogJ+WNl+aWueWkp+eLruWtkCcsXHJcbiAgICAgICAgICBrbzogJ+uCqOyqvSDtgbAg7IKs7J6QJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IHNoYXJlZDogTG9jYWxlVGV4dCA9IHtcclxuICAgICAgICAgIGVuOiAnc2hhcmVkJyxcclxuICAgICAgICAgIGRlOiAnZ2V0ZWlsdCcsXHJcbiAgICAgICAgICBqYTogJ+mHjeOBreOBnycsXHJcbiAgICAgICAgICBjbjogJ+mHjeWPoCcsXHJcbiAgICAgICAgICBrbzogJ+qwmeydtCDrp57snYwnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgZmlyZURlYnVmZjogTG9jYWxlVGV4dCA9IHtcclxuICAgICAgICAgIGVuOiAnaGFkIGZpcmUnLFxyXG4gICAgICAgICAgZGU6ICdoYXR0ZSBGZXVlcicsXHJcbiAgICAgICAgICBqYTogJ+eCjuS7mOOBjScsXHJcbiAgICAgICAgICBjbjogJ+eBq0RlYnVmZicsXHJcbiAgICAgICAgICBrbzogJ+2ZlOyXvCDrlJTrsoTtlIQg67Cb7J2MJyxcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBjb25zdCBsYWJlbHMgPSBbXTtcclxuICAgICAgICBjb25zdCBsYW5nOiBMYW5nID0gZGF0YS5vcHRpb25zLlBhcnNlckxhbmd1YWdlO1xyXG5cclxuICAgICAgICBpZiAoZGF0YS5ub3J0aEJpZ0xpb24pIHtcclxuICAgICAgICAgIGlmIChkYXRhLm5vcnRoQmlnTGlvbiA9PT0gbWF0Y2hlcy5zb3VyY2VJZClcclxuICAgICAgICAgICAgbGFiZWxzLnB1c2gobm9ydGhCaWdMaW9uW2xhbmddID8/IG5vcnRoQmlnTGlvblsnZW4nXSk7XHJcbiAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIGxhYmVscy5wdXNoKHNvdXRoQmlnTGlvbltsYW5nXSA/PyBzb3V0aEJpZ0xpb25bJ2VuJ10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXNpbmdsZVRhcmdldClcclxuICAgICAgICAgIGxhYmVscy5wdXNoKHNoYXJlZFtsYW5nXSA/PyBzaGFyZWRbJ2VuJ10pO1xyXG4gICAgICAgIGlmIChoYXNGaXJlRGVidWZmKVxyXG4gICAgICAgICAgbGFiZWxzLnB1c2goZmlyZURlYnVmZltsYW5nXSA/PyBmaXJlRGVidWZmWydlbiddKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBgJHttYXRjaGVzLmFiaWxpdHl9ICgke2xhYmVscy5qb2luKCcsICcpfSlgLFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIC8vIDU4OUEgPSBJY2UgUGlsbGFyIChwcm9taXNlIHNoaXZhIHBoYXNlKVxyXG4gICAgICAvLyA1OEI2ID0gUGFsbSBPZiBUZW1wZXJhbmNlIChwcm9taXNlIHN0YXR1ZSBoYW5kKVxyXG4gICAgICAvLyA1OEI3ID0gTGFzZXIgRXllIChwcm9taXNlIGxpb24gcGhhc2UpXHJcbiAgICAgIC8vIDU4QzEgPSBEYXJrZXN0IERhbmNlIChvcmFjbGUgdGFuayBqdW1wICsga25vY2tiYWNrIGluIGJlZ2lubmluZyBhbmQgdHJpcGxlIGFwb2MpXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc1ODlBJywgJzU4QjYnLCAnNThCNycsICc1OEMxJ10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIE9yYWNsZSBTaGFkb3dleWUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc1OEQyJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVSZXN1cnJlY3Rpb24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxTiBFZGVuXFwncyBUaHVuZGVyIElJSSc6ICc0NEVEJyxcclxuICAgICdFMU4gRWRlblxcJ3MgQmxpenphcmQgSUlJJzogJzQ0RUMnLFxyXG4gICAgJ0UxTiBQdXJlIEJlYW0nOiAnM0Q5RScsXHJcbiAgICAnRTFOIFBhcmFkaXNlIExvc3QnOiAnM0RBMCcsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTFOIEVkZW5cXCdzIEZsYXJlJzogJzNEOTcnLFxyXG4gICAgJ0UxTiBQdXJlIExpZ2h0JzogJzNEQTMnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRTFOIEZpcmUgSUlJJzogJzQ0RUInLFxyXG4gICAgJ0UxTiBWaWNlIE9mIFZhbml0eSc6ICc0NEU3JywgLy8gdGFuayBsYXNlcnNcclxuICAgICdFMU4gVmljZSBPZiBBcGF0aHknOiAnNDRFOCcsIC8vIGRwcyBwdWRkbGVzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IGZhaWxpbmcgdG8gaW50ZXJydXB0IE1hbmEgQm9vc3QgKDNEOEQpXHJcbi8vIFRPRE86IGZhaWxpbmcgdG8gcGFzcyBoZWFsZXIgZGVidWZmP1xyXG4vLyBUT0RPOiB3aGF0IGhhcHBlbnMgaWYgeW91IGRvbid0IGtpbGwgYSBtZXRlb3IgZHVyaW5nIGZvdXIgb3Jicz9cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZVJlc3VycmVjdGlvblNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTFTIEVkZW5cXCdzIFRodW5kZXIgSUlJJzogJzQ0RjcnLFxyXG4gICAgJ0UxUyBFZGVuXFwncyBCbGl6emFyZCBJSUknOiAnNDRGNicsXHJcbiAgICAnRTFTIEVkZW5cXCdzIFJlZ2FpbmVkIEJsaXp6YXJkIElJSSc6ICc0NEZBJyxcclxuICAgICdFMVMgUHVyZSBCZWFtIFRyaWRlbnQgMSc6ICczRDgzJyxcclxuICAgICdFMVMgUHVyZSBCZWFtIFRyaWRlbnQgMic6ICczRDg0JyxcclxuICAgICdFMVMgUGFyYWRpc2UgTG9zdCc6ICczRDg3JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFMVMgRWRlblxcJ3MgRmxhcmUnOiAnM0Q3MycsXHJcbiAgICAnRTFTIFB1cmUgTGlnaHQnOiAnM0Q4QScsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFMVMgRmlyZS9UaHVuZGVyIElJSSc6ICc0NEZCJyxcclxuICAgICdFMVMgUHVyZSBCZWFtIFNpbmdsZSc6ICczRDgxJyxcclxuICAgICdFMVMgVmljZSBPZiBWYW5pdHknOiAnNDRGMScsIC8vIHRhbmsgbGFzZXJzXHJcbiAgICAnRTFTIFZpY2Ugb2YgQXBhdGh5JzogJzQ0RjInLCAvLyBkcHMgcHVkZGxlc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IHNoYWRvd2V5ZSBmYWlsdXJlICh0b3AgbGluZSBmYWlsLCBib3R0b20gbGluZSBzdWNjZXNzLCBlZmZlY3QgdGhlcmUgdG9vKVxyXG4vLyBbMTY6MTc6MzUuOTY2XSAxNjo0MDAxMTBGRTpWb2lkd2Fsa2VyOjQwQjc6U2hhZG93ZXllOjEwNjEyMzQ1OlRpbmkgUG91dGluaTpGOjEwMDAwOjEwMDE5MEY6XHJcbi8vIFsxNjoxNzozNS45NjZdIDE2OjQwMDExMEZFOlZvaWR3YWxrZXI6NDBCNzpTaGFkb3dleWU6MTA2Nzg5MEE6UG90YXRvIENoaXBweToxOjA6MUM6ODAwMDpcclxuLy8gZ2FpbnMgdGhlIGVmZmVjdCBvZiBQZXRyaWZpY2F0aW9uIGZyb20gVm9pZHdhbGtlciBmb3IgMTAuMDAgU2Vjb25kcy5cclxuLy8gVE9ETzogcHVkZGxlIGZhaWx1cmU/XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNHYXRlRGVzY2VudCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTJOIERvb212b2lkIFNsaWNlcic6ICczRTNDJyxcclxuICAgICdFMk4gRG9vbXZvaWQgR3VpbGxvdGluZSc6ICczRTNCJyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTJOIE55eCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzNFM0QnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdCb29wZWQnLFxyXG4gICAgICAgICAgICBkZTogJ055eCBiZXLDvGhydCcsXHJcbiAgICAgICAgICAgIGZyOiAnTWFsdXMgZGUgZMOpZ8OidHMnLFxyXG4gICAgICAgICAgICBqYTogJ+mbkemtmuOBq+W9k+OBn+OCiycsXHJcbiAgICAgICAgICAgIGNuOiAn5ZCD5aS05LqGJyxcclxuICAgICAgICAgICAga286ICfri4nsiqQnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBzaGFkb3dleWUgZmFpbHVyZVxyXG4vLyBUT0RPOiBFbXB0eSBIYXRlICgzRTU5LzNFNUEpIGhpdHMgZXZlcnlib2R5LCBzbyBoYXJkIHRvIHRlbGwgYWJvdXQga25vY2tiYWNrXHJcbi8vIFRPRE86IG1heWJlIG1hcmsgaGVsbCB3aW5kIHBlb3BsZSB3aG8gZ290IGNsaXBwZWQgYnkgc3RhY2s/XHJcbi8vIFRPRE86IG1pc3NpbmcgcHVkZGxlcz9cclxuLy8gVE9ETzogbWlzc2luZyBsaWdodC9kYXJrIGNpcmNsZSBzdGFja1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZURlc2NlbnRTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UyUyBEb29tdm9pZCBTbGljZXInOiAnM0U1MCcsXHJcbiAgICAnRTNTIEVtcHR5IFJhZ2UnOiAnM0U2QycsXHJcbiAgICAnRTNTIERvb212b2lkIEd1aWxsb3RpbmUnOiAnM0U0RicsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFMlMgRG9vbXZvaWQgQ2xlYXZlcic6ICczRTY0JyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTJTIFNoYWRvd2V5ZScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFN0b25lIEN1cnNlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc1ODknIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UyUyBOeXgnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczRTUxJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQm9vcGVkJyxcclxuICAgICAgICAgICAgZGU6ICdOeXggYmVyw7xocnQnLFxyXG4gICAgICAgICAgICBmcjogJ01hbHVzIGRlIGTDqWfDonRzJyxcclxuICAgICAgICAgICAgamE6ICfpm5HprZrjgavlvZPjgZ/jgosnLFxyXG4gICAgICAgICAgICBjbjogJ+WQg+WktOS6hicsXHJcbiAgICAgICAgICAgIGtvOiAn64uJ7IqkJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVJbnVuZGF0aW9uLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFM04gTW9uc3RlciBXYXZlIDEnOiAnM0ZDQScsXHJcbiAgICAnRTNOIE1vbnN0ZXIgV2F2ZSAyJzogJzNGRTknLFxyXG4gICAgJ0UzTiBNYWVsc3Ryb20nOiAnM0ZEOScsXHJcbiAgICAnRTNOIFN3aXJsaW5nIFRzdW5hbWknOiAnM0ZENScsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTNOIFRlbXBvcmFyeSBDdXJyZW50IDEnOiAnM0ZDRScsXHJcbiAgICAnRTNOIFRlbXBvcmFyeSBDdXJyZW50IDInOiAnM0ZDRCcsXHJcbiAgICAnRTNOIFNwaW5uaW5nIERpdmUnOiAnM0ZEQicsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFM04gUmlwIEN1cnJlbnQnOiAnM0ZDNycsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IFNjb3VyaW5nIFRzdW5hbWkgKDNDRTApIG9uIHNvbWVib2R5IG90aGVyIHRoYW4gdGFyZ2V0XHJcbi8vIFRPRE86IFN3ZWVwaW5nIFRzdW5hbWkgKDNGRjUpIG9uIHNvbWVib2R5IG90aGVyIHRoYW4gdGFua3NcclxuLy8gVE9ETzogUmlwIEN1cnJlbnQgKDNGRTAsIDNGRTEpIG9uIHNvbWVib2R5IG90aGVyIHRoYW4gdGFyZ2V0L3RhbmtzXHJcbi8vIFRPRE86IEJvaWxlZCBBbGl2ZSAoNDAwNikgaXMgZmFpbGluZyBwdWRkbGVzPz8/XHJcbi8vIFRPRE86IGZhaWxpbmcgdG8gY2xlYW5zZSBTcGxhc2hpbmcgV2F0ZXJzXHJcbi8vIFRPRE86IGRvZXMgZ2V0dGluZyBoaXQgYnkgdW5kZXJzZWEgcXVha2UgY2F1c2UgYW4gYWJpbGl0eT9cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZUludW5kYXRpb25TYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UzUyBNb25zdGVyIFdhdmUgMSc6ICczRkU1JyxcclxuICAgICdFM1MgTW9uc3RlciBXYXZlIDInOiAnM0ZFOScsXHJcbiAgICAnRTNTIE1hZWxzdHJvbSc6ICczRkZCJyxcclxuICAgICdFM1MgU3dpcmxpbmcgVHN1bmFtaSc6ICczRkY0JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFM1MgVGVtcG9yYXJ5IEN1cnJlbnQgMSc6ICczRkVBJyxcclxuICAgICdFM1MgVGVtcG9yYXJ5IEN1cnJlbnQgMic6ICczRkVCJyxcclxuICAgICdFM1MgVGVtcG9yYXJ5IEN1cnJlbnQgMyc6ICczRkVDJyxcclxuICAgICdFM1MgVGVtcG9yYXJ5IEN1cnJlbnQgNCc6ICczRkVEJyxcclxuICAgICdFM1MgU3Bpbm5pbmcgRGl2ZSc6ICczRkZEJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZVNlcHVsdHVyZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTROIFdlaWdodCBvZiB0aGUgTGFuZCc6ICc0MEVCJyxcclxuICAgICdFNE4gRXZpbCBFYXJ0aCc6ICc0MEVGJyxcclxuICAgICdFNE4gQWZ0ZXJzaG9jayAxJzogJzQxQjQnLFxyXG4gICAgJ0U0TiBBZnRlcnNob2NrIDInOiAnNDBGMCcsXHJcbiAgICAnRTROIEV4cGxvc2lvbiAxJzogJzQwRUQnLFxyXG4gICAgJ0U0TiBFeHBsb3Npb24gMic6ICc0MEY1JyxcclxuICAgICdFNE4gTGFuZHNsaWRlJzogJzQxMUInLFxyXG4gICAgJ0U0TiBSaWdodHdhcmQgTGFuZHNsaWRlJzogJzQxMDAnLFxyXG4gICAgJ0U0TiBMZWZ0d2FyZCBMYW5kc2xpZGUnOiAnNDBGRicsXHJcbiAgICAnRTROIE1hc3NpdmUgTGFuZHNsaWRlJzogJzQwRkMnLFxyXG4gICAgJ0U0TiBTZWlzbWljIFdhdmUnOiAnNDBGMycsXHJcbiAgICAnRTROIEZhdWx0IExpbmUnOiAnNDEwMScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGZhdWx0TGluZVRhcmdldD86IHN0cmluZztcclxufVxyXG5cclxuLy8gVE9ETzogY291bGQgdHJhY2sgcGVvcGxlIGdldCBoaXR0aW5nIGJ5IG1hcmtlcnMgdGhleSBzaG91bGRuJ3RcclxuLy8gVE9ETzogY291bGQgdHJhY2sgbm9uLXRhbmtzIGdldHRpbmcgaGl0IGJ5IHRhbmtidXN0ZXJzLCBtZWdhbGl0aHNcclxuLy8gVE9ETzogY291bGQgdHJhY2sgbm9uLXRhcmdldCBnZXR0aW5nIGhpdCBieSB0YW5rYnVzdGVyXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNHYXRlU2VwdWx0dXJlU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFNFMgV2VpZ2h0IG9mIHRoZSBMYW5kJzogJzQxMDgnLFxyXG4gICAgJ0U0UyBFdmlsIEVhcnRoJzogJzQxMEMnLFxyXG4gICAgJ0U0UyBBZnRlcnNob2NrIDEnOiAnNDFCNScsXHJcbiAgICAnRTRTIEFmdGVyc2hvY2sgMic6ICc0MTBEJyxcclxuICAgICdFNFMgRXhwbG9zaW9uJzogJzQxMEEnLFxyXG4gICAgJ0U0UyBMYW5kc2xpZGUnOiAnNDExQicsXHJcbiAgICAnRTRTIFJpZ2h0d2FyZCBMYW5kc2xpZGUnOiAnNDExRCcsXHJcbiAgICAnRTRTIExlZnR3YXJkIExhbmRzbGlkZSc6ICc0MTFDJyxcclxuICAgICdFNFMgTWFzc2l2ZSBMYW5kc2xpZGUgMSc6ICc0MTE4JyxcclxuICAgICdFNFMgTWFzc2l2ZSBMYW5kc2xpZGUgMic6ICc0MTE5JyxcclxuICAgICdFNFMgU2Vpc21pYyBXYXZlJzogJzQxMTAnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0U0UyBEdWFsIEVhcnRoZW4gRmlzdHMgMSc6ICc0MTM1JyxcclxuICAgICdFNFMgRHVhbCBFYXJ0aGVuIEZpc3RzIDInOiAnNDY4NycsXHJcbiAgICAnRTRTIFBsYXRlIEZyYWN0dXJlJzogJzQzRUEnLFxyXG4gICAgJ0U0UyBFYXJ0aGVuIEZpc3QgMSc6ICc0M0NBJyxcclxuICAgICdFNFMgRWFydGhlbiBGaXN0IDInOiAnNDNDOScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0U0UyBGYXVsdCBMaW5lIENvbGxlY3QnLFxyXG4gICAgICB0eXBlOiAnU3RhcnRzVXNpbmcnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnNDExRScsIHNvdXJjZTogJ1RpdGFuJyB9KSxcclxuICAgICAgbmV0UmVnZXhEZTogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnNDExRScsIHNvdXJjZTogJ1RpdGFuJyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnNDExRScsIHNvdXJjZTogJ1RpdGFuJyB9KSxcclxuICAgICAgbmV0UmVnZXhKYTogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnNDExRScsIHNvdXJjZTogJ+OCv+OCpOOCv+ODsycgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzQxMUUnLCBzb3VyY2U6ICfms7DlnaYnIH0pLFxyXG4gICAgICBuZXRSZWdleEtvOiBOZXRSZWdleGVzLnN0YXJ0c1VzaW5nKHsgaWQ6ICc0MTFFJywgc291cmNlOiAn7YOA7J207YOEJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuZmF1bHRMaW5lVGFyZ2V0ID0gbWF0Y2hlcy50YXJnZXQ7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U0UyBGYXVsdCBMaW5lJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNDExRScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5mYXVsdExpbmVUYXJnZXQgIT09IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUnVuIE92ZXInLFxyXG4gICAgICAgICAgICBkZTogJ1d1cmRlIMO8YmVyZmFocmVuJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIMOpY3Jhc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfnqoHpgLLjgavlvZPjgZ/jgosnLFxyXG4gICAgICAgICAgICBjbjogJ+iiq+eivuS6hicsXHJcbiAgICAgICAgICAgIGtvOiAn64+M7KeEIOunnuydjCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNPcmI/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgY2xvdWRNYXJrZXJzPzogc3RyaW5nW107XHJcbn1cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1ZlcnNlRnVsbWluYXRpb24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U1TiBJbXBhY3QnOiAnNEUzQScsIC8vIFN0cmF0b3NwZWFyIGxhbmRpbmcgQW9FXHJcbiAgICAnRTVOIExpZ2h0bmluZyBCb2x0JzogJzRCOUMnLCAvLyBTdG9ybWNsb3VkIHN0YW5kYXJkIGF0dGFja1xyXG4gICAgJ0U1TiBHYWxsb3AnOiAnNEI5NycsIC8vIFNpZGV3YXlzIGFkZCBjaGFyZ2VcclxuICAgICdFNU4gU2hvY2sgU3RyaWtlJzogJzRCQTEnLCAvLyBTbWFsbCBBb0UgY2lyY2xlcyBkdXJpbmcgVGh1bmRlcnN0b3JtXHJcbiAgICAnRTVOIFZvbHQgU3RyaWtlJzogJzRDRjInLCAvLyBMYXJnZSBBb0UgY2lyY2xlcyBkdXJpbmcgVGh1bmRlcnN0b3JtXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTVOIEp1ZGdtZW50IEpvbHQnOiAnNEI4RicsIC8vIFN0cmF0b3NwZWFyIGV4cGxvc2lvbnNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIFRoaXMgaGFwcGVucyB3aGVuIGEgcGxheWVyIGdldHMgNCsgc3RhY2tzIG9mIG9yYnMuIERvbid0IGJlIGdyZWVkeSFcclxuICAgICAgaWQ6ICdFNU4gU3RhdGljIENvbmRlbnNhdGlvbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QjUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBIZWxwZXIgZm9yIG9yYiBwaWNrdXAgZmFpbHVyZXNcclxuICAgICAgaWQ6ICdFNU4gT3JiIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOEI0JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzT3JiID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNU4gT3JiIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnOEI0JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzT3JiID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVOIERpdmluZSBKdWRnZW1lbnQgVm9sdHMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QjlBJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNPcmIgfHwgIWRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAobm8gb3JiKWAsXHJcbiAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9IChrZWluIE9yYilgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAocGFzIGQnb3JiZSlgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6Zu3546J54Sh44GXKWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjmsqHlkIPnkIMpYCxcclxuICAgICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOq1rOyKrCDslYjrqLnsnYwpYCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVOIFN0b3JtY2xvdWQgVGFyZ2V0IFRyYWNraW5nJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMDZFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuY2xvdWRNYXJrZXJzID8/PSBbXTtcclxuICAgICAgICBkYXRhLmNsb3VkTWFya2Vycy5wdXNoKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFRoaXMgYWJpbGl0eSBpcyBzZWVuIG9ubHkgaWYgcGxheWVycyBzdGFja2VkIHRoZSBjbG91ZHMgaW5zdGVhZCBvZiBzcHJlYWRpbmcgdGhlbS5cclxuICAgICAgaWQ6ICdFNU4gVGhlIFBhcnRpbmcgQ2xvdWRzJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEI5RCcsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAzMCxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgZGF0YS5jbG91ZE1hcmtlcnMgPz8gW10pIHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgICAgYmxhbWU6IG5hbWUsXHJcbiAgICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoY2xvdWRzIHRvbyBjbG9zZSlgLFxyXG4gICAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9IChXb2xrZW4genUgbmFoZSlgLFxyXG4gICAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChudWFnZXMgdHJvcCBwcm9jaGVzKWAsXHJcbiAgICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOmbsui/keOBmeOBjilgLFxyXG4gICAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjpm7fkupHph43lj6ApYCxcclxuICAgICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6rWs66aE7J20IOuEiOustCDqsIDquYzsm4ApYCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNU4gU3Rvcm1jbG91ZCBjbGVhbnVwJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMDZFJyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAzMCwgLy8gU3Rvcm1jbG91ZHMgcmVzb2x2ZSB3ZWxsIGJlZm9yZSB0aGlzLlxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGVsZXRlIGRhdGEuY2xvdWRNYXJrZXJzO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzT3JiPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGhhdGVkPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGNsb3VkTWFya2Vycz86IHN0cmluZ1tdO1xyXG59XHJcblxyXG4vLyBUT0RPOiBpcyB0aGVyZSBhIGRpZmZlcmVudCBhYmlsaXR5IGlmIHRoZSBzaGllbGQgZHV0eSBhY3Rpb24gaXNuJ3QgdXNlZCBwcm9wZXJseT9cclxuLy8gVE9ETzogaXMgdGhlcmUgYW4gYWJpbGl0eSBmcm9tIFJhaWRlbiAodGhlIGJpcmQpIGlmIHlvdSBnZXQgZWF0ZW4/XHJcbi8vIFRPRE86IG1heWJlIGNoYWluIGxpZ2h0bmluZyB3YXJuaW5nIGlmIHlvdSBnZXQgaGl0IHdoaWxlIHlvdSBoYXZlIHN5c3RlbSBzaG9jayAoOEI4KVxyXG5cclxuY29uc3Qgbm9PcmIgPSAoc3RyOiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgZW46IHN0ciArICcgKG5vIG9yYiknLFxyXG4gICAgZGU6IHN0ciArICcgKGtlaW4gT3JiKScsXHJcbiAgICBmcjogc3RyICsgJyAocGFzIGRcXCdvcmJlKScsXHJcbiAgICBqYTogc3RyICsgJyAo6Zu3546J54Sh44GXKScsXHJcbiAgICBjbjogc3RyICsgJyAo5rKh5ZCD55CDKScsXHJcbiAgICBrbzogc3RyICsgJyAo6rWs7IqsIOyXhuydjCknLFxyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZUZ1bG1pbmF0aW9uU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFNVMgSW1wYWN0JzogJzRFM0InLCAvLyBTdHJhdG9zcGVhciBsYW5kaW5nIEFvRVxyXG4gICAgJ0U1UyBHYWxsb3AnOiAnNEJCNCcsIC8vIFNpZGV3YXlzIGFkZCBjaGFyZ2VcclxuICAgICdFNVMgU2hvY2sgU3RyaWtlJzogJzRCQzEnLCAvLyBTbWFsbCBBb0UgY2lyY2xlcyBkdXJpbmcgVGh1bmRlcnN0b3JtXHJcbiAgICAnRTVTIFN0ZXBwZWQgTGVhZGVyIFR3aXN0ZXInOiAnNEJDNycsIC8vIFR3aXN0ZXIgc3RlcHBlZCBsZWFkZXJcclxuICAgICdFNVMgU3RlcHBlZCBMZWFkZXIgRG9udXQnOiAnNEJDOCcsIC8vIERvbnV0IHN0ZXBwZWQgbGVhZGVyXHJcbiAgICAnRTVTIFNob2NrJzogJzRFM0QnLCAvLyBIYXRlZCBvZiBMZXZpbiBTdG9ybWNsb3VkLWNsZWFuc2FibGUgZXhwbG9kaW5nIGRlYnVmZlxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0U1UyBKdWRnbWVudCBKb2x0JzogJzRCQTcnLCAvLyBTdHJhdG9zcGVhciBleHBsb3Npb25zXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFNVMgVm9sdCBTdHJpa2UgRG91YmxlJzogJzRCQzMnLCAvLyBMYXJnZSBBb0UgY2lyY2xlcyBkdXJpbmcgVGh1bmRlcnN0b3JtXHJcbiAgICAnRTVTIENyaXBwbGluZyBCbG93JzogJzRCQ0EnLFxyXG4gICAgJ0U1UyBDaGFpbiBMaWdodG5pbmcgRG91YmxlJzogJzRCQzUnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gSGVscGVyIGZvciBvcmIgcGlja3VwIGZhaWx1cmVzXHJcbiAgICAgIGlkOiAnRTVTIE9yYiBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhCNCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc09yYiA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNPcmJbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVTIE9yYiBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzhCNCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc09yYiA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNPcmJbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1UyBEaXZpbmUgSnVkZ2VtZW50IFZvbHRzJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEJCNycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzT3JiIHx8ICFkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbm9PcmIobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgVm9sdCBTdHJpa2UgT3JiJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEJDMycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzT3JiIHx8ICFkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbm9PcmIobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgRGVhZGx5IERpc2NoYXJnZSBCaWcgS25vY2tiYWNrJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEJCMicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzT3JiIHx8ICFkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbm9PcmIobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgTGlnaHRuaW5nIEJvbHQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QkI5JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gSGF2aW5nIGEgbm9uLWlkZW1wb3RlbnQgY29uZGl0aW9uIGZ1bmN0aW9uIGlzIGEgYml0IDxfPFxyXG4gICAgICAgIC8vIE9ubHkgY29uc2lkZXIgbGlnaHRuaW5nIGJvbHQgZGFtYWdlIGlmIHlvdSBoYXZlIGEgZGVidWZmIHRvIGNsZWFyLlxyXG4gICAgICAgIGlmICghZGF0YS5oYXRlZCB8fCAhZGF0YS5oYXRlZFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuXHJcbiAgICAgICAgZGVsZXRlIGRhdGEuaGF0ZWRbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVTIEhhdGVkIG9mIExldmluJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMEQyJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGF0ZWQgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGF0ZWRbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVTIFN0b3JtY2xvdWQgVGFyZ2V0IFRyYWNraW5nJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMDZFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuY2xvdWRNYXJrZXJzID8/PSBbXTtcclxuICAgICAgICBkYXRhLmNsb3VkTWFya2Vycy5wdXNoKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFRoaXMgYWJpbGl0eSBpcyBzZWVuIG9ubHkgaWYgcGxheWVycyBzdGFja2VkIHRoZSBjbG91ZHMgaW5zdGVhZCBvZiBzcHJlYWRpbmcgdGhlbS5cclxuICAgICAgaWQ6ICdFNVMgVGhlIFBhcnRpbmcgQ2xvdWRzJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEJCQScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAzMCxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgZGF0YS5jbG91ZE1hcmtlcnMgPz8gW10pIHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgICAgYmxhbWU6IG5hbWUsXHJcbiAgICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoY2xvdWRzIHRvbyBjbG9zZSlgLFxyXG4gICAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9IChXb2xrZW4genUgbmFoZSlgLFxyXG4gICAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChudWFnZXMgdHJvcCBwcm9jaGVzKWAsXHJcbiAgICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOmbsui/keOBmeOBjilgLFxyXG4gICAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjpm7fkupHph43lj6ApYCxcclxuICAgICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6rWs66aE7J20IOuEiOustCDqsIDquYzsm4ApYCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgU3Rvcm1jbG91ZCBjbGVhbnVwJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHsgaWQ6ICcwMDZFJyB9KSxcclxuICAgICAgLy8gU3Rvcm1jbG91ZHMgcmVzb2x2ZSB3ZWxsIGJlZm9yZSB0aGlzLlxyXG4gICAgICBkZWxheVNlY29uZHM6IDMwLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGVsZXRlIGRhdGEuY2xvdWRNYXJrZXJzO1xyXG4gICAgICAgIGRlbGV0ZSBkYXRhLmhhdGVkO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VGdXJvcixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTZOIFRob3Jucyc6ICc0QkRBJywgLy8gQW9FIG1hcmtlcnMgYWZ0ZXIgRW51bWVyYXRpb25cclxuICAgICdFNk4gRmVyb3N0b3JtIDEnOiAnNEJERCcsXHJcbiAgICAnRTZOIEZlcm9zdG9ybSAyJzogJzRCRTUnLFxyXG4gICAgJ0U2TiBTdG9ybSBPZiBGdXJ5IDEnOiAnNEJFMCcsIC8vIENpcmNsZSBBb0UgZHVyaW5nIHRldGhlcnMtLUdhcnVkYVxyXG4gICAgJ0U2TiBTdG9ybSBPZiBGdXJ5IDInOiAnNEJFNicsIC8vIENpcmNsZSBBb0UgZHVyaW5nIHRldGhlcnMtLVJha3RhcGFrc2FcclxuICAgICdFNk4gRXhwbG9zaW9uJzogJzRCRTInLCAvLyBBb0UgY2lyY2xlcywgR2FydWRhIG9yYnNcclxuICAgICdFNk4gSGVhdCBCdXJzdCc6ICc0QkVDJyxcclxuICAgICdFNk4gQ29uZmxhZyBTdHJpa2UnOiAnNEJFRScsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0VcclxuICAgICdFNk4gU3Bpa2UgT2YgRmxhbWUnOiAnNEJGMCcsIC8vIE9yYiBleHBsb3Npb25zIGFmdGVyIFN0cmlrZSBTcGFya1xyXG4gICAgJ0U2TiBSYWRpYW50IFBsdW1lJzogJzRCRjInLFxyXG4gICAgJ0U2TiBFcnVwdGlvbic6ICc0QkY0JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFNk4gVmFjdXVtIFNsaWNlJzogJzRCRDUnLCAvLyBEYXJrIGxpbmUgQW9FIGZyb20gR2FydWRhXHJcbiAgICAnRTZOIERvd25idXJzdCc6ICc0QkRCJywgLy8gQmx1ZSBrbm9ja2JhY2sgY2lyY2xlLiBBY3R1YWwga25vY2tiYWNrIGlzIHVua25vd24gYWJpbGl0eSA0QzIwXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgIC8vIEtpbGxzIG5vbi10YW5rcyB3aG8gZ2V0IGhpdCBieSBpdC5cclxuICAgICdFNk4gSW5zdGFudCBJbmNpbmVyYXRpb24nOiAnNEJFRCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBTaW1wbGVPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBjaGVjayB0ZXRoZXJzIGJlaW5nIGN1dCAod2hlbiB0aGV5IHNob3VsZG4ndClcclxuLy8gVE9ETzogY2hlY2sgZm9yIGNvbmN1c3NlZCBkZWJ1ZmZcclxuLy8gVE9ETzogY2hlY2sgZm9yIHRha2luZyB0YW5rYnVzdGVyIHdpdGggbGlnaHRoZWFkZWRcclxuLy8gVE9ETzogY2hlY2sgZm9yIG9uZSBwZXJzb24gdGFraW5nIG11bHRpcGxlIFN0b3JtIE9mIEZ1cnkgVGV0aGVycyAoNEMwMS80QzA4KVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogU2ltcGxlT29wc3lUcmlnZ2VyU2V0ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VGdXJvclNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAvLyBJdCdzIGNvbW1vbiB0byBqdXN0IGlnbm9yZSBmdXRib2wgbWVjaGFuaWNzLCBzbyBkb24ndCB3YXJuIG9uIFN0cmlrZSBTcGFyay5cclxuICAgIC8vICdTcGlrZSBPZiBGbGFtZSc6ICc0QzEzJywgLy8gT3JiIGV4cGxvc2lvbnMgYWZ0ZXIgU3RyaWtlIFNwYXJrXHJcblxyXG4gICAgJ0U2UyBUaG9ybnMnOiAnNEJGQScsIC8vIEFvRSBtYXJrZXJzIGFmdGVyIEVudW1lcmF0aW9uXHJcbiAgICAnRTZTIEZlcm9zdG9ybSAxJzogJzRCRkQnLFxyXG4gICAgJ0U2UyBGZXJvc3Rvcm0gMic6ICc0QzA2JyxcclxuICAgICdFNlMgU3Rvcm0gT2YgRnVyeSAxJzogJzRDMDAnLCAvLyBDaXJjbGUgQW9FIGR1cmluZyB0ZXRoZXJzLS1HYXJ1ZGFcclxuICAgICdFNlMgU3Rvcm0gT2YgRnVyeSAyJzogJzRDMDcnLCAvLyBDaXJjbGUgQW9FIGR1cmluZyB0ZXRoZXJzLS1SYWt0YXBha3NhXHJcbiAgICAnRTZTIEV4cGxvc2lvbic6ICc0QzAzJywgLy8gQW9FIGNpcmNsZXMsIEdhcnVkYSBvcmJzXHJcbiAgICAnRTZTIEhlYXQgQnVyc3QnOiAnNEMxRicsXHJcbiAgICAnRTZTIENvbmZsYWcgU3RyaWtlJzogJzRDMTAnLCAvLyAyNzAtZGVncmVlIGZyb250YWwgQW9FXHJcbiAgICAnRTZTIFJhZGlhbnQgUGx1bWUnOiAnNEMxNScsXHJcbiAgICAnRTZTIEVydXB0aW9uJzogJzRDMTcnLFxyXG4gICAgJ0U2UyBXaW5kIEN1dHRlcic6ICc0QzAyJywgLy8gVGV0aGVyLWN1dHRpbmcgbGluZSBhb2VcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFNlMgVmFjdXVtIFNsaWNlJzogJzRCRjUnLCAvLyBEYXJrIGxpbmUgQW9FIGZyb20gR2FydWRhXHJcbiAgICAnRTZTIERvd25idXJzdCAxJzogJzRCRkInLCAvLyBCbHVlIGtub2NrYmFjayBjaXJjbGUgKEdhcnVkYSkuXHJcbiAgICAnRTZTIERvd25idXJzdCAyJzogJzRCRkMnLCAvLyBCbHVlIGtub2NrYmFjayBjaXJjbGUgKFJha3RhcGFrc2EpLlxyXG4gICAgJ0U2UyBNZXRlb3IgU3RyaWtlJzogJzRDMEYnLCAvLyBGcm9udGFsIGF2b2lkYWJsZSB0YW5rIGJ1c3RlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTZTIEhhbmRzIG9mIEhlbGwnOiAnNEMwW0JDXScsIC8vIFRldGhlciBjaGFyZ2VcclxuICAgICdFNlMgSGFuZHMgb2YgRmxhbWUnOiAnNEMwQScsIC8vIEZpcnN0IFRhbmtidXN0ZXJcclxuICAgICdFNlMgSW5zdGFudCBJbmNpbmVyYXRpb24nOiAnNEMwRScsIC8vIFNlY29uZCBUYW5rYnVzdGVyXHJcbiAgICAnRTZTIEJsYXplJzogJzRDMUInLCAvLyBGbGFtZSBUb3JuYWRvIENsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdFNlMgQWlyIEJ1bXAnOiAnNEJGOScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc0FzdHJhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxuICBoYXNVbWJyYWw/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbmNvbnN0IHdyb25nQnVmZiA9IChzdHI6IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBlbjogc3RyICsgJyAod3JvbmcgYnVmZiknLFxyXG4gICAgZGU6IHN0ciArICcgKGZhbHNjaGVyIEJ1ZmYpJyxcclxuICAgIGZyOiBzdHIgKyAnIChtYXV2YWlzIGJ1ZmYpJyxcclxuICAgIGphOiBzdHIgKyAnICjkuI3pganliIfjgarjg5Djg5UpJyxcclxuICAgIGNuOiBzdHIgKyAnIChCdWZm6ZSZ5LqGKScsXHJcbiAgICBrbzogc3RyICsgJyAo67KE7ZSEIO2LgOumvCknLFxyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCBub0J1ZmYgPSAoc3RyOiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgZW46IHN0ciArICcgKG5vIGJ1ZmYpJyxcclxuICAgIGRlOiBzdHIgKyAnIChrZWluIEJ1ZmYpJyxcclxuICAgIGZyOiBzdHIgKyAnIChwYXMgZGUgYnVmZiknLFxyXG4gICAgamE6IHN0ciArICcgKOODkOODleeEoeOBlyknLFxyXG4gICAgY246IHN0ciArICcgKOayoeaciUJ1ZmYpJyxcclxuICAgIGtvOiBzdHIgKyAnKOuyhO2UhCDsl4bsnYwpJyxcclxuICB9O1xyXG59O1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VJY29ub2NsYXNtLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFN04gU3R5Z2lhbiBTd29yZCc6ICc0QzU1JywgLy8gQ2lyY2xlIGdyb3VuZCBBb0VzIGFmdGVyIEZhbHNlIFR3aWxpZ2h0XHJcbiAgICAnRTdOIFN0cmVuZ3RoIEluIE51bWJlcnMgRG9udXQnOiAnNEM0QycsIC8vIExhcmdlIGRvbnV0IGdyb3VuZCBBb0VzLCBpbnRlcm1pc3Npb25cclxuICAgICdFN04gU3RyZW5ndGggSW4gTnVtYmVycyAyJzogJzRDNEQnLCAvLyBMYXJnZSBjaXJjbGUgZ3JvdW5kIEFvRXMsIGludGVybWlzc2lvblxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTdOIFN0eWdpYW4gU3Rha2UnOiAnNEMzMycsIC8vIExhc2VyIHRhbmsgYnVzdGVyLCBvdXRzaWRlIGludGVybWlzc2lvbiBwaGFzZVxyXG4gICAgJ0U1TiBTaWx2ZXIgU2hvdCc6ICc0RTdEJywgLy8gU3ByZWFkIG1hcmtlcnMsIGludGVybWlzc2lvblxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gQXN0cmFsIEVmZmVjdCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWxbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdOIEFzdHJhbCBFZmZlY3QgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWwgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQXN0cmFsW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gVW1icmFsIEVmZmVjdCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdOIFVtYnJhbCBFZmZlY3QgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QkYnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNVbWJyYWwgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzVW1icmFsW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gTGlnaHRcXCdzIENvdXJzZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc0QzNFJywgJzRDNDAnLCAnNEMyMicsICc0QzNDJywgJzRFNjMnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc1VtYnJhbCB8fCAhZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLmhhc0FzdHJhbCAmJiBkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IHdyb25nQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub0J1ZmYobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gRGFya3NcXCdzIENvdXJzZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc0QzNEJywgJzRDMjMnLCAnNEM0MScsICc0QzQzJ10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiAhZGF0YS5oYXNBc3RyYWwgfHwgIWRhdGEuaGFzQXN0cmFsW21hdGNoZXMudGFyZ2V0XTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoZGF0YS5oYXNVbWJyYWwgJiYgZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiB3cm9uZ0J1ZmYobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICAgIC8vIFRoaXMgY2FzZSBpcyBwcm9iYWJseSBpbXBvc3NpYmxlLCBhcyB0aGUgZGVidWZmIHRpY2tzIGFmdGVyIGRlYXRoLFxyXG4gICAgICAgIC8vIGJ1dCBsZWF2aW5nIGl0IGhlcmUgaW4gY2FzZSB0aGVyZSdzIHNvbWUgcmV6IG9yIGRpc2Nvbm5lY3QgdGltaW5nXHJcbiAgICAgICAgLy8gdGhhdCBjb3VsZCBsZWFkIHRvIHRoaXMuXHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub0J1ZmYobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIFRPRE86IG1pc3NpbmcgYW4gb3JiIGR1cmluZyB0b3JuYWRvIHBoYXNlXHJcbi8vIFRPRE86IGp1bXBpbmcgaW4gdGhlIHRvcm5hZG8gZGFtYWdlPz9cclxuLy8gVE9ETzogdGFraW5nIHN1bmdyYWNlKDRDODApIG9yIG1vb25ncmFjZSg0QzgyKSB3aXRoIHdyb25nIGRlYnVmZlxyXG4vLyBUT0RPOiBzdHlnaWFuIHNwZWFyL3NpbHZlciBzcGVhciB3aXRoIHRoZSB3cm9uZyBkZWJ1ZmZcclxuLy8gVE9ETzogdGFraW5nIGV4cGxvc2lvbiBmcm9tIHRoZSB3cm9uZyBDaGlhcm8vU2N1cm8gb3JiXHJcbi8vIFRPRE86IGhhbmRsZSA0Qzg5IFNpbHZlciBTdGFrZSB0YW5rYnVzdGVyIDJuZCBoaXQsIGFzIGl0J3Mgb2sgdG8gaGF2ZSB0d28gaW4uXHJcblxyXG5jb25zdCB3cm9uZ0J1ZmYgPSAoc3RyOiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgZW46IHN0ciArICcgKHdyb25nIGJ1ZmYpJyxcclxuICAgIGRlOiBzdHIgKyAnIChmYWxzY2hlciBCdWZmKScsXHJcbiAgICBmcjogc3RyICsgJyAobWF1dmFpcyBidWZmKScsXHJcbiAgICBqYTogc3RyICsgJyAo5LiN6YGp5YiH44Gq44OQ44OVKScsXHJcbiAgICBjbjogc3RyICsgJyAoQnVmZumUmeS6hiknLFxyXG4gICAga286IHN0ciArICcgKOuyhO2UhCDti4DrprwpJyxcclxuICB9O1xyXG59O1xyXG5cclxuY29uc3Qgbm9CdWZmID0gKHN0cjogc3RyaW5nKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGVuOiBzdHIgKyAnIChubyBidWZmKScsXHJcbiAgICBkZTogc3RyICsgJyAoa2VpbiBCdWZmKScsXHJcbiAgICBmcjogc3RyICsgJyAocGFzIGRlIGJ1ZmYpJyxcclxuICAgIGphOiBzdHIgKyAnICjjg5Djg5XnhKHjgZcpJyxcclxuICAgIGNuOiBzdHIgKyAnICjmsqHmnIlCdWZmKScsXHJcbiAgICBrbzogc3RyICsgJyAo67KE7ZSEIOyXhuydjCknLFxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc0FzdHJhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxuICBoYXNVbWJyYWw/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1ZlcnNlSWNvbm9jbGFzbVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTdTIFNpbHZlciBTd29yZCc6ICc0QzhFJywgLy8gZ3JvdW5kIGFvZVxyXG4gICAgJ0U3UyBPdmVyd2hlbG1pbmcgRm9yY2UnOiAnNEM3MycsIC8vIGFkZCBwaGFzZSBncm91bmQgYW9lXHJcbiAgICAnRTdTIFN0cmVuZ3RoIGluIE51bWJlcnMgMSc6ICc0QzcwJywgLy8gYWRkIGdldCB1bmRlclxyXG4gICAgJ0U3UyBTdHJlbmd0aCBpbiBOdW1iZXJzIDInOiAnNEM3MScsIC8vIGFkZCBnZXQgb3V0XHJcbiAgICAnRTdTIFBhcGVyIEN1dCc6ICc0QzdEJywgLy8gdG9ybmFkbyBncm91bmQgYW9lc1xyXG4gICAgJ0U3UyBCdWZmZXQnOiAnNEM3NycsIC8vIHRvcm5hZG8gZ3JvdW5kIGFvZXMgYWxzbz8/XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTdTIEJldHdpeHQgV29ybGRzJzogJzRDNkInLCAvLyBwdXJwbGUgZ3JvdW5kIGxpbmUgYW9lc1xyXG4gICAgJ0U3UyBDcnVzYWRlJzogJzRDNTgnLCAvLyBibHVlIGtub2NrYmFjayBjaXJjbGUgKHN0YW5kaW5nIGluIGl0KVxyXG4gICAgJ0U3UyBFeHBsb3Npb24nOiAnNEM2RicsIC8vIGRpZG4ndCBraWxsIGFuIGFkZFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTdTIFN0eWdpYW4gU3Rha2UnOiAnNEMzNCcsIC8vIExhc2VyIHRhbmsgYnVzdGVyIDFcclxuICAgICdFN1MgU2lsdmVyIFNob3QnOiAnNEM5MicsIC8vIFNwcmVhZCBtYXJrZXJzXHJcbiAgICAnRTdTIFNpbHZlciBTY291cmdlJzogJzRDOTMnLCAvLyBJY2UgbWFya2Vyc1xyXG4gICAgJ0U3UyBDaGlhcm8gU2N1cm8gRXhwbG9zaW9uIDEnOiAnNEQxNCcsIC8vIG9yYiBleHBsb3Npb25cclxuICAgICdFN1MgQ2hpYXJvIFNjdXJvIEV4cGxvc2lvbiAyJzogJzREMTUnLCAvLyBvcmIgZXhwbG9zaW9uXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBJbnRlcnJ1cHRcclxuICAgICAgaWQ6ICdFN1MgQWR2ZW50IE9mIExpZ2h0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc0QzZFJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gVE9ETzogaXMgdGhpcyBibGFtZSBjb3JyZWN0PyBkb2VzIHRoaXMgaGF2ZSBhIHRhcmdldD9cclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3UyBBc3RyYWwgRWZmZWN0IEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOEJFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQXN0cmFsID0gZGF0YS5oYXNBc3RyYWwgfHwge307XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWxbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdTIEFzdHJhbCBFZmZlY3QgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWwgPSBkYXRhLmhhc0FzdHJhbCB8fCB7fTtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdTIFVtYnJhbCBFZmZlY3QgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QkYnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNVbWJyYWwgPSBkYXRhLmhhc1VtYnJhbCB8fCB7fTtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN1MgVW1icmFsIEVmZmVjdCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbCA9IGRhdGEuaGFzVW1icmFsIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzVW1icmFsW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN1MgTGlnaHRcXCdzIENvdXJzZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc0QzYyJywgJzRDNjMnLCAnNEM2NCcsICc0QzVCJywgJzRDNUYnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc1VtYnJhbCB8fCAhZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLmhhc0FzdHJhbCAmJiBkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IHdyb25nQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub0J1ZmYobWF0Y2hlcy5hYmlsaXR5KSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN1MgRGFya3NcXCdzIENvdXJzZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc0QzY1JywgJzRDNjYnLCAnNEM2NycsICc0QzVBJywgJzRDNjAnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc0FzdHJhbCB8fCAhZGF0YS5oYXNBc3RyYWxbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLmhhc1VtYnJhbCAmJiBkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IHdyb25nQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgICAgLy8gVGhpcyBjYXNlIGlzIHByb2JhYmx5IGltcG9zc2libGUsIGFzIHRoZSBkZWJ1ZmYgdGlja3MgYWZ0ZXIgZGVhdGgsXHJcbiAgICAgICAgLy8gYnV0IGxlYXZpbmcgaXQgaGVyZSBpbiBjYXNlIHRoZXJlJ3Mgc29tZSByZXogb3IgZGlzY29ubmVjdCB0aW1pbmdcclxuICAgICAgICAvLyB0aGF0IGNvdWxkIGxlYWQgdG8gdGhpcy5cclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG5vQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3UyBDcnVzYWRlIEtub2NrYmFjaycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gNEM3NiBpcyB0aGUga25vY2tiYWNrIGRhbWFnZSwgNEM1OCBpcyB0aGUgZGFtYWdlIGZvciBzdGFuZGluZyBvbiB0aGUgcHVjay5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzRDNzYnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZVJlZnVsZ2VuY2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U4TiBCaXRpbmcgRnJvc3QnOiAnNEREQicsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIFNoaXZhXHJcbiAgICAnRThOIERyaXZpbmcgRnJvc3QnOiAnNEREQycsIC8vIFJlYXIgY29uZSBBb0UsIFNoaXZhXHJcbiAgICAnRThOIEZyaWdpZCBTdG9uZSc6ICc0RTY2JywgLy8gU21hbGwgc3ByZWFkIGNpcmNsZXMsIHBoYXNlIDFcclxuICAgICdFOE4gUmVmbGVjdGVkIEF4ZSBLaWNrJzogJzRFMDAnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThOIFJlZmxlY3RlZCBTY3l0aGUgS2ljayc6ICc0RTAxJywgLy8gRG9udXQgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThOIEZyaWdpZCBFcnVwdGlvbic6ICc0RTA5JywgLy8gU21hbGwgY2lyY2xlIEFvRSBwdWRkbGVzLCBwaGFzZSAxXHJcbiAgICAnRThOIEljaWNsZSBJbXBhY3QnOiAnNEUwQScsIC8vIExhcmdlIGNpcmNsZSBBb0UgcHVkZGxlcywgcGhhc2UgMVxyXG4gICAgJ0U4TiBBeGUgS2ljayc6ICc0REUyJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgU2hpdmFcclxuICAgICdFOE4gU2N5dGhlIEtpY2snOiAnNERFMycsIC8vIERvbnV0IEFvRSwgU2hpdmFcclxuICAgICdFOE4gUmVmbGVjdGVkIEJpdGluZyBGcm9zdCc6ICc0REZFJywgLy8gMjcwLWRlZ3JlZSBmcm9udGFsIEFvRSwgRnJvemVuIE1pcnJvclxyXG4gICAgJ0U4TiBSZWZsZWN0ZWQgRHJpdmluZyBGcm9zdCc6ICc0REZGJywgLy8gQ29uZSBBb0UsIEZyb3plbiBNaXJyb3JcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHt9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRThOIFNoaW5pbmcgQXJtb3InLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOTUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U4TiBIZWF2ZW5seSBTdHJpa2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0REQ4JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXN0b8OfZW4hJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIHBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFOE4gRnJvc3QgQXJtb3InLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBUaGluIEljZVxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMzhGJyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1NsaWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAncnVudGVyZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+a7keOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5ruR6JC9JyxcclxuICAgICAgICAgICAga286ICfrr7jrgYTrn6zsp5AhJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogcnVzaCBoaXR0aW5nIHRoZSBjcnlzdGFsXHJcbi8vIFRPRE86IGFkZHMgbm90IGJlaW5nIGtpbGxlZFxyXG4vLyBUT0RPOiB0YWtpbmcgdGhlIHJ1c2ggdHdpY2UgKHdoZW4geW91IGhhdmUgZGVidWZmKVxyXG4vLyBUT0RPOiBub3QgaGl0dGluZyB0aGUgZHJhZ29uIGZvdXIgdGltZXMgZHVyaW5nIHd5cm0ncyBsYW1lbnRcclxuLy8gVE9ETzogZGVhdGggcmVhc29ucyBmb3Igbm90IHBpY2tpbmcgdXAgcHVkZGxlXHJcbi8vIFRPRE86IG5vdCBiZWluZyBpbiB0aGUgdG93ZXIgd2hlbiB5b3Ugc2hvdWxkXHJcbi8vIFRPRE86IHBpY2tpbmcgdXAgdG9vIG1hbnkgc3RhY2tzXHJcblxyXG4vLyBOb3RlOiBCYW5pc2ggSUlJICg0REE4KSBhbmQgQmFuaXNoIElpaSBEaXZpZGVkICg0REE5KSBib3RoIGFyZSB0eXBlPTB4MTYgbGluZXMuXHJcbi8vIFRoZSBzYW1lIGlzIHRydWUgZm9yIEJhbmlzaCAoNERBNikgYW5kIEJhbmlzaCBEaXZpZGVkICg0REE3KS5cclxuLy8gSSdtIG5vdCBzdXJlIHRoaXMgbWFrZXMgYW55IHNlbnNlPyBCdXQgY2FuJ3QgdGVsbCBpZiB0aGUgc3ByZWFkIHdhcyBhIG1pc3Rha2Ugb3Igbm90LlxyXG4vLyBNYXliZSB3ZSBjb3VsZCBjaGVjayBmb3IgXCJNYWdpYyBWdWxuZXJhYmlsaXR5IFVwXCI/XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZVJlZnVsZ2VuY2VTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U4UyBCaXRpbmcgRnJvc3QnOiAnNEQ2NicsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIFNoaXZhXHJcbiAgICAnRThTIERyaXZpbmcgRnJvc3QnOiAnNEQ2NycsIC8vIFJlYXIgY29uZSBBb0UsIFNoaXZhXHJcbiAgICAnRThTIEF4ZSBLaWNrJzogJzRENkQnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBTaGl2YVxyXG4gICAgJ0U4UyBTY3l0aGUgS2ljayc6ICc0RDZFJywgLy8gRG9udXQgQW9FLCBTaGl2YVxyXG4gICAgJ0U4UyBSZWZsZWN0ZWQgQXhlIEtpY2snOiAnNERCOScsIC8vIExhcmdlIGNpcmNsZSBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOFMgUmVmbGVjdGVkIFNjeXRoZSBLaWNrJzogJzREQkEnLCAvLyBEb251dCBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOFMgRnJpZ2lkIEVydXB0aW9uJzogJzREOUYnLCAvLyBTbWFsbCBjaXJjbGUgQW9FIHB1ZGRsZXMsIHBoYXNlIDFcclxuICAgICdFOFMgRnJpZ2lkIE5lZWRsZSc6ICc0RDlEJywgLy8gOC13YXkgXCJmbG93ZXJcIiBleHBsb3Npb25cclxuICAgICdFOFMgSWNpY2xlIEltcGFjdCc6ICc0REEwJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSBwdWRkbGVzLCBwaGFzZSAxXHJcbiAgICAnRThTIFJlZmxlY3RlZCBCaXRpbmcgRnJvc3QgMSc6ICc0REI3JywgLy8gMjcwLWRlZ3JlZSBmcm9udGFsIEFvRSwgRnJvemVuIE1pcnJvclxyXG4gICAgJ0U4UyBSZWZsZWN0ZWQgQml0aW5nIEZyb3N0IDInOiAnNERDMycsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOFMgUmVmbGVjdGVkIERyaXZpbmcgRnJvc3QgMSc6ICc0REI4JywgLy8gQ29uZSBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOFMgUmVmbGVjdGVkIERyaXZpbmcgRnJvc3QgMic6ICc0REM0JywgLy8gQ29uZSBBb0UsIEZyb3plbiBNaXJyb3JcclxuXHJcbiAgICAnRThTIEhhbGxvd2VkIFdpbmdzIDEnOiAnNEQ3NScsIC8vIExlZnQgY2xlYXZlXHJcbiAgICAnRThTIEhhbGxvd2VkIFdpbmdzIDInOiAnNEQ3NicsIC8vIFJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0U4UyBIYWxsb3dlZCBXaW5ncyAzJzogJzRENzcnLCAvLyBLbm9ja2JhY2sgZnJvbnRhbCBjbGVhdmVcclxuICAgICdFOFMgUmVmbGVjdGVkIEhhbGxvd2VkIFdpbmdzIDEnOiAnNEQ5MCcsIC8vIFJlZmxlY3RlZCBsZWZ0IDJcclxuICAgICdFOFMgUmVmbGVjdGVkIEhhbGxvd2VkIFdpbmdzIDInOiAnNERCQicsIC8vIFJlZmxlY3RlZCBsZWZ0IDFcclxuICAgICdFOFMgUmVmbGVjdGVkIEhhbGxvd2VkIFdpbmdzIDMnOiAnNERDNycsIC8vIFJlZmxlY3RlZCByaWdodCAyXHJcbiAgICAnRThTIFJlZmxlY3RlZCBIYWxsb3dlZCBXaW5ncyA0JzogJzREOTEnLCAvLyBSZWZsZWN0ZWQgcmlnaHQgMVxyXG4gICAgJ0U4UyBUd2luIFN0aWxsbmVzcyAxJzogJzRENjgnLFxyXG4gICAgJ0U4UyBUd2luIFN0aWxsbmVzcyAyJzogJzRENkInLFxyXG4gICAgJ0U4UyBUd2luIFNpbGVuY2UgMSc6ICc0RDY5JyxcclxuICAgICdFOFMgVHdpbiBTaWxlbmNlIDInOiAnNEQ2QScsXHJcbiAgICAnRThTIEFraCBSaGFpJzogJzREOTknLFxyXG4gICAgJ0U4UyBFbWJpdHRlcmVkIERhbmNlIDEnOiAnNEQ3MCcsXHJcbiAgICAnRThTIEVtYml0dGVyZWQgRGFuY2UgMic6ICc0RDcxJyxcclxuICAgICdFOFMgU3BpdGVmdWwgRGFuY2UgMSc6ICc0RDZGJyxcclxuICAgICdFOFMgU3BpdGVmdWwgRGFuY2UgMic6ICc0RDcyJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIEJyb2tlbiB0ZXRoZXIuXHJcbiAgICAnRThTIFJlZnVsZ2VudCBGYXRlJzogJzREQTQnLFxyXG4gICAgLy8gU2hhcmVkIG9yYiwgY29ycmVjdCBpcyBCcmlnaHQgUHVsc2UgKDREOTUpXHJcbiAgICAnRThTIEJsaW5kaW5nIFB1bHNlJzogJzREOTYnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRThTIFBhdGggb2YgTGlnaHQnOiAnNERBMScsIC8vIFByb3RlYW5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRThTIFNoaW5pbmcgQXJtb3InLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBTdHVuXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc5NScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEludGVycnVwdFxyXG4gICAgICBpZDogJ0U4UyBTdG9uZXNraW4nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzREODUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNQcm9taXNlVW1icmEsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U5TiBUaGUgQXJ0IE9mIERhcmtuZXNzIDEnOiAnNTIyMycsIC8vIGxlZnQtcmlnaHQgY2xlYXZlXHJcbiAgICAnRTlOIFRoZSBBcnQgT2YgRGFya25lc3MgMic6ICc1MjI0JywgLy8gbGVmdC1yaWdodCBjbGVhdmVcclxuICAgICdFOU4gV2lkZS1BbmdsZSBQYXJ0aWNsZSBCZWFtJzogJzVBRkYnLCAvLyBmcm9udGFsIGNsZWF2ZSB0dXRvcmlhbCBtZWNoYW5pY1xyXG4gICAgJ0U5TiBXaWRlLUFuZ2xlIFBoYXNlcic6ICc1NUUxJywgLy8gd2lkZS1hbmdsZSBcInNpZGVzXCJcclxuICAgICdFOU4gQmFkIFZpYnJhdGlvbnMnOiAnNTVFNicsIC8vIHRldGhlcmVkIG91dHNpZGUgZ2lhbnQgdHJlZSBncm91bmQgYW9lc1xyXG4gICAgJ0U5TiBFYXJ0aC1TaGF0dGVyaW5nIFBhcnRpY2xlIEJlYW0nOiAnNTIyNScsIC8vIG1pc3NpbmcgdG93ZXJzP1xyXG4gICAgJ0U5TiBBbnRpLUFpciBQYXJ0aWNsZSBCZWFtJzogJzU1REMnLCAvLyBcImdldCBvdXRcIiBkdXJpbmcgcGFuZWxzXHJcbiAgICAnRTlOIFplcm8tRm9ybSBQYXJ0aWNsZSBCZWFtIDInOiAnNTVEQicsIC8vIENsb25lIGxpbmUgYW9lcyB3LyBBbnRpLUFpciBQYXJ0aWNsZSBCZWFtXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTlOIFdpdGhkcmF3JzogJzU1MzQnLCAvLyBTbG93IHRvIGJyZWFrIHNlZWQgY2hhaW4sIGdldCBzdWNrZWQgYmFjayBpbiB5aWtlc1xyXG4gICAgJ0U5TiBBZXRoZXJvc3ludGhlc2lzJzogJzU1MzUnLCAvLyBTdGFuZGluZyBvbiBzZWVkcyBkdXJpbmcgZXhwbG9zaW9uIChwb3NzaWJseSB2aWEgV2l0aGRyYXcpXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFOU4gWmVyby1Gb3JtIFBhcnRpY2xlIEJlYW0gMSc6ICc1NUVCJywgLy8gdGFuayBsYXNlciB3aXRoIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IDU2MUQgRXZpbCBTZWVkIGhpdHMgZXZlcnlvbmUsIGhhcmQgdG8ga25vdyBpZiB0aGVyZSdzIGEgZG91YmxlIHRhcFxyXG4vLyBUT0RPOiBmYWxsaW5nIHRocm91Z2ggcGFuZWwganVzdCBkb2VzIGRhbWFnZSB3aXRoIG5vIGFiaWxpdHkgbmFtZSwgbGlrZSBhIGRlYXRoIHdhbGxcclxuLy8gVE9ETzogd2hhdCBoYXBwZW5zIGlmIHlvdSBqdW1wIGluIHNlZWQgdGhvcm5zP1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZVVtYnJhU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFOVMgQmFkIFZpYnJhdGlvbnMnOiAnNTYxQycsIC8vIHRldGhlcmVkIG91dHNpZGUgZ2lhbnQgdHJlZSBncm91bmQgYW9lc1xyXG4gICAgJ0U5UyBXaWRlLUFuZ2xlIFBhcnRpY2xlIEJlYW0nOiAnNUIwMCcsIC8vIGFudGktYWlyIFwic2lkZXNcIlxyXG4gICAgJ0U5UyBXaWRlLUFuZ2xlIFBoYXNlciBVbmxpbWl0ZWQnOiAnNTYwRScsIC8vIHdpZGUtYW5nbGUgXCJzaWRlc1wiXHJcbiAgICAnRTlTIEFudGktQWlyIFBhcnRpY2xlIEJlYW0nOiAnNUIwMScsIC8vIHdpZGUtYW5nbGUgXCJvdXRcIlxyXG4gICAgJ0U5UyBUaGUgU2Vjb25kIEFydCBPZiBEYXJrbmVzcyAxJzogJzU2MDEnLCAvLyBsZWZ0LXJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0U5UyBUaGUgU2Vjb25kIEFydCBPZiBEYXJrbmVzcyAyJzogJzU2MDInLCAvLyBsZWZ0LXJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0U5UyBUaGUgQXJ0IE9mIERhcmtuZXNzIDEnOiAnNUE5NScsIC8vIGJvc3MgbGVmdC1yaWdodCBzdW1tb24vcGFuZWwgY2xlYXZlXHJcbiAgICAnRTlTIFRoZSBBcnQgT2YgRGFya25lc3MgMic6ICc1QTk2JywgLy8gYm9zcyBsZWZ0LXJpZ2h0IHN1bW1vbi9wYW5lbCBjbGVhdmVcclxuICAgICdFOVMgVGhlIEFydCBPZiBEYXJrbmVzcyBDbG9uZSAxJzogJzU2MUUnLCAvLyBjbG9uZSBsZWZ0LXJpZ2h0IHN1bW1vbiBjbGVhdmVcclxuICAgICdFOVMgVGhlIEFydCBPZiBEYXJrbmVzcyBDbG9uZSAyJzogJzU2MUYnLCAvLyBjbG9uZSBsZWZ0LXJpZ2h0IHN1bW1vbiBjbGVhdmVcclxuICAgICdFOVMgVGhlIFRoaXJkIEFydCBPZiBEYXJrbmVzcyAxJzogJzU2MDMnLCAvLyB0aGlyZCBhcnQgbGVmdC1yaWdodCBjbGVhdmUgaW5pdGlhbFxyXG4gICAgJ0U5UyBUaGUgVGhpcmQgQXJ0IE9mIERhcmtuZXNzIDInOiAnNTYwNCcsIC8vIHRoaXJkIGFydCBsZWZ0LXJpZ2h0IGNsZWF2ZSBpbml0aWFsXHJcbiAgICAnRTlTIEFydCBPZiBEYXJrbmVzcyc6ICc1NjA2JywgLy8gdGhpcmQgYXJ0IGxlZnQtcmlnaHQgY2xlYXZlIGZpbmFsXHJcbiAgICAnRTlTIEZ1bGwtUGVyaW1pdGVyIFBhcnRpY2xlIEJlYW0nOiAnNTYyOScsIC8vIHBhbmVsIFwiZ2V0IGluXCJcclxuICAgICdFOVMgRGFyayBDaGFpbnMnOiAnNUZBQycsIC8vIFNsb3cgdG8gYnJlYWsgcGFydG5lciBjaGFpbnNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFOVMgV2l0aGRyYXcnOiAnNTYxQScsIC8vIFNsb3cgdG8gYnJlYWsgc2VlZCBjaGFpbiwgZ2V0IHN1Y2tlZCBiYWNrIGluIHlpa2VzXHJcbiAgICAnRTlTIEFldGhlcm9zeW50aGVzaXMnOiAnNTYxQicsIC8vIFN0YW5kaW5nIG9uIHNlZWRzIGR1cmluZyBleHBsb3Npb24gKHBvc3NpYmx5IHZpYSBXaXRoZHJhdylcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0U5UyBTdHlnaWFuIFRlbmRyaWxzJzogJzk1MicsIC8vIHN0YW5kaW5nIGluIHRoZSBicmFtYmxlc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTlTIEh5cGVyLUZvY3VzZWQgUGFydGljbGUgQmVhbSc6ICc1NUZEJywgLy8gQXJ0IE9mIERhcmtuZXNzIHByb3RlYW5cclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0U5UyBDb25kZW5zZWQgV2lkZS1BbmdsZSBQYXJ0aWNsZSBCZWFtJzogJzU2MTAnLCAvLyB3aWRlLWFuZ2xlIFwidGFuayBsYXNlclwiXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0U5UyBNdWx0aS1Qcm9uZ2VkIFBhcnRpY2xlIEJlYW0nOiAnNTYwMCcsIC8vIEFydCBPZiBEYXJrbmVzcyBQYXJ0bmVyIFN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBBbnRpLWFpciBcInRhbmsgc3ByZWFkXCIuICBUaGlzIGNhbiBiZSBzdGFja2VkIGJ5IHR3byB0YW5rcyBpbnZ1bG5pbmcuXHJcbiAgICAgIC8vIE5vdGU6IHRoaXMgd2lsbCBzdGlsbCBzaG93IHNvbWV0aGluZyBmb3IgaG9sbWdhbmcvbGl2aW5nLCBidXRcclxuICAgICAgLy8gYXJndWFibHkgYSBoZWFsZXIgbWlnaHQgbmVlZCB0byBkbyBzb21ldGhpbmcgYWJvdXQgdGhhdCwgc28gbWF5YmVcclxuICAgICAgLy8gaXQncyBvayB0byBzdGlsbCBzaG93IGFzIGEgd2FybmluZz8/XHJcbiAgICAgIGlkOiAnRTlTIENvbmRlbnNlZCBBbnRpLUFpciBQYXJ0aWNsZSBCZWFtJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IHR5cGU6ICcyMicsIGlkOiAnNTYxNScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBBbnRpLWFpciBcIm91dFwiLiAgVGhpcyBjYW4gYmUgaW52dWxuZWQgYnkgYSB0YW5rIGFsb25nIHdpdGggdGhlIHNwcmVhZCBhYm92ZS5cclxuICAgICAgaWQ6ICdFOVMgQW50aS1BaXIgUGhhc2VyIFVubGltaXRlZCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzU2MTInLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBEaWFtb25kIFdlYXBvbiBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNsb3VkRGVjayxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQXVyaSBBcnRzJzogJzVGRTMnLCAvLyBBdXJpIEFydHMgZGFzaGVzXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gRGlhbW9uZCBTaHJhcG5lbCBJbml0aWFsJzogJzVGRTEnLCAvLyBpbml0aWFsIGNpcmNsZSBvZiBEaWFtb25kIFNocmFwbmVsXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gRGlhbW9uZCBTaHJhcG5lbCBDaGFzaW5nJzogJzVGRTInLCAvLyBmb2xsb3d1cCBjaXJjbGVzIGZyb20gRGlhbW9uZCBTaHJhcG5lbFxyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIEFldGhlcmlhbCBCdWxsZXQnOiAnNUZENScsIC8vIGJpdCBsYXNlcnNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdEaWFtb25kIFdlYXBvbiBDbGF3IFN3aXBlIExlZnQnOiAnNUZEOScsIC8vIEFkYW1hbnQgUHVyZ2UgcGxhdGZvcm0gY2xlYXZlXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQ2xhdyBTd2lwZSBSaWdodCc6ICc1RkRBJywgLy8gQWRhbWFudCBQdXJnZSBwbGF0Zm9ybSBjbGVhdmVcclxuICAgICdEaWFtb25kIFdlYXBvbiBBdXJpIEN5Y2xvbmUgMSc6ICc1RkU2JywgLy8gc3RhbmRpbmcgb24gdGhlIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICAgICdEaWFtb25kIFdlYXBvbiBBdXJpIEN5Y2xvbmUgMic6ICc1RkU3JywgLy8gc3RhbmRpbmcgb24gdGhlIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICAgICdEaWFtb25kIFdlYXBvbiBBaXJzaGlwXFwncyBCYW5lIDEnOiAnNUZFOCcsIC8vIGRlc3Ryb3lpbmcgb25lIG9mIHRoZSBwbGF0Zm9ybXMgYWZ0ZXIgQXVyaSBDeWNsb25lXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQWlyc2hpcFxcJ3MgQmFuZSAyJzogJzVGRkUnLCAvLyBkZXN0cm95aW5nIG9uZSBvZiB0aGUgcGxhdGZvcm1zIGFmdGVyIEF1cmkgQ3ljbG9uZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRGlhbW9uZCBXZWFwb24gSG9taW5nIExhc2VyJzogJzVGREInLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdEaWFtb25kIFdlYXBvbiBWZXJ0aWNhbCBDbGVhdmUgS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzVGRTUnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdBIMOpdMOpIGFzc29tbcOpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogd2FybmluZyBmb3IgdGFraW5nIERpYW1vbmQgRmxhc2ggKDVGQTEpIHN0YWNrIG9uIHlvdXIgb3duP1xyXG5cclxuLy8gRGlhbW9uZCBXZWFwb24gRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQ2xvdWREZWNrRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyAxJzogJzVGQUYnLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXVyaSBBcnRzIDInOiAnNUZCMicsIC8vIEF1cmkgQXJ0cyBkYXNoZXMvZXhwbG9zaW9uc1xyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEFydHMgMyc6ICc1RkNEJywgLy8gQXVyaSBBcnRzIGRhc2hlcy9leHBsb3Npb25zXHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyA0JzogJzVGQ0UnLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXVyaSBBcnRzIDUnOiAnNUZDRicsIC8vIEF1cmkgQXJ0cyBkYXNoZXMvZXhwbG9zaW9uc1xyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEFydHMgNic6ICc1RkY4JywgLy8gQXVyaSBBcnRzIGRhc2hlcy9leHBsb3Npb25zXHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyA3JzogJzYxNTknLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXJ0aWN1bGF0ZWQgQml0IEFldGhlcmlhbCBCdWxsZXQnOiAnNUZBQicsIC8vIGJpdCBsYXNlcnMgZHVyaW5nIGFsbCBwaGFzZXNcclxuICAgICdEaWFtb25kRXggRGlhbW9uZCBTaHJhcG5lbCAxJzogJzVGQ0InLCAvLyBjaGFzaW5nIGNpcmNsZXNcclxuICAgICdEaWFtb25kRXggRGlhbW9uZCBTaHJhcG5lbCAyJzogJzVGQ0MnLCAvLyBjaGFzaW5nIGNpcmNsZXNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdEaWFtb25kRXggQ2xhdyBTd2lwZSBMZWZ0JzogJzVGQzInLCAvLyBBZGFtYW50IFB1cmdlIHBsYXRmb3JtIGNsZWF2ZVxyXG4gICAgJ0RpYW1vbmRFeCBDbGF3IFN3aXBlIFJpZ2h0JzogJzVGQzMnLCAvLyBBZGFtYW50IFB1cmdlIHBsYXRmb3JtIGNsZWF2ZVxyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEN5Y2xvbmUgMSc6ICc1RkQxJywgLy8gc3RhbmRpbmcgb24gdGhlIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICAgICdEaWFtb25kRXggQXVyaSBDeWNsb25lIDInOiAnNUZEMicsIC8vIHN0YW5kaW5nIG9uIHRoZSBibHVlIGtub2NrYmFjayBwdWNrXHJcbiAgICAnRGlhbW9uZEV4IEFpcnNoaXBcXCdzIEJhbmUgMSc6ICc1RkZFJywgLy8gZGVzdHJveWluZyBvbmUgb2YgdGhlIHBsYXRmb3JtcyBhZnRlciBBdXJpIEN5Y2xvbmVcclxuICAgICdEaWFtb25kRXggQWlyc2hpcFxcJ3MgQmFuZSAyJzogJzVGRDMnLCAvLyBkZXN0cm95aW5nIG9uZSBvZiB0aGUgcGxhdGZvcm1zIGFmdGVyIEF1cmkgQ3ljbG9uZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRGlhbW9uZEV4IFRhbmsgTGFzZXJzJzogJzVGQzgnLCAvLyBjbGVhdmluZyB5ZWxsb3cgbGFzZXJzIG9uIHRvcCB0d28gZW5taXR5XHJcbiAgICAnRGlhbW9uZEV4IEhvbWluZyBMYXNlcic6ICc1RkM0JywgLy8gQWRhbWFudGUgUHVyZ2Ugc3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdEaWFtb25kRXggRmxvb2QgUmF5JzogJzVGQzcnLCAvLyBcImxpbWl0IGN1dFwiIGNsZWF2ZXNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRGlhbW9uZEV4IFZlcnRpY2FsIENsZWF2ZSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNUZEMCcgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQ2FzdHJ1bU1hcmludW0sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIEhlYXQgUmF5JzogJzRGOUQnLCAvLyBFbWVyYWxkIEJlYW0gaW5pdGlhbCBjb25hbFxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFBob3RvbiBMYXNlciAxJzogJzU1MzQnLCAvLyBFbWVyYWxkIEJlYW0gaW5zaWRlIGNpcmNsZVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFBob3RvbiBMYXNlciAyJzogJzU1MzYnLCAvLyBFbWVyYWxkIEJlYW0gbWlkZGxlIGNpcmNsZVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFBob3RvbiBMYXNlciAzJzogJzU1MzgnLCAvLyBFbWVyYWxkIEJlYW0gb3V0c2lkZSBjaXJjbGVcclxuICAgICdFbWVyYWxkIFdlYXBvbiBIZWF0IFJheSAxJzogJzU1MzInLCAvLyBFbWVyYWxkIEJlYW0gcm90YXRpbmcgcHVsc2luZyBsYXNlclxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIEhlYXQgUmF5IDInOiAnNTUzMycsIC8vIEVtZXJhbGQgQmVhbSByb3RhdGluZyBwdWxzaW5nIGxhc2VyXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gTWFnbmV0aWMgTWluZSBFeHBsb3Npb24nOiAnNUIwNCcsIC8vIHJlcHVsc2luZyBtaW5lIGV4cGxvc2lvbnNcclxuICAgICdFbWVyYWxkIFdlYXBvbiBTaWRlc2NhdGhlIDEnOiAnNTUzRicsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gU2lkZXNjYXRoZSAyJzogJzU1NDAnLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFNpZGVzY2F0aGUgMyc6ICc1NTQxJywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdFbWVyYWxkIFdlYXBvbiBTaWRlc2NhdGhlIDQnOiAnNTU0MicsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gQml0IFN0b3JtJzogJzU1NEEnLCAvLyBcImdldCBpblwiXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gRW1lcmFsZCBDcnVzaGVyJzogJzU1M0MnLCAvLyBibHVlIGtub2NrYmFjayBwdWNrXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gUHVsc2UgTGFzZXInOiAnNTU0OCcsIC8vIGxpbmUgYW9lXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gRW5lcmd5IEFldGhlcm9wbGFzbSc6ICc1NTUxJywgLy8gaGl0dGluZyBhIGdsb3d5IG9yYlxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIERpdmlkZSBFdCBJbXBlcmEgR3JvdW5kJzogJzU1NkYnLCAvLyBwYXJ0eSB0YXJnZXRlZCBncm91bmQgY29uZXNcclxuICAgICdFbWVyYWxkIFdlYXBvbiBQcmltdXMgVGVybWludXMgRXN0JzogJzRCM0UnLCAvLyBncm91bmQgY2lyY2xlIGR1cmluZyBhcnJvdyBoZWFkbWFya2Vyc1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFNlY3VuZHVzIFRlcm1pbnVzIEVzdCc6ICc1NTZBJywgLy8gWCAvICsgaGVhZG1hcmtlcnNcclxuICAgICdFbWVyYWxkIFdlYXBvbiBUZXJ0aXVzIFRlcm1pbnVzIEVzdCc6ICc1NTZEJywgLy8gdHJpcGxlIHN3b3Jkc1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFNob3RzIEZpcmVkJzogJzU1NUYnLCAvLyBsaW5lIGFvZXMgZnJvbSBzb2xkaWVyc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRW1lcmFsZCBXZWFwb24gRGl2aWRlIEV0IEltcGVyYSBQMSc6ICc1NTRFJywgLy8gdGFua2J1c3RlciwgcHJvYmFibHkgY2xlYXZlcywgcGhhc2UgMVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIERpdmlkZSBFdCBJbXBlcmEgUDInOiAnNTU3MCcsIC8vIHRhbmtidXN0ZXIsIHByb2JhYmx5IGNsZWF2ZXMsIHBoYXNlIDJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRW1lcmFsZCBXZWFwb24gRW1lcmFsZCBDcnVzaGVyIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc1NTNFJyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBhc3NvbW3DqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBHZXR0aW5nIGtub2NrZWQgaW50byBhIHdhbGwgZnJvbSB0aGUgYXJyb3cgaGVhZG1hcmtlci5cclxuICAgICAgaWQ6ICdFbWVyYWxkIFdlYXBvbiBQcmltdXMgVGVybWludXMgRXN0IFdhbGwnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc1NTYzJywgJzU1NjQnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1B1c2hlZCBpbnRvIHdhbGwnLFxyXG4gICAgICAgICAgICBkZTogJ1LDvGNrc3Rvw58gaW4gZGllIFdhbmQnLFxyXG4gICAgICAgICAgICBqYTogJ+WjgeOBuOODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA6Iez5aKZJyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgc3BoZXJlTml0cm8/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgc3BoZXJlQ2VydWxldW0/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5DYXN0cnVtTWFyaW51bUV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0VtZXJhbGRFeCBIZWF0IFJheSc6ICc1QkQzJywgLy8gRW1lcmFsZCBCZWFtIGluaXRpYWwgY29uYWxcclxuICAgICdFbWVyYWxkRXggUGhvdG9uIExhc2VyIDEnOiAnNTU3QicsIC8vIEVtZXJhbGQgQmVhbSBpbnNpZGUgY2lyY2xlXHJcbiAgICAnRW1lcmFsZEV4IFBob3RvbiBMYXNlciAyJzogJzU1N0QnLCAvLyBFbWVyYWxkIEJlYW0gb3V0c2lkZSBjaXJjbGVcclxuICAgICdFbWVyYWxkRXggSGVhdCBSYXkgMSc6ICc1NTdBJywgLy8gRW1lcmFsZCBCZWFtIHJvdGF0aW5nIHB1bHNpbmcgbGFzZXJcclxuICAgICdFbWVyYWxkRXggSGVhdCBSYXkgMic6ICc1NTc5JywgLy8gRW1lcmFsZCBCZWFtIHJvdGF0aW5nIHB1bHNpbmcgbGFzZXJcclxuICAgICdFbWVyYWxkRXggRXhwbG9zaW9uJzogJzU1OTYnLCAvLyBNYWdpdGVrIE1pbmUgZXhwbG9zaW9uXHJcbiAgICAnRW1lcmFsZEV4IFRlcnRpdXMgVGVybWludXMgRXN0IEluaXRpYWwnOiAnNTVDRCcsIC8vIHN3b3JkIGluaXRpYWwgcHVkZGxlc1xyXG4gICAgJ0VtZXJhbGRFeCBUZXJ0aXVzIFRlcm1pbnVzIEVzdCBFeHBsb3Npb24nOiAnNTVDRScsIC8vIHN3b3JkIGV4cGxvc2lvbnNcclxuICAgICdFbWVyYWxkRXggQWlyYm9ybmUgRXhwbG9zaW9uJzogJzU1QkQnLCAvLyBleGFmbGFyZVxyXG4gICAgJ0VtZXJhbGRFeCBTaWRlc2NhdGhlIDEnOiAnNTVENCcsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRW1lcmFsZEV4IFNpZGVzY2F0aGUgMic6ICc1NUQ1JywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdFbWVyYWxkRXggU2hvdHMgRmlyZWQnOiAnNTVCNycsIC8vIHJhbmsgYW5kIGZpbGUgc29sZGllcnNcclxuICAgICdFbWVyYWxkRXggU2VjdW5kdXMgVGVybWludXMgRXN0JzogJzU1Q0InLCAvLyBkcm9wcGVkICsgYW5kIHggaGVhZG1hcmtlcnNcclxuICAgICdFbWVyYWxkRXggRXhwaXJlJzogJzU1RDEnLCAvLyBncm91bmQgYW9lIG9uIGJvc3MgXCJnZXQgb3V0XCJcclxuICAgICdFbWVyYWxkRXggUGhvdG9uIFJpbmcnOiAnNTVBOScsIC8vIHVudGVsZWdyYXBoZWQgXCJnZXQgb3V0XCJcclxuICAgICdFbWVyYWxkRXggQWlyZSBUYW0gU3Rvcm0nOiAnNTVEMCcsIC8vIGV4cGFuZGluZyByZWQgYW5kIGJsYWNrIGdyb3VuZCBhb2VcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0VtZXJhbGRFeCBEaXZpZGUgRXQgSW1wZXJhJzogJzU1RDknLCAvLyBub24tdGFuayBwcm90ZWFuIHNwcmVhZFxyXG4gICAgJ0VtZXJhbGRFeCBQcmltdXMgVGVybWludXMgRXN0IDEnOiAnNTVDNCcsIC8vIGtub2NrYmFjayBhcnJvd1xyXG4gICAgJ0VtZXJhbGRFeCBQcmltdXMgVGVybWludXMgRXN0IDInOiAnNTVDNScsIC8vIGtub2NrYmFjayBhcnJvd1xyXG4gICAgJ0VtZXJhbGRFeCBQcmltdXMgVGVybWludXMgRXN0IDMnOiAnNTVDNicsIC8vIGtub2NrYmFjayBhcnJvd1xyXG4gICAgJ0VtZXJhbGRFeCBQcmltdXMgVGVybWludXMgRXN0IDQnOiAnNTVDNycsIC8vIGtub2NrYmFjayBhcnJvd1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdFbWVyYWxkRXggTml0cm9zcGhlcmUgQWV0aGVyb3BsYXNtJzogJzU1QUUnLFxyXG4gICAgJ0VtZXJhbGRFeCBDZXJ1bGV1bSBTcGhlcmUgQWV0aGVyb3BsYXNtJzogJzU1QUYnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggTml0cm9zcGhlcmUgUGh5c2ljYWwgVnVsbmVyYWJpbGl0eSBVcCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzgyQScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNwaGVyZU5pdHJvID0gZGF0YS5zcGhlcmVOaXRybyA/PyB7fTtcclxuICAgICAgICBkYXRhLnNwaGVyZU5pdHJvW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0VtZXJhbGRFeCBOaXRyb3NwaGVyZSBQaHlzaWNhbCBWdWxuZXJhYmlsaXR5IFVwIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnODJBJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIC8vIE5lZWQgdG8gdHJhY2sgbG9zcyBoZXJlIGZvciB0aGUgNC80IHN0cmF0ZWd5LlxyXG4gICAgICAgIGRhdGEuc3BoZXJlTml0cm8gPSBkYXRhLnNwaGVyZU5pdHJvID8/IHt9O1xyXG4gICAgICAgIGRhdGEuc3BoZXJlTml0cm9bbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0VtZXJhbGRFeCBDZXJ1bGV1bSBTcGhlcmUgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBHYWluJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzgyQicgfSksXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNwaGVyZUNlcnVsZXVtID0gZGF0YS5zcGhlcmVDZXJ1bGV1bSA/PyB7fTtcclxuICAgICAgICBkYXRhLnNwaGVyZUNlcnVsZXVtW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0VtZXJhbGRFeCBDZXJ1bGV1bSBTcGhlcmUgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzgyQicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNwaGVyZUNlcnVsZXVtID0gZGF0YS5zcGhlcmVDZXJ1bGV1bSA/PyB7fTtcclxuICAgICAgICBkYXRhLnNwaGVyZUNlcnVsZXVtW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggTml0cm9zcGhlcmUgVHdpY2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU1QUUnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnNwaGVyZU5pdHJvPy5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46IGAke21hdGNoZXMuYWJpbGl0eX0gKHdyb25nIGNvbG9yKWAsXHJcbiAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9IChmYWxzY2hlIEZhcmJlKWAsXHJcbiAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChtYXV2YWlzZSBjb3VsZXVyKWAsXHJcbiAgICAgICAgICAgIGphOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjoibLpgZXjgYYpYCxcclxuICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOminOiJsumUmeS6hilgLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo7IOJIO2LgOumvClgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggQ2VydWxldW0gU3BoZXJlIFR3aWNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc1NUFGJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5zcGhlcmVDZXJ1bGV1bT8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh3cm9uZyBjb2xvcilgLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZmFsc2NoZSBGYXJiZSlgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAobWF1dmFpc2UgY291bGV1cilgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6Imy6YGV44GGKWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjpopzoibLplJnkuoYpYCxcclxuICAgICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOyDiSDti4DrprwpYCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEhhZGVzIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRHlpbmdHYXNwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdIYWRlcyBCYWQgRmFpdGggMSc6ICc0MTRCJyxcclxuICAgICdIYWRlcyBCYWQgRmFpdGggMic6ICc0MTRDJyxcclxuICAgICdIYWRlcyBEYXJrIEVydXB0aW9uJzogJzQxNTInLFxyXG4gICAgJ0hhZGVzIFNoYWRvdyBTcHJlYWQgMSc6ICc0MTU2JyxcclxuICAgICdIYWRlcyBTaGFkb3cgU3ByZWFkIDInOiAnNDE1NycsXHJcbiAgICAnSGFkZXMgQnJva2VuIEZhaXRoJzogJzQxNEUnLFxyXG4gICAgJ0hhZGVzIEhlbGxib3JuIFlhd3AnOiAnNDE2RicsXHJcbiAgICAnSGFkZXMgUHVyZ2F0aW9uJzogJzQxNzInLFxyXG4gICAgJ0hhZGVzIFNoYWRvdyBTdHJlYW0nOiAnNDE1QycsXHJcbiAgICAnSGFkZXMgQWVybyc6ICc0NTk1JyxcclxuICAgICdIYWRlcyBFY2hvIDEnOiAnNDE2MycsXHJcbiAgICAnSGFkZXMgRWNobyAyJzogJzQxNjQnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnSGFkZXMgTmV0aGVyIEJsYXN0JzogJzQxNjMnLFxyXG4gICAgJ0hhZGVzIFJhdmVub3VzIEFzc2F1bHQnOiAnNDE1OCcsXHJcbiAgICAnSGFkZXMgQW5jaWVudCBEYXJrbmVzcyc6ICc0NTkzJyxcclxuICAgICdIYWRlcyBEdWFsIFN0cmlrZSc6ICc0MTYyJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzRGFyaz86IHN0cmluZ1tdO1xyXG4gIGhhc0JleW9uZERlYXRoPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGhhc0Rvb20/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIEhhZGVzIEV4XHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRIYWRlc3NFbGVneSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDInOiAnNDdBQScsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDMnOiAnNDdFNCcsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDQnOiAnNDdFNScsXHJcbiAgICAvLyBFdmVyeWJvZHkgc3RhY2tzIGluIGdvb2QgZmFpdGggZm9yIEJhZCBGYWl0aCwgc28gZG9uJ3QgY2FsbCBpdCBhIG1pc3Rha2UuXHJcbiAgICAvLyAnSGFkZXNFeCBCYWQgRmFpdGggMSc6ICc0N0FEJyxcclxuICAgIC8vICdIYWRlc0V4IEJhZCBGYWl0aCAyJzogJzQ3QjAnLFxyXG4gICAgLy8gJ0hhZGVzRXggQmFkIEZhaXRoIDMnOiAnNDdBRScsXHJcbiAgICAvLyAnSGFkZXNFeCBCYWQgRmFpdGggNCc6ICc0N0FGJyxcclxuICAgICdIYWRlc0V4IEJyb2tlbiBGYWl0aCc6ICc0N0IyJyxcclxuICAgICdIYWRlc0V4IE1hZ2ljIFNwZWFyJzogJzQ3QjYnLFxyXG4gICAgJ0hhZGVzRXggTWFnaWMgQ2hha3JhbSc6ICc0N0I1JyxcclxuICAgICdIYWRlc0V4IEZvcmtlZCBMaWdodG5pbmcnOiAnNDdDOScsXHJcbiAgICAnSGFkZXNFeCBEYXJrIEN1cnJlbnQgMSc6ICc0N0YxJyxcclxuICAgICdIYWRlc0V4IERhcmsgQ3VycmVudCAyJzogJzQ3RjInLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0hhZGVzRXggQ29tZXQnOiAnNDdCOScsIC8vIG1pc3NlZCB0b3dlclxyXG4gICAgJ0hhZGVzRXggQW5jaWVudCBFcnVwdGlvbic6ICc0N0QzJyxcclxuICAgICdIYWRlc0V4IFB1cmdhdGlvbiAxJzogJzQ3RUMnLFxyXG4gICAgJ0hhZGVzRXggUHVyZ2F0aW9uIDInOiAnNDdFRCcsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3RyZWFtJzogJzQ3RUEnLFxyXG4gICAgJ0hhZGVzRXggRGVhZCBTcGFjZSc6ICc0N0VFJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0hhZGVzRXggU2hhZG93IFNwcmVhZCBJbml0aWFsJzogJzQ3QTknLFxyXG4gICAgJ0hhZGVzRXggUmF2ZW5vdXMgQXNzYXVsdCc6ICcoPzo0N0E2fDQ3QTcpJyxcclxuICAgICdIYWRlc0V4IERhcmsgRmxhbWUgMSc6ICc0N0M2JyxcclxuICAgICdIYWRlc0V4IERhcmsgRnJlZXplIDEnOiAnNDdDNCcsXHJcbiAgICAnSGFkZXNFeCBEYXJrIEZyZWV6ZSAyJzogJzQ3REYnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERhcmsgSUkgVGV0aGVyJyxcclxuICAgICAgdHlwZTogJ1RldGhlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ1NoYWRvdyBvZiB0aGUgQW5jaWVudHMnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNEYXJrID8/PSBbXTtcclxuICAgICAgICBkYXRhLmhhc0RhcmsucHVzaChtYXRjaGVzLnRhcmdldCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRGFyayBJSScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyB0eXBlOiAnMjInLCBpZDogJzQ3QkEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIC8vIERvbid0IGJsYW1lIHBlb3BsZSB3aG8gZG9uJ3QgaGF2ZSB0ZXRoZXJzLlxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLmhhc0RhcmsgJiYgZGF0YS5oYXNEYXJrLmluY2x1ZGVzKG1hdGNoZXMudGFyZ2V0KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnSGFkZXNFeCBCb3NzIFRldGhlcicsXHJcbiAgICAgIHR5cGU6ICdUZXRoZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6IFsnSWdleW9yaG1cXCdzIFNoYWRlJywgJ0xhaGFicmVhXFwncyBTaGFkZSddLCBpZDogJzAwMEUnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbWlzdGFrZToge1xyXG4gICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICBlbjogJ0Jvc3NlcyBUb28gQ2xvc2UnLFxyXG4gICAgICAgICAgZGU6ICdCb3NzZXMgenUgTmFoZScsXHJcbiAgICAgICAgICBmcjogJ0Jvc3MgdHJvcCBwcm9jaGVzJyxcclxuICAgICAgICAgIGphOiAn44Oc44K56L+R44GZ44GO44KLJyxcclxuICAgICAgICAgIGNuOiAnQk9TU+mdoOWkqui/keS6hicsXHJcbiAgICAgICAgICBrbzogJ+yrhOuTpOydtCDrhIjrrLQg6rCA6rmM7JuAJyxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERlYXRoIFNocmllaycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQ3Q0InLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IEJleW9uZCBEZWF0aCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggQmV5b25kIERlYXRoIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNTY2JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGggPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGhbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggQmV5b25kIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzQmV5b25kRGVhdGgpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRG9vbSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzZFOScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0Rvb20gPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERvb20gTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc2RTknIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNEb29tID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0Rvb21bbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRG9vbScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2RTknIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb20pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb21bbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIElubm9jZW5jZSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNyb3duT2ZUaGVJbW1hY3VsYXRlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdJbm5vIERheWJyZWFrJzogJzNFOUQnLFxyXG4gICAgJ0lubm8gSG9seSBUcmluaXR5JzogJzNFQjMnLFxyXG5cclxuICAgICdJbm5vIFJlcHJvYmF0aW9uIDEnOiAnM0VCNicsXHJcbiAgICAnSW5ubyBSZXByb2JhdGlvbiAyJzogJzNFQjgnLFxyXG4gICAgJ0lubm8gUmVwcm9iYXRpb24gMyc6ICczRUNCJyxcclxuICAgICdJbm5vIFJlcHJvYmF0aW9uIDQnOiAnM0VCNycsXHJcblxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAxJzogJzNFQjEnLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAyJzogJzNFQjInLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAzJzogJzNFRjknLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSA0JzogJzNFRkEnLFxyXG5cclxuICAgICdJbm5vIEdvZCBSYXkgMSc6ICczRUJEJyxcclxuICAgICdJbm5vIEdvZCBSYXkgMic6ICczRUJFJyxcclxuICAgICdJbm5vIEdvZCBSYXkgMyc6ICczRUJGJyxcclxuICAgICdJbm5vIEdvZCBSYXkgNCc6ICczRUMwJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gSW5ub2NlbmNlIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNyb3duT2ZUaGVJbW1hY3VsYXRlRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSW5ub0V4IER1ZWwgRGVzY2VudCc6ICczRUQyJyxcclxuICAgICdJbm5vRXggUmVwcm9iYXRpb24gMSc6ICczRUUwJyxcclxuICAgICdJbm5vRXggUmVwcm9iYXRpb24gMic6ICczRUNDJyxcclxuICAgICdJbm5vRXggU3dvcmQgb2YgQ29uZGVtbmF0aW9uIDEnOiAnM0VERScsXHJcbiAgICAnSW5ub0V4IFN3b3JkIG9mIENvbmRlbW5hdGlvbiAyJzogJzNFREYnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAxJzogJzNFRDMnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAyJzogJzNFRDQnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAzJzogJzNFRDUnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA0JzogJzNFRDYnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA1JzogJzNFRkInLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA2JzogJzNFRkMnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA3JzogJzNFRkQnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA4JzogJzNFRkUnLFxyXG4gICAgJ0lubm9FeCBIb2x5IFRyaW5pdHknOiAnM0VEQicsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgMSc6ICczRUQ3JyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSAyJzogJzNFRDgnLFxyXG4gICAgJ0lubm9FeCBTb3VsIGFuZCBCb2R5IDMnOiAnM0VEOScsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgNCc6ICczRURBJyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSA1JzogJzNFRkYnLFxyXG4gICAgJ0lubm9FeCBTb3VsIGFuZCBCb2R5IDYnOiAnM0YwMCcsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgNyc6ICczRjAxJyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSA4JzogJzNGMDInLFxyXG4gICAgJ0lubm9FeCBHb2QgUmF5IDEnOiAnM0VFNicsXHJcbiAgICAnSW5ub0V4IEdvZCBSYXkgMic6ICczRUU3JyxcclxuICAgICdJbm5vRXggR29kIFJheSAzJzogJzNFRTgnLFxyXG4gICAgJ0lubm9FeCBFeHBsb3Npb24nOiAnM0VGMCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gSXQncyBoYXJkIHRvIGNhcHR1cmUgdGhlIHJlZmxlY3Rpb24gYWJpbGl0aWVzIGZyb20gTGV2aWF0aGFuJ3MgSGVhZCBhbmQgVGFpbCBpZiB5b3UgdXNlXHJcbi8vIHJhbmdlZCBwaHlzaWNhbCBhdHRhY2tzIC8gbWFnaWMgYXR0YWNrcyByZXNwZWN0aXZlbHksIGFzIHRoZSBhYmlsaXR5IG5hbWVzIGFyZSB0aGVcclxuLy8gYWJpbGl0eSB5b3UgdXNlZCBhbmQgZG9uJ3QgYXBwZWFyIHRvIHNob3cgdXAgaW4gdGhlIGxvZyBhcyBub3JtYWwgXCJhYmlsaXR5XCIgbGluZXMuXHJcbi8vIFRoYXQgc2FpZCwgZG90cyBzdGlsbCB0aWNrIGluZGVwZW5kZW50bHkgb24gYm90aCBzbyBpdCdzIGxpa2VseSB0aGF0IHBlb3BsZSB3aWxsIGF0YWNrXHJcbi8vIHRoZW0gYW55d2F5LlxyXG5cclxuLy8gVE9ETzogRmlndXJlIG91dCB3aHkgRHJlYWQgVGlkZSAvIFdhdGVyc3BvdXQgYXBwZWFyIGxpa2Ugc2hhcmVzIChpLmUuIDB4MTYgaWQpLlxyXG4vLyBEcmVhZCBUaWRlID0gNUNDQS81Q0NCLzVDQ0MsIFdhdGVyc3BvdXQgPSA1Q0QxXHJcblxyXG4vLyBMZXZpYXRoYW4gVW5yZWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXaG9ybGVhdGVyVW5yZWFsLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdMZXZpVW4gR3JhbmQgRmFsbCc6ICc1Q0RGJywgLy8gdmVyeSBsYXJnZSBjaXJjdWxhciBhb2UgYmVmb3JlIHNwaW5ueSBkaXZlcywgYXBwbGllcyBoZWF2eVxyXG4gICAgJ0xldmlVbiBIeWRyb3Nob3QnOiAnNUNENScsIC8vIFdhdmVzcGluZSBTYWhhZ2luIGFvZSB0aGF0IGdpdmVzIERyb3BzeSBlZmZlY3RcclxuICAgICdMZXZpVW4gRHJlYWRzdG9ybSc6ICc1Q0Q2JywgLy8gV2F2ZXRvb3RoIFNhaGFnaW4gYW9lIHRoYXQgZ2l2ZXMgSHlzdGVyaWEgZWZmZWN0XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnTGV2aVVuIEJvZHkgU2xhbSc6ICc1Q0QyJywgLy8gbGV2aSBzbGFtIHRoYXQgdGlsdHMgdGhlIGJvYXRcclxuICAgICdMZXZpVW4gU3Bpbm5pbmcgRGl2ZSAxJzogJzVDREInLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgICAnTGV2aVVuIFNwaW5uaW5nIERpdmUgMic6ICc1Q0UzJywgLy8gbGV2aSBkYXNoIGFjcm9zcyB0aGUgYm9hdCB3aXRoIGtub2NrYmFja1xyXG4gICAgJ0xldmlVbiBTcGlubmluZyBEaXZlIDMnOiAnNUNFOCcsIC8vIGxldmkgZGFzaCBhY3Jvc3MgdGhlIGJvYXQgd2l0aCBrbm9ja2JhY2tcclxuICAgICdMZXZpVW4gU3Bpbm5pbmcgRGl2ZSA0JzogJzVDRTknLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdMZXZpVW4gRHJvcHN5JzogJzExMCcsIC8vIHN0YW5kaW5nIGluIHRoZSBoeWRybyBzaG90IGZyb20gdGhlIFdhdmVzcGluZSBTYWhhZ2luXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdMZXZpVW4gSHlzdGVyaWEnOiAnMTI4JywgLy8gc3RhbmRpbmcgaW4gdGhlIGRyZWFkc3Rvcm0gZnJvbSB0aGUgV2F2ZXRvb3RoIFNhaGFnaW5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTGV2aVVuIEJvZHkgU2xhbSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNUNEMicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0Egw6l0w6kgYXNzb21tw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gUnVieSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNpbmRlckRyaWZ0LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdSdWJ5IFJhdmVuc2NsYXcnOiAnNEE5MycsIC8vIGNlbnRlcmVkIGNpcmNsZSBhb2UgZm9yIHJhdmVuc2NsYXdcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDEnOiAnNEE5QScsIC8vIGluaXRpYWwgZXhwbG9zaW9uIGR1cmluZyBoZWxpY29jbGF3XHJcbiAgICAnUnVieSBTcGlrZSBPZiBGbGFtZSAyJzogJzRCMkUnLCAvLyBmb2xsb3d1cCBoZWxpY29jbGF3IGV4cGxvc2lvbnNcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDMnOiAnNEE5NCcsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDQnOiAnNEE5NScsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDUnOiAnNEQwMicsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDYnOiAnNEQwMycsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5IFJ1YnkgUmF5JzogJzRBQzYnLCAvLyBmcm9udGFsIGxhc2VyXHJcbiAgICAnUnVieSBVbmRlcm1pbmUnOiAnNEE5NycsIC8vIGdyb3VuZCBhb2VzIHVuZGVyIHRoZSByYXZlbnNjbGF3IHBhdGNoZXNcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCAxJzogJzRFNjknLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCAyJzogJzRFNkEnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCAzJzogJzRBQTEnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA0JzogJzRBQTInLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA1JzogJzRBQTMnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA2JzogJzRBQTQnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA3JzogJzRBQTUnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA4JzogJzRBQTYnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCA5JzogJzRBQTcnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCAxMCc6ICc0QzIxJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieSBSYXZlbnNmbGlnaHQgMTEnOiAnNEMyQScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgQ29tZXQgQnVyc3QnOiAnNEFCNCcsIC8vIG1ldGVvciBleHBsb2RpbmdcclxuICAgICdSdWJ5IEJyYWRhbWFudGUnOiAnNEFCQycsIC8vIGhlYWRtYXJrZXJzIHdpdGggbGluZSBhb2VzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdSdWJ5IEhvbWluZyBMYXNlcic6ICc0QUM1JywgLy8gc3ByZWFkIG1hcmtlcnMgaW4gUDFcclxuICAgICdSdWJ5IE1ldGVvciBTdHJlYW0nOiAnNEU2NycsIC8vIHNwcmVhZCBtYXJrZXJzIGluIFAyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogdGFraW5nIHR3byBkaWZmZXJlbnQgSGlnaC1Qb3dlcmVkIEhvbWluZyBMYXNlcnMgKDRBRDgpXHJcbi8vIFRPRE86IGNvdWxkIGJsYW1lIHRoZSB0ZXRoZXJlZCBwbGF5ZXIgZm9yIFdoaXRlIEFnb255IC8gV2hpdGUgRnVyeSBmYWlsdXJlcz9cclxuXHJcbi8vIFJ1YnkgV2VhcG9uIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNpbmRlckRyaWZ0RXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUnVieUV4IFJ1YnkgQml0IE1hZ2l0ZWsgUmF5JzogJzRBRDInLCAvLyBsaW5lIGFvZXMgZHVyaW5nIGhlbGljb2NsYXdcclxuICAgICdSdWJ5RXggU3Bpa2UgT2YgRmxhbWUgMSc6ICc0QUQzJywgLy8gaW5pdGlhbCBleHBsb3Npb24gZHVyaW5nIGhlbGljb2NsYXdcclxuICAgICdSdWJ5RXggU3Bpa2UgT2YgRmxhbWUgMic6ICc0QjJGJywgLy8gZm9sbG93dXAgaGVsaWNvY2xhdyBleHBsb3Npb25zXHJcbiAgICAnUnVieUV4IFNwaWtlIE9mIEZsYW1lIDMnOiAnNEQwNCcsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5RXggU3Bpa2UgT2YgRmxhbWUgNCc6ICc0RDA1JywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnlFeCBTcGlrZSBPZiBGbGFtZSA1JzogJzRBQ0QnLCAvLyByYXZlbnNjbGF3IGV4cGxvc2lvbiBhdCBlbmRzIG9mIGxpbmVzXHJcbiAgICAnUnVieUV4IFNwaWtlIE9mIEZsYW1lIDYnOiAnNEFDRScsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5RXggVW5kZXJtaW5lJzogJzRBRDAnLCAvLyBncm91bmQgYW9lcyB1bmRlciB0aGUgcmF2ZW5zY2xhdyBwYXRjaGVzXHJcbiAgICAnUnVieUV4IFJ1YnkgUmF5JzogJzRCMDInLCAvLyBmcm9udGFsIGxhc2VyXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxJzogJzRBRDknLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDInOiAnNEFEQScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgMyc6ICc0QUREJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCA0JzogJzRBREUnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDUnOiAnNEFERicsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgNic6ICc0QUUwJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCA3JzogJzRBRTEnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDgnOiAnNEFFMicsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgOSc6ICc0QUUzJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxMCc6ICc0QUU0JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxMSc6ICc0QUU1JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxMic6ICc0QUU2JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxMyc6ICc0QUU3JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxNCc6ICc0QUU4JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxNSc6ICc0QUU5JywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxNic6ICc0QUVBJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxNyc6ICc0RTZCJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxOCc6ICc0RTZDJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAxOSc6ICc0RTZEJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAyMCc6ICc0RTZFJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAyMSc6ICc0RTZGJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAyMic6ICc0RTcwJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IEN1dCBBbmQgUnVuIDEnOiAnNEIwNScsIC8vIHNsb3cgY2hhcmdlIGFjcm9zcyBhcmVuYSBhZnRlciBzdGFja3NcclxuICAgICdSdWJ5RXggQ3V0IEFuZCBSdW4gMic6ICc0QjA2JywgLy8gc2xvdyBjaGFyZ2UgYWNyb3NzIGFyZW5hIGFmdGVyIHN0YWNrc1xyXG4gICAgJ1J1YnlFeCBDdXQgQW5kIFJ1biAzJzogJzRCMDcnLCAvLyBzbG93IGNoYXJnZSBhY3Jvc3MgYXJlbmEgYWZ0ZXIgc3RhY2tzXHJcbiAgICAnUnVieUV4IEN1dCBBbmQgUnVuIDQnOiAnNEIwOCcsIC8vIHNsb3cgY2hhcmdlIGFjcm9zcyBhcmVuYSBhZnRlciBzdGFja3NcclxuICAgICdSdWJ5RXggQ3V0IEFuZCBSdW4gNSc6ICc0RE9EJywgLy8gc2xvdyBjaGFyZ2UgYWNyb3NzIGFyZW5hIGFmdGVyIHN0YWNrc1xyXG4gICAgJ1J1YnlFeCBNZXRlb3IgQnVyc3QnOiAnNEFGMicsIC8vIG1ldGVvciBleHBsb2RpbmdcclxuICAgICdSdWJ5RXggQnJhZGFtYW50ZSc6ICc0RTM4JywgLy8gaGVhZG1hcmtlcnMgd2l0aCBsaW5lIGFvZXNcclxuICAgICdSdWJ5RXggQ29tZXQgSGVhdnkgSW1wYWN0JzogJzRBRjYnLCAvLyBsZXR0aW5nIGEgdGFuayBjb21ldCBsYW5kXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUnVieUV4IFJ1YnkgU3BoZXJlIEJ1cnN0JzogJzRBQ0InLCAvLyBleHBsb2RpbmcgdGhlIHJlZCBtaW5lXHJcbiAgICAnUnVieUV4IEx1bmFyIER5bmFtbyc6ICc0RUIwJywgLy8gXCJnZXQgaW5cIiBmcm9tIFJhdmVuJ3MgSW1hZ2VcclxuICAgICdSdWJ5RXggSXJvbiBDaGFyaW90JzogJzRFQjEnLCAvLyBcImdldCBvdXRcIiBmcm9tIFJhdmVuJ3MgSW1hZ2VcclxuICAgICdSdWJ5RXggSGVhcnQgSW4gVGhlIE1hY2hpbmUnOiAnNEFGQScsIC8vIFdoaXRlIEFnb255L0Z1cnkgc2t1bGwgaGl0dGluZyBwbGF5ZXJzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdSdWJ5RXggSHlzdGVyaWEnOiAnMTI4JywgLy8gTmVnYXRpdmUgQXVyYSBsb29rYXdheSBmYWlsdXJlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdSdWJ5RXggSG9taW5nIExhc2Vycyc6ICc0QUQ2JywgLy8gc3ByZWFkIG1hcmtlcnMgZHVyaW5nIGN1dCBhbmQgcnVuXHJcbiAgICAnUnVieUV4IE1ldGVvciBTdHJlYW0nOiAnNEU2OCcsIC8vIHNwcmVhZCBtYXJrZXJzIGR1cmluZyBQMlxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdSdWJ5RXggU2NyZWVjaCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNEFFRScgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIGludG8gd2FsbCcsXHJcbiAgICAgICAgICAgIGRlOiAnUsO8Y2tzdG/DnyBpbiBkaWUgV2FuZCcsXHJcbiAgICAgICAgICAgIGphOiAn5aOB44G444OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDoh7PlopknLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNoaXZhIFVucmVhbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQWtoQWZhaEFtcGhpdGhlYXRyZVVucmVhbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAvLyBMYXJnZSB3aGl0ZSBjaXJjbGVzLlxyXG4gICAgJ1NoaXZhRXggSWNpY2xlIEltcGFjdCc6ICc1MzdCJyxcclxuICAgIC8vIFwiZ2V0IGluXCIgYW9lXHJcbiAgICAnU2hpdmFFeCBXaGl0ZW91dCc6ICc1Mzc2JyxcclxuICAgIC8vIEF2b2lkYWJsZSB0YW5rIHN0dW4uXHJcbiAgICAnU2hpdmFFeCBHbGFjaWVyIEJhc2gnOiAnNTM3NScsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAvLyAyNzAgZGVncmVlIGF0dGFjay5cclxuICAgICdTaGl2YUV4IEdsYXNzIERhbmNlJzogJzUzNzgnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAvLyBIYWlsc3Rvcm0gc3ByZWFkIG1hcmtlci5cclxuICAgICdTaGl2YUV4IEhhaWxzdG9ybSc6ICc1MzZGJyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gTGFzZXIuICBUT0RPOiBtYXliZSBibGFtZSB0aGUgcGVyc29uIGl0J3Mgb24/P1xyXG4gICAgJ1NoaXZhRXggQXZhbGFuY2hlJzogJzUzNzknLFxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgIC8vIFBhcnR5IHNoYXJlZCB0YW5rIGJ1c3Rlci5cclxuICAgICdTaGl2YUV4IEljZWJyYW5kJzogJzUzNzMnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGl2YUV4IERlZXAgRnJlZXplJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU2hpdmEgYWxzbyB1c2VzIGFiaWxpdHkgNTM3QSBvbiB5b3UsIGJ1dCBpdCBoYXMgYW4gdW5rbm93biBuYW1lLlxyXG4gICAgICAvLyBTbywgdXNlIHRoZSBlZmZlY3QgaW5zdGVhZCBmb3IgZnJlZSB0cmFuc2xhdGlvbi5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzFFNycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gVGhlIGludGVybWlzc2lvbiBhbHNvIGdldHMgdGhpcyBlZmZlY3QsIGJ1dCBmb3IgYSBzaG9ydGVyIGR1cmF0aW9uLlxyXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pID4gMjA7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZURhbmNpbmdQbGFndWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RpdGFuaWEgV29vZFxcJ3MgRW1icmFjZSc6ICczRDUwJyxcclxuICAgIC8vICdUaXRhbmlhIEZyb3N0IFJ1bmUnOiAnM0Q0RScsXHJcbiAgICAnVGl0YW5pYSBHZW50bGUgQnJlZXplJzogJzNGODMnLFxyXG4gICAgJ1RpdGFuaWEgTGVhZnN0b3JtIDEnOiAnM0Q1NScsXHJcbiAgICAnVGl0YW5pYSBQdWNrXFwncyBSZWJ1a2UnOiAnM0Q1OCcsXHJcbiAgICAnVGl0YW5pYSBMZWFmc3Rvcm0gMic6ICczRTAzJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaXRhbmlhIFBoYW50b20gUnVuZSAxJzogJzNENUQnLFxyXG4gICAgJ1RpdGFuaWEgUGhhbnRvbSBSdW5lIDInOiAnM0Q1RScsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUaXRhbmlhIERpdmluYXRpb24gUnVuZSc6ICczRDVCJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZURhbmNpbmdQbGFndWVFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdUaXRhbmlhRXggV29vZFxcJ3MgRW1icmFjZSc6ICczRDJGJyxcclxuICAgIC8vICdUaXRhbmlhRXggRnJvc3QgUnVuZSc6ICczRDJCJyxcclxuICAgICdUaXRhbmlhRXggR2VudGxlIEJyZWV6ZSc6ICczRjgyJyxcclxuICAgICdUaXRhbmlhRXggTGVhZnN0b3JtIDEnOiAnM0QzOScsXHJcbiAgICAnVGl0YW5pYUV4IFB1Y2tcXCdzIFJlYnVrZSc6ICczRDQzJyxcclxuICAgICdUaXRhbmlhRXggV2FsbG9wJzogJzNEM0InLFxyXG4gICAgJ1RpdGFuaWFFeCBMZWFmc3Rvcm0gMic6ICczRDQ5JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaXRhbmlhRXggUGhhbnRvbSBSdW5lIDEnOiAnM0Q0QycsXHJcbiAgICAnVGl0YW5pYUV4IFBoYW50b20gUnVuZSAyJzogJzNENEQnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAvLyBUT0RPOiBUaGlzIGNvdWxkIG1heWJlIGJsYW1lIHRoZSBwZXJzb24gd2l0aCB0aGUgdGV0aGVyP1xyXG4gICAgJ1RpdGFuaWFFeCBUaHVuZGVyIFJ1bmUnOiAnM0QyOScsXHJcbiAgICAnVGl0YW5pYUV4IERpdmluYXRpb24gUnVuZSc6ICczRDRBJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVGl0YW4gVW5yZWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVOYXZlbFVucmVhbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5VbiBXZWlnaHQgT2YgVGhlIExhbmQnOiAnNThGRScsXHJcbiAgICAnVGl0YW5VbiBCdXJzdCc6ICc1QURGJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaXRhblVuIExhbmRzbGlkZSc6ICc1QURDJyxcclxuICAgICdUaXRhblVuIEdhb2xlciBMYW5kc2xpZGUnOiAnNTkwMicsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdUaXRhblVuIFJvY2sgQnVzdGVyJzogJzU4RjYnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnVGl0YW5VbiBNb3VudGFpbiBCdXN0ZXInOiAnNThGNycsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLk1lbW9yaWFNaXNlcmFFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdWYXJpc0V4IEFsZWEgSWFjdGEgRXN0IDEnOiAnNENEMicsXHJcbiAgICAnVmFyaXNFeCBBbGVhIElhY3RhIEVzdCAyJzogJzRDRDMnLFxyXG4gICAgJ1ZhcmlzRXggQWxlYSBJYWN0YSBFc3QgMyc6ICc0Q0Q0JyxcclxuICAgICdWYXJpc0V4IEFsZWEgSWFjdGEgRXN0IDQnOiAnNENENScsXHJcbiAgICAnVmFyaXNFeCBBbGVhIElhY3RhIEVzdCA1JzogJzRDRDYnLFxyXG4gICAgJ1ZhcmlzRXggSWduaXMgRXN0IDEnOiAnNENCNScsXHJcbiAgICAnVmFyaXNFeCBJZ25pcyBFc3QgMic6ICc0Q0M1JyxcclxuICAgICdWYXJpc0V4IFZlbnR1cyBFc3QgMSc6ICc0Q0M3JyxcclxuICAgICdWYXJpc0V4IFZlbnR1cyBFc3QgMic6ICc0Q0M4JyxcclxuICAgICdWYXJpc0V4IEFzc2F1bHQgQ2Fubm9uJzogJzRDRTUnLFxyXG4gICAgJ1ZhcmlzRXggRm9ydGl1cyBSb3RhdGluZyc6ICc0Q0U5JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIERvbid0IGhpdCB0aGUgc2hpZWxkcyFcclxuICAgICdWYXJpc0V4IFJlcGF5JzogJzRDREQnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAvLyBUaGlzIGlzIHRoZSBcInByb3RlYW5cIiBmb3J0aXVzLlxyXG4gICAgJ1ZhcmlzRXggRm9ydGl1cyBQcm90ZWFuJzogJzRDRTcnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnVmFyaXNFeCBNYWdpdGVrIEJ1cnN0JzogJzRDREYnLFxyXG4gICAgJ1ZhcmlzRXggQWV0aGVyb2NoZW1pY2FsIEdyZW5hZG8nOiAnNENFRCcsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1ZhcmlzRXggVGVybWludXMgRXN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNENCNCcsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAxLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBSYWRpYW50IEJyYXZlciBpcyA0RjE2LzRGMTcoeDIpLCBzaG91bGRuJ3QgZ2V0IGhpdCBieSBib3RoP1xyXG4vLyBUT0RPOiBSYWRpYW50IERlc3BlcmFkbyBpcyA0RjE4LzRGMTksIHNob3VsZG4ndCBnZXQgaGl0IGJ5IGJvdGg/XHJcbi8vIFRPRE86IFJhZGlhbnQgTWV0ZW9yIGlzIDRGMUEsIGFuZCBzaG91bGRuJ3QgZ2V0IGhpdCBieSBtb3JlIHRoYW4gMT9cclxuLy8gVE9ETzogbWlzc2luZyBhIHRvd2VyP1xyXG5cclxuLy8gTm90ZTogRGVsaWJlcmF0ZWx5IG5vdCBpbmNsdWRpbmcgcHlyZXRpYyBkYW1hZ2UgYXMgYW4gZXJyb3IuXHJcbi8vIE5vdGU6IEl0IGRvZXNuJ3QgYXBwZWFyIHRoYXQgdGhlcmUncyBhbnkgd2F5IHRvIHRlbGwgd2hvIGZhaWxlZCB0aGUgY3V0c2NlbmUuXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlU2VhdE9mU2FjcmlmaWNlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdXT0wgU29sZW1uIENvbmZpdGVvcic6ICc0RjJBJywgLy8gZ3JvdW5kIHB1ZGRsZXNcclxuICAgICdXT0wgQ29ydXNjYW50IFNhYmVyIEluJzogJzRGMTAnLCAvLyBzYWJlciBpblxyXG4gICAgJ1dPTCBDb3J1c2NhbnQgU2FiZXIgT3V0JzogJzRGMTEnLCAvLyBzYWJlciBvdXRcclxuICAgICdXT0wgSW1idWVkIENvcnVzYW5jZSBPdXQnOiAnNEY0QicsIC8vIHNhYmVyIG91dFxyXG4gICAgJ1dPTCBJbWJ1ZWQgQ29ydXNhbmNlIEluJzogJzRGNEMnLCAvLyBzYWJlciBpblxyXG4gICAgJ1dPTCBTaGluaW5nIFdhdmUnOiAnNEYyNicsIC8vIHN3b3JkIHRyaWFuZ2xlXHJcbiAgICAnV09MIENhdXRlcml6ZSc6ICc0RjI1JyxcclxuICAgICdXT0wgQnJpbXN0b25lIEVhcnRoIDEnOiAnNEYxRScsIC8vIGNvcm5lciBncm93aW5nIGNpcmNsZXMsIGluaXRpYWxcclxuICAgICdXT0wgQnJpbXN0b25lIEVhcnRoIDInOiAnNEYxRicsIC8vIGNvcm5lciBncm93aW5nIGNpcmNsZXMsIGdyb3dpbmdcclxuICAgICdXT0wgRmxhcmUgQnJlYXRoJzogJzRGMjQnLFxyXG4gICAgJ1dPTCBEZWNpbWF0aW9uJzogJzRGMjMnLFxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnV09MIERlZXAgRnJlZXplJzogJzRFNicsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1dPTCBUcnVlIFdhbGtpbmcgRGVhZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEUnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogUmFkaWFudCBCcmF2ZXIgaXMgNEVGNy80RUY4KHgyKSwgc2hvdWxkbid0IGdldCBoaXQgYnkgYm90aD9cclxuLy8gVE9ETzogUmFkaWFudCBEZXNwZXJhZG8gaXMgNEVGOS80RUZBLCBzaG91bGRuJ3QgZ2V0IGhpdCBieSBib3RoP1xyXG4vLyBUT0RPOiBSYWRpYW50IE1ldGVvciBpcyA0RUZDLCBhbmQgc2hvdWxkbid0IGdldCBoaXQgYnkgbW9yZSB0aGFuIDE/XHJcbi8vIFRPRE86IEFic29sdXRlIEhvbHkgc2hvdWxkIGJlIHNoYXJlZD9cclxuLy8gVE9ETzogaW50ZXJzZWN0aW5nIGJyaW1zdG9uZXM/XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlU2VhdE9mU2FjcmlmaWNlRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnV09MRXggU29sZW1uIENvbmZpdGVvcic6ICc0RjBDJywgLy8gZ3JvdW5kIHB1ZGRsZXNcclxuICAgICdXT0xFeCBDb3J1c2NhbnQgU2FiZXIgSW4nOiAnNEVGMicsIC8vIHNhYmVyIGluXHJcbiAgICAnV09MRXggQ29ydXNjYW50IFNhYmVyIE91dCc6ICc0RUYxJywgLy8gc2FiZXIgb3V0XHJcbiAgICAnV09MRXggSW1idWVkIENvcnVzYW5jZSBPdXQnOiAnNEY0OScsIC8vIHNhYmVyIG91dFxyXG4gICAgJ1dPTEV4IEltYnVlZCBDb3J1c2FuY2UgSW4nOiAnNEY0QScsIC8vIHNhYmVyIGluXHJcbiAgICAnV09MRXggU2hpbmluZyBXYXZlJzogJzRGMDgnLCAvLyBzd29yZCB0cmlhbmdsZVxyXG4gICAgJ1dPTEV4IENhdXRlcml6ZSc6ICc0RjA3JyxcclxuICAgICdXT0xFeCBCcmltc3RvbmUgRWFydGgnOiAnNEYwMCcsIC8vIGNvcm5lciBncm93aW5nIGNpcmNsZXMsIGdyb3dpbmdcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1dPTEV4IERlZXAgRnJlZXplJzogJzRFNicsIC8vIGZhaWxpbmcgQWJzb2x1dGUgQmxpenphcmQgSUlJXHJcbiAgICAnV09MRXggRGFtYWdlIERvd24nOiAnMjc0JywgLy8gZmFpbGluZyBBYnNvbHV0ZSBGbGFzaFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnV09MRXggQWJzb2x1dGUgU3RvbmUgSUlJJzogJzRFRUInLCAvLyBwcm90ZWFuIHdhdmUgaW1idWVkIG1hZ2ljXHJcbiAgICAnV09MRXggRmxhcmUgQnJlYXRoJzogJzRGMDYnLCAvLyB0ZXRoZXIgZnJvbSBzdW1tb25lZCBiYWhhbXV0c1xyXG4gICAgJ1dPTEV4IFBlcmZlY3QgRGVjaW1hdGlvbic6ICc0RjA1JywgLy8gc21uL3dhciBwaGFzZSBtYXJrZXJcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnV29sRXggS2F0b24gU2FuIFNoYXJlJzogJzRFRkUnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdXT0xFeCBUcnVlIFdhbGtpbmcgRGVhZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4RkYnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV09MRXggVG93ZXInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzRGMDQnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbWlzdGFrZToge1xyXG4gICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICBlbjogJ01pc3NlZCBUb3dlcicsXHJcbiAgICAgICAgICBkZTogJ1R1cm0gdmVycGFzc3QnLFxyXG4gICAgICAgICAgZnI6ICdUb3VyIG1hbnF1w6llJyxcclxuICAgICAgICAgIGphOiAn5aGU44KS6LiP44G+44Gq44GL44Gj44GfJyxcclxuICAgICAgICAgIGNuOiAn5rKh6Lip5aGUJyxcclxuICAgICAgICAgIGtvOiAn7J6l7YyQIOyLpOyImCcsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV09MRXggVHJ1ZSBIYWxsb3dlZCBHcm91bmQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzRGNDQnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gRm9yIEJlcnNlcmsgYW5kIERlZXAgRGFya3NpZGVcclxuICAgICAgaWQ6ICdXT0xFeCBNaXNzZWQgSW50ZXJydXB0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNTE1NicsICc1MTU4J10gfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNUaHJvdHRsZT86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxuICBqYWdkVGV0aGVyPzogeyBbc291cmNlSWQ6IHN0cmluZ106IHN0cmluZyB9O1xyXG59XHJcblxyXG4vLyBUT0RPOiBGSVggbHVtaW5vdXMgYWV0aGVyb3BsYXNtIHdhcm5pbmcgbm90IHdvcmtpbmdcclxuLy8gVE9ETzogRklYIGRvbGwgZGVhdGggbm90IHdvcmtpbmdcclxuLy8gVE9ETzogZmFpbGluZyBoYW5kIG9mIHBhaW4vcGFydGluZyAoY2hlY2sgZm9yIGhpZ2ggZGFtYWdlPylcclxuLy8gVE9ETzogbWFrZSBzdXJlIGV2ZXJ5Ym9keSB0YWtlcyBleGFjdGx5IG9uZSBwcm90ZWFuIChyYXRoZXIgdGhhbiB3YXRjaGluZyBkb3VibGUgaGl0cylcclxuLy8gVE9ETzogdGh1bmRlciBub3QgaGl0dGluZyBleGFjdGx5IDI/XHJcbi8vIFRPRE86IHBlcnNvbiB3aXRoIHdhdGVyL3RodW5kZXIgZGVidWZmIGR5aW5nXHJcbi8vIFRPRE86IGJhZCBuaXNpIHBhc3NcclxuLy8gVE9ETzogZmFpbGVkIGdhdmVsIG1lY2hhbmljXHJcbi8vIFRPRE86IGRvdWJsZSByb2NrZXQgcHVuY2ggbm90IGhpdHRpbmcgZXhhY3RseSAyPyAob3IgdGFua3MpXHJcbi8vIFRPRE86IHN0YW5kaW5nIGluIHNsdWRnZSBwdWRkbGVzIGJlZm9yZSBoaWRkZW4gbWluZT9cclxuLy8gVE9ETzogaGlkZGVuIG1pbmUgZmFpbHVyZT9cclxuLy8gVE9ETzogZmFpbHVyZXMgb2Ygb3JkYWluZWQgbW90aW9uIC8gc3RpbGxuZXNzXHJcbi8vIFRPRE86IGZhaWx1cmVzIG9mIHBsYWludCBvZiBzZXZlcml0eSAodGV0aGVycylcclxuLy8gVE9ETzogZmFpbHVyZXMgb2YgcGxhaW50IG9mIHNvbGlkYXJpdHkgKHNoYXJlZCBzZW50ZW5jZSlcclxuLy8gVE9ETzogb3JkYWluZWQgY2FwaXRhbCBwdW5pc2htZW50IGhpdHRpbmcgbm9uLXRhbmtzXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRXBpY09mQWxleGFuZGVyVWx0aW1hdGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RFQSBTbHVpY2UnOiAnNDlCMScsXHJcbiAgICAnVEVBIFByb3RlYW4gV2F2ZSAxJzogJzQ4MjQnLFxyXG4gICAgJ1RFQSBQcm90ZWFuIFdhdmUgMic6ICc0OUI1JyxcclxuICAgICdURUEgU3BpbiBDcnVzaGVyJzogJzRBNzInLFxyXG4gICAgJ1RFQSBTYWNyYW1lbnQnOiAnNDg1RicsXHJcbiAgICAnVEVBIFJhZGlhbnQgU2FjcmFtZW50JzogJzQ4ODYnLFxyXG4gICAgJ1RFQSBBbG1pZ2h0eSBKdWRnbWVudCc6ICc0ODkwJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdURUEgSGF3ayBCbGFzdGVyJzogJzQ4MzAnLFxyXG4gICAgJ1RFQSBDaGFrcmFtJzogJzQ4NTUnLFxyXG4gICAgJ1RFQSBFbnVtZXJhdGlvbic6ICc0ODUwJyxcclxuICAgICdURUEgQXBvY2FseXB0aWMgUmF5JzogJzQ4NEMnLFxyXG4gICAgJ1RFQSBQcm9wZWxsZXIgV2luZCc6ICc0ODMyJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1RFQSBQcm90ZWFuIFdhdmUgRG91YmxlIDEnOiAnNDlCNicsXHJcbiAgICAnVEVBIFByb3RlYW4gV2F2ZSBEb3VibGUgMic6ICc0ODI1JyxcclxuICAgICdURUEgRmx1aWQgU3dpbmcnOiAnNDlCMCcsXHJcbiAgICAnVEVBIEZsdWlkIFN0cmlrZSc6ICc0OUI3JyxcclxuICAgICdURUEgSGlkZGVuIE1pbmUnOiAnNDg1MicsXHJcbiAgICAnVEVBIEFscGhhIFN3b3JkJzogJzQ4NkInLFxyXG4gICAgJ1RFQSBGbGFyZXRocm93ZXInOiAnNDg2QicsXHJcbiAgICAnVEVBIENoYXN0ZW5pbmcgSGVhdCc6ICc0QTgwJyxcclxuICAgICdURUEgRGl2aW5lIFNwZWFyJzogJzRBODInLFxyXG4gICAgJ1RFQSBPcmRhaW5lZCBQdW5pc2htZW50JzogJzQ4OTEnLFxyXG4gICAgLy8gT3B0aWNhbCBTcHJlYWRcclxuICAgICdURUEgSW5kaXZpZHVhbCBSZXByb2JhdGlvbic6ICc0ODhDJyxcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAvLyBPcHRpY2FsIFN0YWNrXHJcbiAgICAnVEVBIENvbGxlY3RpdmUgUmVwcm9iYXRpb24nOiAnNDg4RCcsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBcInRvbyBtdWNoIGx1bWlub3VzIGFldGhlcm9wbGFzbVwiXHJcbiAgICAgIC8vIFdoZW4gdGhpcyBoYXBwZW5zLCB0aGUgdGFyZ2V0IGV4cGxvZGVzLCBoaXR0aW5nIG5lYXJieSBwZW9wbGVcclxuICAgICAgLy8gYnV0IGFsc28gdGhlbXNlbHZlcy5cclxuICAgICAgaWQ6ICdURUEgRXhoYXVzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQ4MUYnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiBtYXRjaGVzLnRhcmdldCA9PT0gbWF0Y2hlcy5zb3VyY2UsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdsdW1pbm91cyBhZXRoZXJvcGxhc20nLFxyXG4gICAgICAgICAgICBkZTogJ0x1bWluaXN6ZW50ZXMgw4R0aGVyb3BsYXNtYScsXHJcbiAgICAgICAgICAgIGZyOiAnw4l0aMOpcm9wbGFzbWEgbHVtaW5ldXgnLFxyXG4gICAgICAgICAgICBqYTogJ+WFieaAp+eIhumbtycsXHJcbiAgICAgICAgICAgIGNuOiAn5YWJ5oCn54iG6Zu3JyxcclxuICAgICAgICAgICAga286ICfruZvsnZgg7Y+t66KwJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVEVBIERyb3BzeScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxMjEnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVEVBIFRldGhlciBUcmFja2luZycsXHJcbiAgICAgIHR5cGU6ICdUZXRoZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6ICdKYWdkIERvbGwnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5qYWdkVGV0aGVyID8/PSB7fTtcclxuICAgICAgICBkYXRhLmphZ2RUZXRoZXJbbWF0Y2hlcy5zb3VyY2VJZF0gPSBtYXRjaGVzLnRhcmdldDtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVEVBIFJlZHVjaWJsZSBDb21wbGV4aXR5JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNDgyMScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgLy8gVGhpcyBtYXkgYmUgdW5kZWZpbmVkLCB3aGljaCBpcyBmaW5lLlxyXG4gICAgICAgICAgbmFtZTogZGF0YS5qYWdkVGV0aGVyID8gZGF0YS5qYWdkVGV0aGVyW21hdGNoZXMuc291cmNlSWRdIDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0RvbGwgRGVhdGgnLFxyXG4gICAgICAgICAgICBkZTogJ1B1cHBlIFRvdCcsXHJcbiAgICAgICAgICAgIGZyOiAnUG91cMOpZSBtb3J0ZScsXHJcbiAgICAgICAgICAgIGphOiAn44OJ44O844Or44GM5q2744KT44GgJyxcclxuICAgICAgICAgICAgY246ICfmta7lo6vlvrfmrbvkuqEnLFxyXG4gICAgICAgICAgICBrbzogJ+yduO2YleydtCDso73snYwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdURUEgRHJhaW5hZ2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0ODI3JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5wYXJ0eS5pc1RhbmsobWF0Y2hlcy50YXJnZXQpLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIG5hbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RFQSBUaHJvdHRsZSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzJCQycgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1Rocm90dGxlID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc1Rocm90dGxlW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RFQSBUaHJvdHRsZSBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzJCQycgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1Rocm90dGxlID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc1Rocm90dGxlW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdURUEgVGhyb3R0bGUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMkJDJyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgLSAwLjUsXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmICghZGF0YS5oYXNUaHJvdHRsZSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzVGhyb3R0bGVbbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEJhbGxvb24gUG9wcGluZy4gIEl0IHNlZW1zIGxpa2UgdGhlIHBlcnNvbiB3aG8gcG9wcyBpdCBpcyB0aGVcclxuICAgICAgLy8gZmlyc3QgcGVyc29uIGxpc3RlZCBkYW1hZ2Utd2lzZSwgc28gdGhleSBhcmUgbGlrZWx5IHRoZSBjdWxwcml0LlxyXG4gICAgICBpZDogJ1RFQSBPdXRidXJzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQ4MkEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIHN1cHByZXNzU2Vjb25kczogNSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLnNvdXJjZSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU21pbGV0b24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBXYW5kZXJlciBFbXB0eSBCZWxlYWd1ZXInOiAnNjk2NCcsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBMdW5hdGVuZGVyIExhIFZpZSBlbiBFcGluZXMnOiAnNjk1RScsIC8vIGZyb250YWwgbGluZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBMdW5hdGVuZGVyIEFudGhpbmUgTmVlZGxlcyc6ICc2OTVGJywgLy8gPz9cclxuICAgICdTbWlsZXRvbiBTbWlsZXkgUGFub3B0IFJldGluYWwgR2xhcmUnOiAnNjk2QScsIC8vIGZyb250YWwgY29uZVxyXG4gICAgJ1NtaWxldG9uIEZhY2UgTWl4ZWQgRmVlbGluZ3MnOiAnNjczOCcsIC8vIGxpbmVzIGJldHdlZW4gcmVsYXRpdmVseSBzbWFsbCBmYWNlc1xyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBTY3JhcGVyIEhlYWRzcGluJzogJzY5NUQnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdTbWlsZXRvbiBTbWlsZXkgRGFwaG5pYSBBY3JpZCBTdHJlYW0nOiAnNjk2MCcsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBNZXRhbGxvaWQgTGF0dGljZSc6ICc2OTY5JywgLy8gbG9uZyBsaW5lIGFvZVxyXG4gICAgJ1NtaWxldG9uIEZyYW1ld29ya2VyIExlYXAgRm9yd2FyZCc6ICc2NzQ2JywgLy8ganVtcCB0byBsYXJnZSBjaXJjbGVcclxuICAgICdTbWlsZXRvbiBGcmFtZXdvcmtlciBQcmludGVkIFdvcmtlciBMZWFwIEZvcndhcmQnOiAnNjc0NycsIC8vIGp1bXAgdG8gbGFyZ2UgY2lyY2xlXHJcbiAgICAnU21pbGV0b24gRnJhbWV3b3JrZXIgT21uaWRpcmVjdGlvbmFsIE9uc2xhdWdodCc6ICc2NzQ5JywgLy8gYWx0ZXJuYXRpbmcgcGlud2hlZWwnXHJcbiAgICAnU21pbGV0b24gU21pbGV5IER5bmFtaXRlIEJ1cnN0JzogJzY5NkInLCAvLyBxdWljayBjZW50ZXJlZCBjaXJjbGUgbmVhciBkZWF0aFxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBSZWdvbGl0aCBNZXRhbW9ycGhpYyBCbGFzdCc6ICc2OTY3JywgLy8gbGFyZ2UgY29uYWxcclxuICAgICdTbWlsZXRvbiBTbWlsZXkgUmVnb2xpdGggT3JvZ2VuaWMgU3Rvcm0nOiAnNjk2OCcsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBTdXBwb3J0ZXIgRmlyZSBGaWdodGVyJzogJzY5NUMnLCAvLyBkb251dCBhb2VcclxuICAgICdTbWlsZXRvbiBTbWlsZXkgU3dlZXBlciBTZXdlciBXYXRlciAxJzogJzY5NjInLCAvLyBmcm9udC9iYWNrIGNsZWF2ZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBTd2VlcGVyIFNld2VyIFdhdGVyIDInOiAnNjk2MycsIC8vIGZyb250L2JhY2sgY2xlYXZlXHJcbiAgICAnU21pbGV0b24gVGhlIEJpZyBDaGVlc2UgQm9tYiBJcm9uIEtpc3MnOiAnNjc0RCcsIC8vIG1vdmluZyBib21iIGNpcmN1bGFyIGV4cGxvc2lvblxyXG4gICAgJ1NtaWxldG9uIFRoZSBCaWcgQ2hlZXNlIEV4Y2F2YXRpb24gQm9tYiBFeGNhdmF0ZWQnOiAnNkMzMicsIC8vIG1pbmUgZXhwbG9zaW9uIGFmdGVyIEV4cGxvc2l2ZSBQb3dlclxyXG4gICAgJ1NtaWxldG9uIFRoZSBCaWcgQ2hlZXNlIFJpZ2h0IERpc2Fzc2VtYmxlcic6ICc2NzRGJywgLy8gcmlnaHQgY2xlYXZlXHJcbiAgICAnU21pbGV0b24gVGhlIEJpZyBDaGVlc2UgTGVmdCBEaXNhc3NlbWJsZXInOiAnNjc1MCcsIC8vIGxlZnQgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTbWlsZXRvbiBGYWNlIFRlbXBlciwgVGVtcGVyJzogJzY3NDAnLCAvLyBzcHJlYWRcclxuICAgICdTbWlsZXRvbiBUaGUgQmlnIENoZWVzZSBMZXZlbGluZyBNaXNzaWxlcyc6ICcnLCAvLyBzcHJlYWRcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnU21pbGV0b24gVGhlIEJpZyBDaGVlc2UgRWxlY3RyaWMgQXJjJzogJzY3NTMnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU21pbGV0b24gRmFjZSBXcm9uZyBGYWNlJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gQUNCID0gU21pbGV5IEZhY2VcclxuICAgICAgLy8gQUNDID0gRnJvd255IEZhY2VcclxuICAgICAgLy8gVGFraW5nIHRoaXMgbXVsdGlwbGUgdGltZXMgc3RhY2tzIHRoZSBlZmZlY3QuXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdBQ1tCQ10nLCBzb3VyY2U6ICdGYWNlJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlSW50KG1hdGNoZXMuY291bnQpID4gMSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5lZmZlY3R9IHgke21hdGNoZXMuY291bnR9YCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuZWZmZWN0fSB4JHttYXRjaGVzLmNvdW50fWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmVmZmVjdH0geCR7bWF0Y2hlcy5jb3VudH1gLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFpdGlhc2NvcGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0FpdGlhc2NvcGUgTGl2aWEgQWdsYWVhIENsaW1iJzogJzY0NDQnLCAvLyBkaWFnb25hbCBxdWFkcmFudCBjbGVhdmVcclxuICAgICdBaXRpYXNjb3BlIExpdmlhIEFnbGFlYSBTaG90IDEnOiAnNjQ0NicsIC8vIGxpbmVzXHJcbiAgICAnQWl0aWFzY29wZSBMaXZpYSBBZ2xhZWEgU2hvdCAyJzogJzY0NDcnLCAvLyBsaW5lcyBjb21pbmcgYmFja1xyXG4gICAgJ0FpdGlhc2NvcGUgTGl2aWEgSWduaXMgQW1vcmlzJzogJzY0NEMnLCAvLyBPZGkgZXQgQW1vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdBaXRpYXNjb3BlIExpdmlhIERpc3BhcmFnZW1lbnQnOiAnNjQ0QScsIC8vIHdpZGUgY29uYWxcclxuICAgICdBaXRpYXNjb3BlIFNpbmtpbmcgRGVzaXJlIFRoZSBQYXRoIG9mIEF2YXJpY2UnOiAnNkIxQicsIC8vIGxpbmUgYW9lXHJcbiAgICAnQWl0aWFzY29wZSBTaW5raW5nIFBhcnRpYWxpdHkgVW5yaWdodGZ1bCBDbGFpbSc6ICc2QjFDJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnQWl0aWFzY29wZSBTaW5raW5nIERpc3NlbnNpb24gV2hpc3BlciBvZiBPdXIgRGlzY29udGVudCc6ICc2QjFEJywgLy8gY29uYWxcclxuICAgICdBaXRpYXNjb3BlIFJoaXRhaHR5biBUYXJ0YXJlYW4gU3BhcmsnOiAnNjQ1NycsIC8vIGxhc2VyIGxpbmUgYW9lXHJcbiAgICAnQWl0aWFzY29wZSBSaGl0YWh0eW4gU2hpZWxkIFNrZXdlcic6ICc2NDUwJywgLy8gY2hhcmdlXHJcbiAgICAnQWl0aWFzY29wZSBSaGl0YWh0eW4gU2hyYXBuZWwgU2hlbGwnOiAnNjQ1NCcsXHJcbiAgICAnQWl0aWFzY29wZSBTaW5raW5nIFJlZ3JldCBMb3N0IE9wcG9ydHVuaXR5JzogJzZCMUYnLCAvLyBhYnNvbHV0ZWx5IGdpZ2FudGljIGNvbmFsXHJcbiAgICAnQWl0aWFzY29wZSBBbW9uIFRodW5kYWdhIEZvcnRlIDEnOiAnNjQ1QicsIC8vIGluaXRpYWwgcGlud2hlZWxcclxuICAgICdBaXRpYXNjb3BlIEFtb24gVGh1bmRhZ2EgRm9ydGUgMic6ICc2NDVDJywgLy8gc2Vjb25kIHBpbndoZWVsXHJcbiAgICAnQWl0aWFzY29wZSBBbW9uIEVwb2RlJzogJzY0NUYnLCAvLyBjb2luIGxhc2VyXHJcbiAgICAnQWl0aWFzY29wZSBBbW9uIFJpZ2h0IEZpcmFnYSBGb3J0ZSc6ICc2NDYwJywgLy8gcmlnaHQgY2xlYXZlXHJcbiAgICAnQWl0aWFzY29wZSBBbW9uIExlZnQgRmlyYWdhIEZvcnRlJzogJzY0NjEnLCAvLyBsZWZ0IGNsZWF2ZVxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBFcnVwdGlvbiBGb3J0ZSc6ICc2NDY4JywgLy8gdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBEcmVhbXMgb2YgSWNlJzogJzZDNkMnLCAvLyBzaGl2YSBpY2ljbGUgYXBwZWFyaW5nXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnQWl0aWFzY29wZSBSaGl0YWh0eW4gSW1wYWN0JzogJzY0NEYnLCAvLyB3YWxscyBhcHBlYXJpbmcgZHVyaW5nIFZleGlsbGF0aW8gY2FzdFxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBDdXJ0YWluIENhbGwnOiAnNjQ2NicsIC8vIGxpbmUgb2Ygc2lnaHRcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBGaWd1cmUgb3V0IGhvdyB0byBkZXRlcm1pbmUgd2hldGhlciBzb21lb25lIGFjdGl2ZWx5IHN0b29kIGluIEJvdW5kbGVzcyBQYWluXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVUb3dlck9mQmFiaWwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0JhYmlsIE5pbXJvZCBDYW5ub24gU2hvdCc6ICc2REUxJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgYmVmb3JlIGZpcnN0IGJvc3NcclxuICAgICdCYWJpbCBUZW1wZXJlZCBJbXBlcmlhbCBTcHJlYWQgU2hvdCc6ICc2REUyJywgLy8gQ29uYWwgQW9FLCBiZWZvcmUgZmlyc3QgYm9zc1xyXG4gICAgJ0JhYmlsIFNhdGVsbGl0ZSBJbmNlbmRpYXJ5IENpcmNsZSc6ICc2REUzJywgLy8gTGFyZ2UgZG9udXQgQW9FLCBiZWZvcmUgZmlyc3QgYm9zc1xyXG4gICAgJ0JhYmlsIFJlYXBlciBNYWdpdGVrIENhbm5vbic6ICc2REU0JywgLy8gQU9FIGNpcmNsZSwgYmVmb3JlIGZpcnN0IGJvc3NcclxuXHJcbiAgICAnQmFiaWwgQmFybmFiYXMgRWxlY3Ryb21hZ25ldGljIFJlbGVhc2UgMSc6ICc2MkYxJywgLy8gQ2VudGVyIEFvRSBjaXJjbGUsIGJvc3MgMVxyXG4gICAgJ0JhYmlsIEJhcm5hYmFzIEVsZWN0cm9tYWduZXRpYyBSZWxlYXNlIDInOiAnNjJFRicsIC8vIENlbnRlciBtYWduZXRpYyBsaW5lLCBib3NzIDFcclxuICAgICdCYWJpbCBCYXJuYWJhcyBSb2xsaW5nIFNjcmFwbGluZSc6ICc2MkVCJywgLy8gQ2VudGVyIEFvRSBjaXJjbGUsIG5vIG1hZ25ldHMsIGJvc3MgMVxyXG4gICAgJ0JhYmlsIFRodW5kZXJiYWxsIFNob2NrJzogJzYyRjInLCAvLyBDYXJkaW5hbC9pbnRlcmNhcmRpbmFsIEFvRSBjaXJjbGVzLCBib3NzIDFcclxuXHJcbiAgICAnQmFiaWwgUmVhcmd1YXJkIENlcm1ldCBQaWxlJzogJzZERTgnLCAvLyBMaW5lIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0JhYmlsIENvbG9zc3VzIEdyYW5kIFN3b3JkJzogJzZERTknLCAvLyBGcm9udGFsIGNvbmUsIGJlZm9yZSBib3NzIDJcclxuICAgICdCYWJpbCBBdmVuZ2VyIFNob3VsZGVyIENhbm5vbic6ICc2REVBJywgLy8gQW9FIGNpcmNsZSwgYmVmb3JlIGJvc3MgMlxyXG5cclxuICAgICdCYWJpbCBNYWdpdGVrIENoYWtyYW0gTWlnaHR5IEJsb3cnOiAnNjJGNCcsIC8vIEFyZW5hIEFvRSwgaWYgbm90IG1pbmksIGJvc3MgMlxyXG4gICAgJ0JhYmlsIEx1Z2FlIFN1cmZhY2UgTWlzc2lsZSc6ICc2MkY3JywgLy8gVGFyZ2V0ZWQgQW9FIGNpcmNsZXMgZnJvbSBNYWdpdGVrIE1pc3NpbGUsIGJvc3MgMlxyXG4gICAgJ0JhYmlsIE1hZ2l0ZWsgRXhwbG9zaXZlIEV4cGxvc2lvbic6ICc2MkY5JywgLy8gQm9tYmVybWFuIGxpbmUgQW9FLCBib3NzIDJcclxuICAgICdCYWJpbCBMdWdhZSBNYWdpdGVrIFJheSc6ICc2MkZDJywgLy8gRnJvbnRhbCBsaW5lIEFvRSwgYm9zcyAyXHJcblxyXG4gICAgJ0JhYmlsIFpvdCBTa3kgQXJtb3IgR2FybGVhbiBGaXJlJzogJzVFNEEnLCAvLyBDaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuICAgICdCYWJpbCBBcm1vcmVkIFdlYXBvbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICc1RTUzJywgLy8gQ2lyY2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQmFiaWwgTWFnaXRlayBDcmFuZSBDcmFuZSBHYW1lJzogJzZDMzUnLCAvLyBMYXJnZSBlbnZpcm9ubWVudGFsIGNpcmNsZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0JhYmlsIEhleGFkcm9uZSAyLVRvbnplIE1hZ2l0ZWsgTWlzc2lsZSc6ICc2REVDJywgLy8gQ2lyY2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQmFiaWwgUm9hZGVyIFJ1c2gnOiAnNkRFRCcsIC8vIFJlY3RhbmdsZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0JhYmlsIEh5cGVydHVuZWQgU3BlY2ltZW4gUmlnaHQtYXJtIEJsYXN0ZXInOiAnNkRGMCcsIC8vIFJlY3RhbmdsZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG5cclxuICAgICdCYWJpbCBBbmltYSBQaGFudG9tIFBhaW4nOiAnNjJGRicsIC8vIEx1bmFyIE5haWwgc3F1YXJlcywgYm9zcyAzXHJcbiAgICAnQmFiaWwgTWVnYS1ncmF2aXRvbiBHcmF2aXRvbiBTcGFyayc6ICc2MzAyJywgLy8gVGV0aGVyIGZhaWx1cmUsIGJvc3MgM1xyXG4gICAgJ0JhYmlsIEFuaW1hIFBhdGVyIFBhdGlhZSc6ICc2MzA2JywgLy8gTGluZSBBb0UsIGJvc3MgM1xyXG4gICAgJ0JhYmlsIEFuaW1hIE9ibGl2aWF0aW5nIENsYXcnOiAnNjMwQScsIC8vIENoYXNlIHB1ZGRsZSBpbml0aWFsIGNpcmNsZSwgYm9zcyAzXHJcbiAgICAnQmFiaWwgSXJvbiBOYWlsIE9ibGl2aWF0aW5nIENsYXcnOiAnNjMwQycsIC8vIElyb24gTmFpbCBzcGF3biBjaXJjbGVzLCBib3NzIDNcclxuICAgICdCYWJpbCBJcm9uIE5haWwgQ2hhcm5lbCBDbGF3JzogJzYzMEQnLCAvLyBMaW5lIGRhc2hlcywgYm9zcyAzXHJcbiAgICAnQmFiaWwgQW5pbWEgQ29mZmluIFNjcmF0Y2gnOiAnNjMwRScsIC8vIENoYXNlIHB1ZGRsZXMsIGJvc3MgM1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQmFiaWwgQmFybmFiYXMgRWxlY3Ryb2N1dGlvbic6ICc4MjYnLCAvLyBBcmVuYSBlZGdlIGVmZmVjdCwgYm9zcyAxXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdCYWJpbCBBbmltYSBFcnVwdGluZyBQYWluJzogJzYzMDgnLCAvLyBQdXJwbGUgc3ByZWFkIGNpcmNsZXMsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdCYWJpbCBCYXJuYWJhcyBTaG9ja2luZyBGb3JjZSc6ICc2MkVDJywgLy8gU3RhY2sgbWFya2VyLCBib3NzIDFcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIFJlYWNoaW5nIDggc3RhY2tzIG9mIEJyZWF0aGxlc3MgaXMgYSBkZWF0aFxyXG4gICAgICBpZDogJ0JhYmlsIEx1Z2FlIEJyZWF0aGxlc3MnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnQTcwJywgY291bnQ6ICc3JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1N1ZmZvY2F0ZWQnLFxyXG4gICAgICAgICAgICBkZTogJ0Vyc3RpY2t0JyxcclxuICAgICAgICAgICAga286ICfsp4jsi50nLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBQcmFwdGkgU2lkZGhpIGlzIGEgbWlzdGFrZSBvbiBpdHMgb3duIGJlZm9yZSBzdG9wXHJcbi8vIGFuZCBhZnRlciBzdG9wLCBvbmx5IGEgbWlzdGFrZSBmb3IgdGhlIHBlcnNvbiB3aXRob3V0IHN0b3AuXHJcbi8vIFRPRE86IGRvZXMgTWluZHVydXZhIGRvIGFueXRoaW5nIG9uIGZpbmFsIGZpZ2h0IGlmIGxlZnQgYWxpdmUgZm9yIGxvbmc/XHJcbi8vIFRPRE86IFByYWthbXlhIFNpZGRoaSBpcyBhIHJhaWR3aWRlIGVhcmxpZXIsIGJ1dCBvbmUgbG9nIGhhZCBpdCBsb29rIGxpa2UgYSBncm91bmQgYW9lP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVUb3dlck9mWm90LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdab3QgQXJtb3JlZCBGaWVuZCBTb3BvcmlmaWMgR2FzJzogJzZDRTInLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdab3QgTWluZHVydXZhIE1hbnVzeWEgQmxpenphcmQgSUlJJzogJzYyOTYnLCAvLyBibGl6emFyZCBwaW53aGVlbFxyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBGaXJlIElJSSc6ICc2Mjk1JywgLy8gZmlyZSBkb251dFxyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBUaHVuZGVyIElJSSc6ICc2Mjk3JywgLy8gdGh1bmRlciBcImNyb3NzXCIgY2lyY2xlc1xyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBCaW8gSUlJJzogJzYyOTgnLCAvLyAxODAgZGVncmVlIGZyb250YWwgY2xlYXZlXHJcbiAgICAnWm90IERlYXRoIENsYXcgU2hyZWQnOiAnNTRFRCcsIC8vIGxpbmUgYW9lXHJcbiAgICAnWm90IEh5cGVydHVuZWQgTGVmdC1Bcm0gU2xhc2gnOiAnNTRFQycsIC8vIGZyb250YWwgY29uYWxcclxuICAgICdab3QgU2FuZHVydXZhIEJlcnNlcmtlciBTcGhlcmUgU3BoZXJlIFNoYXR0ZXInOiAnNjJBNCcsIC8vIGNpcmNsZXMgZHVyaW5nIEV4cGxvc2l2ZSBGb3JjZVxyXG4gICAgJ1pvdCBQcmVkYXRvciBNYWdpdGVrIFJheSc6ICc1RTRGJywgLy8gbG9uZyBsaW5lIGFvZVxyXG4gICAgJ1pvdCBSb2FkZXIgSGF5d2lyZSc6ICc1RTUxJywgLy8gbGluZSBhb2UgY2hhcmdlXHJcbiAgICAnWm90IE1hcmsgSUkgWm90IENvbG9zc3VzIEV4aGF1c3QnOiAnNUU0QicsIC8vIGxvbmcgbGluZSBhb2VcclxuICAgICdab3QgQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnNUU1MycsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgQmxpenphcmQgSUlJIDEnOiAnNjJCMicsIC8vIGxpbmVzL3BpbndoZWVsc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgQmxpenphcmQgSUlJIDInOiAnNjJCMycsIC8vIGxpbmVzL3BpbndoZWVsc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgVGh1bmRlciBJSUkgMSc6ICc2MkI1JywgLy8gbGluZXMvY2lyY2xlc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgVGh1bmRlciBJSUkgMic6ICc2MkI2JywgLy8gbGluZXMvY2lyY2xlc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgRmlyZSBJSUkgMSc6ICc2MkFGJywgLy8gbGluZXMvZG9udXRzXHJcbiAgICAnWm90IENpbmR1cnV2YSBEZWx0YSBGaXJlIElJSSAyJzogJzYyQjAnLCAvLyBsaW5lcy9kb251dHNcclxuICAgICdab3QgQ2luZHVydXZhIFByYXB0aSBTaWRkaGknOiAnNjJCQicsIC8vIE1pbmR1cnV2YSBsaW5lIGR1cmluZyBmaW5hbCBib3NzXHJcbiAgICAnWm90IENpbmR1cnV2YSBCZXJzZXJrZXIgU3BoZXJlIFNwaGVyZSBTaGF0dGVyJzogJzYyQkYnLCAvLyBFeHBsb3NpdmUgRm9yY2UgZHVyaW5nIGZpbmFsIGJvc3NcclxuICAgICdab3QgQ2luZHVydXZhIFByYWthbXlhIFNpZGRoaSc6ICc2MkJFJywgLy8gPz8gY2FzdGVkIGJ5IFNpbmR1cnV2YSBhZnRlciBNaW5kdXJ1dmEgaGFzIGRpZWRcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1pvdCBTYW5kdXJ1dmEgUHJhcHRpIFNpZGRoaSc6ICc2MkE4JywgLy8gdGFyZ2V0ZWQgbGluZSwgc29tZXRpbWVzIHdpdGggc3RvcFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogZG8gdGFua2J1c3RlcnMgY2xlYXZlP1xyXG4vLyBUT0RPOiB3aGF0J3MgdGhlIGVmZmVjdCBmb3IgcnVubmluZyBpbnRvIHRoZSBvdXRlciBlZGdlIG9uIFRlcm1pbnVzIFdyZWNrZXI/XHJcbi8vIFRPRE86IHdoYXQncyB0aGUgZWZmZWN0IGZvciBydW5uaW5nIGludG8gdGhlIG91dGVyIHJpbmcgb24gU3ZhcmJoYW51P1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5WYW5hc3BhdGksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBUcmFtcGxlciBUcmVtYmxvcic6ICc2QzIyJywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIElkb2xpemVyIERlYWRseSBUZW50YWNsZXMnOiAnNkNERCcsIC8vIGNvbmFsXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFZpdHJpb2wnOiAnNjIzMicsIC8vIE1vdXRoIE9mZiBtb3V0aCBjaXJjbGVzXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFdoYXQgSXMgUmlnaHQnOiAnNjIzMycsIC8vIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBTbmF0Y2hlciBXaGF0IElzIExlZnQnOiAnNjIzNCcsIC8vIGxlZnQgY2xlYXZlXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNwcmludGVyIEhvbGxvdyBTcGlrZSc6ICc2QzFGJywgLy8gbG9uZyBsaW5lIGFvZVxyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBIb3Jyb3IgQmVsbG93cyc6ICc2QzFFJywgLy8gOTAgZGVncmVlIGNvbmFsXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIEJlbGx3ZXRoZXIgV2luZHMgT2YgRGVzcGFpcic6ICc2Q0RDJywgLy8gbGluZSBhb2VcclxuICAgICdWYW5hc3BhdGkgU3ZhcmJoYW51IENoYW90aWMgVW5kZXJjdXJyZW50IFB1cnBsZSc6ICc2MjRBJywgLy8gcHVycGxlIHNxdWFyZSBleHBsb3Npb25zXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBDaGFvdGljIFVuZGVyY3VycmVudCBCbHVlJzogJzYyNEInLCAvLyBibHVlIHNxdWFyZSBleHBsb3Npb25zXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBDb3NtaWMgS2lzcyBDaXJjbGUnOiAnNjI0RicsIC8vIG1pZHBoYXNlIGNpcmNsZXMgb24gZ3JvdW5kXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBNaWRwaGFzZSBDaGFyZ2UnOiAnNjMxRScsIC8vIHVubmFtZWQgbWlkZHBoYXNlIGxpbmUgYXR0YWNrc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFdhbGxvdyc6ICc2MjM2JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ1ZhbmFzcGF0aSBTdmFyYmhhbnUgQ29zbWljIEtpc3MgU3ByZWFkJzogJzYyNTAnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBXcmVja2VyIFBvaXNvbiBIZWFydCc6ICc2Q0RDJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBMb29rYXdheSBtZWNoYW5pYywgZG9lcyBubyBkYW1hZ2Ugb24gc3VjY2Vzcy5cclxuICAgICAgaWQ6ICdWYW5hc3BhdGkgVGVybWludXMgVHdpdGNoZXIgRG91YmxlIEhleCBFeWUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc2QzIxJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogdGFraW5nIHR3byA2NUFBIEluZnJhbGF0ZXJhbCBBcmMgKHBhcnR5IHNoYXJlKVxyXG4vLyBUT0RPOiA2NUE3IFJheSBvZiBMaWdodCAoc3RhbmRpbmcgaW4gdGhlIG1vdmluZyBsaWdodHdhdmUpIGlzIHN1cGVyIG5vaXN5XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU1pbnN0cmVsc0JhbGxhZEh5ZGFlbHluc0NhbGwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0h5ZGFlbHluRXggSGlnaGVzdCBIb2x5JzogJzY1OTgnLCAvLyA/Pz8gb3V0XHJcbiAgICAnSHlkYWVseW5FeCBFcXVpbm94JzogJzZFQjInLCAvLyA/Pz8gY3Jvc3NcclxuICAgICdIeWRhZWx5bkV4IEFudGhlbGlvbic6ICc2NTk0JywgLy8gPz8/IGluXHJcbiAgICAnSHlkYWVseW5FeCBBdXJlb2xlIDEnOiAnNkYxMicsIC8vIGdvIHNpZGVzXHJcbiAgICAnSHlkYWVseW5FeCBBdXJlb2xlIDInOiAnNkM5MicsIC8vIGdvIHNpZGVzXHJcbiAgICAnSHlkYWVseW5FeCBMYXRlcmFsIEF1cmVvbGUgMSc6ICc2NjkwJywgLy8gZ28gZnJvbnQgYmFja1xyXG4gICAgJ0h5ZGFlbHluRXggTGF0ZXJhbCBBdXJlb2xlIDInOiAnNkYxNCcsIC8vIGdvIGZyb250IGJhY2tcclxuICAgICdIeWRhZWx5bkV4IExpZ2h0IG9mIHRoZSBDcnlzdGFsJzogJzY1QTYnLCAvLyBsaW5lIG9mIHNpZ2h0IHdhdmUrY3J5c3RhbFxyXG4gICAgJ0h5ZGFlbHluRXggSGVyb3NcXCdzIEdsb3J5JzogJzY1QTgnLCAvLyBnZXQgYmVoaW5kXHJcbiAgICAnSHlkYWVseW5FeCBQYXJoZWxpb24gQmVhY29uIDEnOiAnNjVCMicsIC8vIGluaXRpYWwgY2hha3JhbXNcclxuICAgICdIeWRhZWx5bkV4IFBhcmhlbGlvbiBCZWFjb24gMic6ICc2NUIzJywgLy8gc2Vjb25kIGNoYWtyYW1zXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdIeWRhZWx5bkV4IENyeXN0YWxpemUgQmxpenphcmQgSUlJJzogJzY1QTQnLCAvLyBzcHJlYWRcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0h5ZGFlbHluRXggSGVyb3NcXCdzIFN1bmRlcmluZyc6ICc2NUJGJywgLy8gc2luZ2xlIHRhbmsgY2xlYXZlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZURhcmtJbnNpZGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1pvZGlhcmsgRXNvdGVyaWMgU2VjdCc6ICc2N0NDJywgLy8gY29uYWwgd2FsbCBzdW1tb25cclxuICAgICdab2RpYXJrIEVzb3RlcmljIER5YWQnOiAnNjdDQicsIC8vIGhhbGYgYXJlbmEgd2FsbCBzdW1tb25cclxuICAgICdab2RpYXJrIEJlaGVtb3RoIE1ldGVvcm9zIEVpZG9sb24nOiAnNjdDNicsIC8vIGxhcmdlIGNpcmNsZXMgZnJvbSBCZWhlbW90aCBzdW1tb25zXHJcbiAgICAnWm9kaWFyayBQeXRob24gT3BoZW9zIEVpZG9sb24nOiAnNjdDNycsIC8vIGxpbmVzIGZyb20gUHl0aG9uIHN1bW1vbnNcclxuICAgICdab2RpYXJrIFBobGVnb3Rob24nOiAnNjdDRScsIC8vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdab2RpYXJrIEVzb3RlcmljIFJheSc6ICc2N0NBJywgLy8gMSsyIGxhc2Vyc1xyXG4gICAgJ1pvZGlhcmsgQWRpa2lhIDEnOiAnNjNBOCcsIC8vIHZlcnkgbGFyZ2UgY2lyY2xlcyB0aGF0IGNyZWF0ZSBOL1Mgc2FmZSB6b25lc1xyXG4gICAgJ1pvZGlhcmsgQWRpa2lhIDInOiAnNjdEOScsIC8vIHZlcnkgbGFyZ2UgY2lyY2xlcyB0aGF0IGNyZWF0ZSBOL1Mgc2FmZSB6b25lc1xyXG4gICAgJ1pvZGlhcmsgQWxnZWRvbic6ICc2N0QzJywgLy8gbW92ZSB0byBjb3JuZXIgbGFyZ2Uga25vY2tiYWNrIGF0dGFja1xyXG4gICAgJ1pvZGlhcmsgRXhwbG9zaW9uJzogJzY3Q0QnLCAvLyBBc3RyYWwgRWNsaXBzZSBleHBsb3Npb25zXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdab2RpYXJrIEFuaWEnOiAnNkI2MicsIC8vIHRhbmsgYnVzdGVyIHNwbGFzaCB3aXRoIGhlYWRtYXJrZXJcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnWm9kaWFyayBTdHl4JzogJzY3REMnLCAvLyBtdWx0aS1oaXQgc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1pvZGlhcmsgQWxnZWRvbiBQdXNoJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNjdEMycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1B1c2hlZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VzY2h1YnN0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSDDqXTDqSBwb3Vzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+iQveOBoeOBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLHrkKgnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IGZpbGUwIGZyb20gJy4vMDAtbWlzYy9nZW5lcmFsLnRzJztcbmltcG9ydCBmaWxlMSBmcm9tICcuLzAwLW1pc2MvdGVzdC50cyc7XG5pbXBvcnQgZmlsZTIgZnJvbSAnLi8wMi1hcnIvdHJpYWwvaWZyaXQtbm0udHMnO1xuaW1wb3J0IGZpbGUzIGZyb20gJy4vMDItYXJyL3RyaWFsL2xldmktZXgudHMnO1xuaW1wb3J0IGZpbGU0IGZyb20gJy4vMDItYXJyL3RyaWFsL3NoaXZhLWV4LnRzJztcbmltcG9ydCBmaWxlNSBmcm9tICcuLzAyLWFyci90cmlhbC9zaGl2YS1obS50cyc7XG5pbXBvcnQgZmlsZTYgZnJvbSAnLi8wMi1hcnIvdHJpYWwvdGl0YW4tZXgudHMnO1xuaW1wb3J0IGZpbGU3IGZyb20gJy4vMDItYXJyL3RyaWFsL3RpdGFuLWhtLnRzJztcbmltcG9ydCBmaWxlOCBmcm9tICcuLzAyLWFyci90cmlhbC90aXRhbi1ubS50cyc7XG5pbXBvcnQgZmlsZTkgZnJvbSAnLi8wMy1ody9hbGxpYW5jZS93ZWVwaW5nX2NpdHkudHMnO1xuaW1wb3J0IGZpbGUxMCBmcm9tICcuLzAzLWh3L2R1bmdlb24vYWV0aGVyb2NoZW1pY2FsX3Jlc2VhcmNoX2ZhY2lsaXR5LnRzJztcbmltcG9ydCBmaWxlMTEgZnJvbSAnLi8wMy1ody9kdW5nZW9uL2JhZWxzYXJzX3dhbGwudHMnO1xuaW1wb3J0IGZpbGUxMiBmcm9tICcuLzAzLWh3L2R1bmdlb24vZnJhY3RhbF9jb250aW51dW0udHMnO1xuaW1wb3J0IGZpbGUxMyBmcm9tICcuLzAzLWh3L2R1bmdlb24vZ3ViYWxfbGlicmFyeV9oYXJkLnRzJztcbmltcG9ydCBmaWxlMTQgZnJvbSAnLi8wMy1ody9kdW5nZW9uL3NvaG1fYWxfaGFyZC50cyc7XG5pbXBvcnQgZmlsZTE1IGZyb20gJy4vMDMtaHcvcmFpZC9hMTJuLnRzJztcbmltcG9ydCBmaWxlMTYgZnJvbSAnLi8wMy1ody9yYWlkL2E2bi50cyc7XG5pbXBvcnQgZmlsZTE3IGZyb20gJy4vMDQtc2IvYWxsaWFuY2Uvb3Jib25uZV9tb25hc3RlcnkudHMnO1xuaW1wb3J0IGZpbGUxOCBmcm9tICcuLzA0LXNiL2FsbGlhbmNlL3JpZG9yYW5hX2xpZ2h0aG91c2UudHMnO1xuaW1wb3J0IGZpbGUxOSBmcm9tICcuLzA0LXNiL2FsbGlhbmNlL3JveWFsX2NpdHlfb2ZfcmFiYW5hc3RyZS50cyc7XG5pbXBvcnQgZmlsZTIwIGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9hbGFfbWhpZ28udHMnO1xuaW1wb3J0IGZpbGUyMSBmcm9tICcuLzA0LXNiL2R1bmdlb24vYmFyZGFtc19tZXR0bGUudHMnO1xuaW1wb3J0IGZpbGUyMiBmcm9tICcuLzA0LXNiL2R1bmdlb24vY2FzdHJ1bV9hYmFuaWEudHMnO1xuaW1wb3J0IGZpbGUyMyBmcm9tICcuLzA0LXNiL2R1bmdlb24vZG9tYV9jYXN0bGUudHMnO1xuaW1wb3J0IGZpbGUyNCBmcm9tICcuLzA0LXNiL2R1bmdlb24vZHJvd25lZF9jaXR5X29mX3NrYWxsYS50cyc7XG5pbXBvcnQgZmlsZTI1IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9mcmFjdGFsX2NvbnRpbnV1bV9oYXJkLnRzJztcbmltcG9ydCBmaWxlMjYgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL2doaW1seXRfZGFyay50cyc7XG5pbXBvcnQgZmlsZTI3IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9oZWxsc19saWQudHMnO1xuaW1wb3J0IGZpbGUyOCBmcm9tICcuLzA0LXNiL2R1bmdlb24va3VnYW5lX2Nhc3RsZS50cyc7XG5pbXBvcnQgZmlsZTI5IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9zaGlzdWlfb2ZfdGhlX3Zpb2xldF90aWRlcy50cyc7XG5pbXBvcnQgZmlsZTMwIGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9zaXJlbnNvbmdfc2VhLnRzJztcbmltcG9ydCBmaWxlMzEgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL3N0X21vY2lhbm5lX2hhcmQudHMnO1xuaW1wb3J0IGZpbGUzMiBmcm9tICcuLzA0LXNiL2R1bmdlb24vc3dhbGxvd3NfY29tcGFzcy50cyc7XG5pbXBvcnQgZmlsZTMzIGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi90ZW1wbGVfb2ZfdGhlX2Zpc3QudHMnO1xuaW1wb3J0IGZpbGUzNCBmcm9tICcuLzA0LXNiL2R1bmdlb24vdGhlX2J1cm4udHMnO1xuaW1wb3J0IGZpbGUzNSBmcm9tICcuLzA0LXNiL3JhaWQvbzEwbi50cyc7XG5pbXBvcnQgZmlsZTM2IGZyb20gJy4vMDQtc2IvcmFpZC9vMTBzLnRzJztcbmltcG9ydCBmaWxlMzcgZnJvbSAnLi8wNC1zYi9yYWlkL28xMW4udHMnO1xuaW1wb3J0IGZpbGUzOCBmcm9tICcuLzA0LXNiL3JhaWQvbzExcy50cyc7XG5pbXBvcnQgZmlsZTM5IGZyb20gJy4vMDQtc2IvcmFpZC9vMTJuLnRzJztcbmltcG9ydCBmaWxlNDAgZnJvbSAnLi8wNC1zYi9yYWlkL28xMnMudHMnO1xuaW1wb3J0IGZpbGU0MSBmcm9tICcuLzA0LXNiL3JhaWQvbzFuLnRzJztcbmltcG9ydCBmaWxlNDIgZnJvbSAnLi8wNC1zYi9yYWlkL28xcy50cyc7XG5pbXBvcnQgZmlsZTQzIGZyb20gJy4vMDQtc2IvcmFpZC9vMm4udHMnO1xuaW1wb3J0IGZpbGU0NCBmcm9tICcuLzA0LXNiL3JhaWQvbzJzLnRzJztcbmltcG9ydCBmaWxlNDUgZnJvbSAnLi8wNC1zYi9yYWlkL28zbi50cyc7XG5pbXBvcnQgZmlsZTQ2IGZyb20gJy4vMDQtc2IvcmFpZC9vM3MudHMnO1xuaW1wb3J0IGZpbGU0NyBmcm9tICcuLzA0LXNiL3JhaWQvbzRuLnRzJztcbmltcG9ydCBmaWxlNDggZnJvbSAnLi8wNC1zYi9yYWlkL280cy50cyc7XG5pbXBvcnQgZmlsZTQ5IGZyb20gJy4vMDQtc2IvcmFpZC9vNW4udHMnO1xuaW1wb3J0IGZpbGU1MCBmcm9tICcuLzA0LXNiL3JhaWQvbzVzLnRzJztcbmltcG9ydCBmaWxlNTEgZnJvbSAnLi8wNC1zYi9yYWlkL282bi50cyc7XG5pbXBvcnQgZmlsZTUyIGZyb20gJy4vMDQtc2IvcmFpZC9vNnMudHMnO1xuaW1wb3J0IGZpbGU1MyBmcm9tICcuLzA0LXNiL3JhaWQvbzduLnRzJztcbmltcG9ydCBmaWxlNTQgZnJvbSAnLi8wNC1zYi9yYWlkL283cy50cyc7XG5pbXBvcnQgZmlsZTU1IGZyb20gJy4vMDQtc2IvcmFpZC9vOG4udHMnO1xuaW1wb3J0IGZpbGU1NiBmcm9tICcuLzA0LXNiL3JhaWQvbzhzLnRzJztcbmltcG9ydCBmaWxlNTcgZnJvbSAnLi8wNC1zYi9yYWlkL285bi50cyc7XG5pbXBvcnQgZmlsZTU4IGZyb20gJy4vMDQtc2IvcmFpZC9vOXMudHMnO1xuaW1wb3J0IGZpbGU1OSBmcm9tICcuLzA0LXNiL3RyaWFsL2J5YWtrby50cyc7XG5pbXBvcnQgZmlsZTYwIGZyb20gJy4vMDQtc2IvdHJpYWwvYnlha2tvLWV4LnRzJztcbmltcG9ydCBmaWxlNjEgZnJvbSAnLi8wNC1zYi90cmlhbC9sYWtzaG1pLnRzJztcbmltcG9ydCBmaWxlNjIgZnJvbSAnLi8wNC1zYi90cmlhbC9sYWtzaG1pLWV4LnRzJztcbmltcG9ydCBmaWxlNjMgZnJvbSAnLi8wNC1zYi90cmlhbC9yYXRoYWxvcy50cyc7XG5pbXBvcnQgZmlsZTY0IGZyb20gJy4vMDQtc2IvdHJpYWwvcmF0aGFsb3MtZXgudHMnO1xuaW1wb3J0IGZpbGU2NSBmcm9tICcuLzA0LXNiL3RyaWFsL3NlaXJ5dS50cyc7XG5pbXBvcnQgZmlsZTY2IGZyb20gJy4vMDQtc2IvdHJpYWwvc2Vpcnl1LWV4LnRzJztcbmltcG9ydCBmaWxlNjcgZnJvbSAnLi8wNC1zYi90cmlhbC9zaGlucnl1LnRzJztcbmltcG9ydCBmaWxlNjggZnJvbSAnLi8wNC1zYi90cmlhbC9zaGlucnl1LWV4LnRzJztcbmltcG9ydCBmaWxlNjkgZnJvbSAnLi8wNC1zYi90cmlhbC9zdXNhbm8udHMnO1xuaW1wb3J0IGZpbGU3MCBmcm9tICcuLzA0LXNiL3RyaWFsL3N1c2Fuby1leC50cyc7XG5pbXBvcnQgZmlsZTcxIGZyb20gJy4vMDQtc2IvdHJpYWwvc3V6YWt1LnRzJztcbmltcG9ydCBmaWxlNzIgZnJvbSAnLi8wNC1zYi90cmlhbC9zdXpha3UtZXgudHMnO1xuaW1wb3J0IGZpbGU3MyBmcm9tICcuLzA0LXNiL3RyaWFsL3RzdWt1eW9taS50cyc7XG5pbXBvcnQgZmlsZTc0IGZyb20gJy4vMDQtc2IvdHJpYWwvdHN1a3V5b21pLWV4LnRzJztcbmltcG9ydCBmaWxlNzUgZnJvbSAnLi8wNC1zYi90cmlhbC95b2ppbWJvLnRzJztcbmltcG9ydCBmaWxlNzYgZnJvbSAnLi8wNC1zYi91bHRpbWF0ZS91bHRpbWFfd2VhcG9uX3VsdGltYXRlLnRzJztcbmltcG9ydCBmaWxlNzcgZnJvbSAnLi8wNC1zYi91bHRpbWF0ZS91bmVuZGluZ19jb2lsX3VsdGltYXRlLnRzJztcbmltcG9ydCBmaWxlNzggZnJvbSAnLi8wNS1zaGIvYWxsaWFuY2UvdGhlX2NvcGllZF9mYWN0b3J5LnRzJztcbmltcG9ydCBmaWxlNzkgZnJvbSAnLi8wNS1zaGIvYWxsaWFuY2UvdGhlX3B1cHBldHNfYnVua2VyLnRzJztcbmltcG9ydCBmaWxlODAgZnJvbSAnLi8wNS1zaGIvYWxsaWFuY2UvdGhlX3Rvd2VyX2F0X3BhcmFkaWdtc19icmVhY2gudHMnO1xuaW1wb3J0IGZpbGU4MSBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL2FrYWRhZW1pYV9hbnlkZXIudHMnO1xuaW1wb3J0IGZpbGU4MiBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL2FtYXVyb3QudHMnO1xuaW1wb3J0IGZpbGU4MyBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL2FuYW1uZXNpc19hbnlkZXIudHMnO1xuaW1wb3J0IGZpbGU4NCBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL2RvaG5fbWhlZy50cyc7XG5pbXBvcnQgZmlsZTg1IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vaGVyb2VzX2dhdW50bGV0LnRzJztcbmltcG9ydCBmaWxlODYgZnJvbSAnLi8wNS1zaGIvZHVuZ2Vvbi9ob2xtaW5zdGVyX3N3aXRjaC50cyc7XG5pbXBvcnQgZmlsZTg3IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vbWFsaWthaHNfd2VsbC50cyc7XG5pbXBvcnQgZmlsZTg4IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vbWF0b3lhc19yZWxpY3QudHMnO1xuaW1wb3J0IGZpbGU4OSBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL210X2d1bGcudHMnO1xuaW1wb3J0IGZpbGU5MCBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL3BhZ2x0aGFuLnRzJztcbmltcG9ydCBmaWxlOTEgZnJvbSAnLi8wNS1zaGIvZHVuZ2Vvbi9xaXRhbmFfcmF2ZWwudHMnO1xuaW1wb3J0IGZpbGU5MiBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL3RoZV9ncmFuZF9jb3Ntb3MudHMnO1xuaW1wb3J0IGZpbGU5MyBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL3R3aW5uaW5nLnRzJztcbmltcG9ydCBmaWxlOTQgZnJvbSAnLi8wNS1zaGIvZXVyZWthL2RlbHVicnVtX3JlZ2luYWUudHMnO1xuaW1wb3J0IGZpbGU5NSBmcm9tICcuLzA1LXNoYi9ldXJla2EvZGVsdWJydW1fcmVnaW5hZV9zYXZhZ2UudHMnO1xuaW1wb3J0IGZpbGU5NiBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMG4udHMnO1xuaW1wb3J0IGZpbGU5NyBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMHMudHMnO1xuaW1wb3J0IGZpbGU5OCBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMW4udHMnO1xuaW1wb3J0IGZpbGU5OSBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMXMudHMnO1xuaW1wb3J0IGZpbGUxMDAgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMTJuLnRzJztcbmltcG9ydCBmaWxlMTAxIGZyb20gJy4vMDUtc2hiL3JhaWQvZTEycy50cyc7XG5pbXBvcnQgZmlsZTEwMiBmcm9tICcuLzA1LXNoYi9yYWlkL2Uxbi50cyc7XG5pbXBvcnQgZmlsZTEwMyBmcm9tICcuLzA1LXNoYi9yYWlkL2Uxcy50cyc7XG5pbXBvcnQgZmlsZTEwNCBmcm9tICcuLzA1LXNoYi9yYWlkL2Uybi50cyc7XG5pbXBvcnQgZmlsZTEwNSBmcm9tICcuLzA1LXNoYi9yYWlkL2Uycy50cyc7XG5pbXBvcnQgZmlsZTEwNiBmcm9tICcuLzA1LXNoYi9yYWlkL2Uzbi50cyc7XG5pbXBvcnQgZmlsZTEwNyBmcm9tICcuLzA1LXNoYi9yYWlkL2Uzcy50cyc7XG5pbXBvcnQgZmlsZTEwOCBmcm9tICcuLzA1LXNoYi9yYWlkL2U0bi50cyc7XG5pbXBvcnQgZmlsZTEwOSBmcm9tICcuLzA1LXNoYi9yYWlkL2U0cy50cyc7XG5pbXBvcnQgZmlsZTExMCBmcm9tICcuLzA1LXNoYi9yYWlkL2U1bi50cyc7XG5pbXBvcnQgZmlsZTExMSBmcm9tICcuLzA1LXNoYi9yYWlkL2U1cy50cyc7XG5pbXBvcnQgZmlsZTExMiBmcm9tICcuLzA1LXNoYi9yYWlkL2U2bi50cyc7XG5pbXBvcnQgZmlsZTExMyBmcm9tICcuLzA1LXNoYi9yYWlkL2U2cy50cyc7XG5pbXBvcnQgZmlsZTExNCBmcm9tICcuLzA1LXNoYi9yYWlkL2U3bi50cyc7XG5pbXBvcnQgZmlsZTExNSBmcm9tICcuLzA1LXNoYi9yYWlkL2U3cy50cyc7XG5pbXBvcnQgZmlsZTExNiBmcm9tICcuLzA1LXNoYi9yYWlkL2U4bi50cyc7XG5pbXBvcnQgZmlsZTExNyBmcm9tICcuLzA1LXNoYi9yYWlkL2U4cy50cyc7XG5pbXBvcnQgZmlsZTExOCBmcm9tICcuLzA1LXNoYi9yYWlkL2U5bi50cyc7XG5pbXBvcnQgZmlsZTExOSBmcm9tICcuLzA1LXNoYi9yYWlkL2U5cy50cyc7XG5pbXBvcnQgZmlsZTEyMCBmcm9tICcuLzA1LXNoYi90cmlhbC9kaWFtb25kX3dlYXBvbi50cyc7XG5pbXBvcnQgZmlsZTEyMSBmcm9tICcuLzA1LXNoYi90cmlhbC9kaWFtb25kX3dlYXBvbi1leC50cyc7XG5pbXBvcnQgZmlsZTEyMiBmcm9tICcuLzA1LXNoYi90cmlhbC9lbWVyYWxkX3dlYXBvbi50cyc7XG5pbXBvcnQgZmlsZTEyMyBmcm9tICcuLzA1LXNoYi90cmlhbC9lbWVyYWxkX3dlYXBvbi1leC50cyc7XG5pbXBvcnQgZmlsZTEyNCBmcm9tICcuLzA1LXNoYi90cmlhbC9oYWRlcy50cyc7XG5pbXBvcnQgZmlsZTEyNSBmcm9tICcuLzA1LXNoYi90cmlhbC9oYWRlcy1leC50cyc7XG5pbXBvcnQgZmlsZTEyNiBmcm9tICcuLzA1LXNoYi90cmlhbC9pbm5vY2VuY2UudHMnO1xuaW1wb3J0IGZpbGUxMjcgZnJvbSAnLi8wNS1zaGIvdHJpYWwvaW5ub2NlbmNlLWV4LnRzJztcbmltcG9ydCBmaWxlMTI4IGZyb20gJy4vMDUtc2hiL3RyaWFsL2xldmktdW4udHMnO1xuaW1wb3J0IGZpbGUxMjkgZnJvbSAnLi8wNS1zaGIvdHJpYWwvcnVieV93ZWFwb24udHMnO1xuaW1wb3J0IGZpbGUxMzAgZnJvbSAnLi8wNS1zaGIvdHJpYWwvcnVieV93ZWFwb24tZXgudHMnO1xuaW1wb3J0IGZpbGUxMzEgZnJvbSAnLi8wNS1zaGIvdHJpYWwvc2hpdmEtdW4udHMnO1xuaW1wb3J0IGZpbGUxMzIgZnJvbSAnLi8wNS1zaGIvdHJpYWwvdGl0YW5pYS50cyc7XG5pbXBvcnQgZmlsZTEzMyBmcm9tICcuLzA1LXNoYi90cmlhbC90aXRhbmlhLWV4LnRzJztcbmltcG9ydCBmaWxlMTM0IGZyb20gJy4vMDUtc2hiL3RyaWFsL3RpdGFuLXVuLnRzJztcbmltcG9ydCBmaWxlMTM1IGZyb20gJy4vMDUtc2hiL3RyaWFsL3ZhcmlzLWV4LnRzJztcbmltcG9ydCBmaWxlMTM2IGZyb20gJy4vMDUtc2hiL3RyaWFsL3dvbC50cyc7XG5pbXBvcnQgZmlsZTEzNyBmcm9tICcuLzA1LXNoYi90cmlhbC93b2wtZXgudHMnO1xuaW1wb3J0IGZpbGUxMzggZnJvbSAnLi8wNS1zaGIvdWx0aW1hdGUvdGhlX2VwaWNfb2ZfYWxleGFuZGVyLnRzJztcbmltcG9ydCBmaWxlMTM5IGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi9zbWlsZXRvbi50cyc7XG5pbXBvcnQgZmlsZTE0MCBmcm9tICcuLzA2LWV3L2R1bmdlb24vdGhlX2FpdGlhc2NvcGUudHMnO1xuaW1wb3J0IGZpbGUxNDEgZnJvbSAnLi8wNi1ldy9kdW5nZW9uL3RoZV90b3dlcl9vZl9iYWJpbC50cyc7XG5pbXBvcnQgZmlsZTE0MiBmcm9tICcuLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX3pvdC50cyc7XG5pbXBvcnQgZmlsZTE0MyBmcm9tICcuLzA2LWV3L2R1bmdlb24vdmFuYXNwYXRpLnRzJztcbmltcG9ydCBmaWxlMTQ0IGZyb20gJy4vMDYtZXcvdHJpYWwvaHlkYWVseW4tZXgudHMnO1xuaW1wb3J0IGZpbGUxNDUgZnJvbSAnLi8wNi1ldy90cmlhbC96b2RpYXJrLnRzJztcblxuZXhwb3J0IGRlZmF1bHQgeycwMC1taXNjL2dlbmVyYWwudHMnOiBmaWxlMCwnMDAtbWlzYy90ZXN0LnRzJzogZmlsZTEsJzAyLWFyci90cmlhbC9pZnJpdC1ubS50cyc6IGZpbGUyLCcwMi1hcnIvdHJpYWwvbGV2aS1leC50cyc6IGZpbGUzLCcwMi1hcnIvdHJpYWwvc2hpdmEtZXgudHMnOiBmaWxlNCwnMDItYXJyL3RyaWFsL3NoaXZhLWhtLnRzJzogZmlsZTUsJzAyLWFyci90cmlhbC90aXRhbi1leC50cyc6IGZpbGU2LCcwMi1hcnIvdHJpYWwvdGl0YW4taG0udHMnOiBmaWxlNywnMDItYXJyL3RyaWFsL3RpdGFuLW5tLnRzJzogZmlsZTgsJzAzLWh3L2FsbGlhbmNlL3dlZXBpbmdfY2l0eS50cyc6IGZpbGU5LCcwMy1ody9kdW5nZW9uL2FldGhlcm9jaGVtaWNhbF9yZXNlYXJjaF9mYWNpbGl0eS50cyc6IGZpbGUxMCwnMDMtaHcvZHVuZ2Vvbi9iYWVsc2Fyc193YWxsLnRzJzogZmlsZTExLCcwMy1ody9kdW5nZW9uL2ZyYWN0YWxfY29udGludXVtLnRzJzogZmlsZTEyLCcwMy1ody9kdW5nZW9uL2d1YmFsX2xpYnJhcnlfaGFyZC50cyc6IGZpbGUxMywnMDMtaHcvZHVuZ2Vvbi9zb2htX2FsX2hhcmQudHMnOiBmaWxlMTQsJzAzLWh3L3JhaWQvYTEybi50cyc6IGZpbGUxNSwnMDMtaHcvcmFpZC9hNm4udHMnOiBmaWxlMTYsJzA0LXNiL2FsbGlhbmNlL29yYm9ubmVfbW9uYXN0ZXJ5LnRzJzogZmlsZTE3LCcwNC1zYi9hbGxpYW5jZS9yaWRvcmFuYV9saWdodGhvdXNlLnRzJzogZmlsZTE4LCcwNC1zYi9hbGxpYW5jZS9yb3lhbF9jaXR5X29mX3JhYmFuYXN0cmUudHMnOiBmaWxlMTksJzA0LXNiL2R1bmdlb24vYWxhX21oaWdvLnRzJzogZmlsZTIwLCcwNC1zYi9kdW5nZW9uL2JhcmRhbXNfbWV0dGxlLnRzJzogZmlsZTIxLCcwNC1zYi9kdW5nZW9uL2Nhc3RydW1fYWJhbmlhLnRzJzogZmlsZTIyLCcwNC1zYi9kdW5nZW9uL2RvbWFfY2FzdGxlLnRzJzogZmlsZTIzLCcwNC1zYi9kdW5nZW9uL2Ryb3duZWRfY2l0eV9vZl9za2FsbGEudHMnOiBmaWxlMjQsJzA0LXNiL2R1bmdlb24vZnJhY3RhbF9jb250aW51dW1faGFyZC50cyc6IGZpbGUyNSwnMDQtc2IvZHVuZ2Vvbi9naGltbHl0X2RhcmsudHMnOiBmaWxlMjYsJzA0LXNiL2R1bmdlb24vaGVsbHNfbGlkLnRzJzogZmlsZTI3LCcwNC1zYi9kdW5nZW9uL2t1Z2FuZV9jYXN0bGUudHMnOiBmaWxlMjgsJzA0LXNiL2R1bmdlb24vc2hpc3VpX29mX3RoZV92aW9sZXRfdGlkZXMudHMnOiBmaWxlMjksJzA0LXNiL2R1bmdlb24vc2lyZW5zb25nX3NlYS50cyc6IGZpbGUzMCwnMDQtc2IvZHVuZ2Vvbi9zdF9tb2NpYW5uZV9oYXJkLnRzJzogZmlsZTMxLCcwNC1zYi9kdW5nZW9uL3N3YWxsb3dzX2NvbXBhc3MudHMnOiBmaWxlMzIsJzA0LXNiL2R1bmdlb24vdGVtcGxlX29mX3RoZV9maXN0LnRzJzogZmlsZTMzLCcwNC1zYi9kdW5nZW9uL3RoZV9idXJuLnRzJzogZmlsZTM0LCcwNC1zYi9yYWlkL28xMG4udHMnOiBmaWxlMzUsJzA0LXNiL3JhaWQvbzEwcy50cyc6IGZpbGUzNiwnMDQtc2IvcmFpZC9vMTFuLnRzJzogZmlsZTM3LCcwNC1zYi9yYWlkL28xMXMudHMnOiBmaWxlMzgsJzA0LXNiL3JhaWQvbzEybi50cyc6IGZpbGUzOSwnMDQtc2IvcmFpZC9vMTJzLnRzJzogZmlsZTQwLCcwNC1zYi9yYWlkL28xbi50cyc6IGZpbGU0MSwnMDQtc2IvcmFpZC9vMXMudHMnOiBmaWxlNDIsJzA0LXNiL3JhaWQvbzJuLnRzJzogZmlsZTQzLCcwNC1zYi9yYWlkL28ycy50cyc6IGZpbGU0NCwnMDQtc2IvcmFpZC9vM24udHMnOiBmaWxlNDUsJzA0LXNiL3JhaWQvbzNzLnRzJzogZmlsZTQ2LCcwNC1zYi9yYWlkL280bi50cyc6IGZpbGU0NywnMDQtc2IvcmFpZC9vNHMudHMnOiBmaWxlNDgsJzA0LXNiL3JhaWQvbzVuLnRzJzogZmlsZTQ5LCcwNC1zYi9yYWlkL281cy50cyc6IGZpbGU1MCwnMDQtc2IvcmFpZC9vNm4udHMnOiBmaWxlNTEsJzA0LXNiL3JhaWQvbzZzLnRzJzogZmlsZTUyLCcwNC1zYi9yYWlkL283bi50cyc6IGZpbGU1MywnMDQtc2IvcmFpZC9vN3MudHMnOiBmaWxlNTQsJzA0LXNiL3JhaWQvbzhuLnRzJzogZmlsZTU1LCcwNC1zYi9yYWlkL284cy50cyc6IGZpbGU1NiwnMDQtc2IvcmFpZC9vOW4udHMnOiBmaWxlNTcsJzA0LXNiL3JhaWQvbzlzLnRzJzogZmlsZTU4LCcwNC1zYi90cmlhbC9ieWFra28udHMnOiBmaWxlNTksJzA0LXNiL3RyaWFsL2J5YWtrby1leC50cyc6IGZpbGU2MCwnMDQtc2IvdHJpYWwvbGFrc2htaS50cyc6IGZpbGU2MSwnMDQtc2IvdHJpYWwvbGFrc2htaS1leC50cyc6IGZpbGU2MiwnMDQtc2IvdHJpYWwvcmF0aGFsb3MudHMnOiBmaWxlNjMsJzA0LXNiL3RyaWFsL3JhdGhhbG9zLWV4LnRzJzogZmlsZTY0LCcwNC1zYi90cmlhbC9zZWlyeXUudHMnOiBmaWxlNjUsJzA0LXNiL3RyaWFsL3NlaXJ5dS1leC50cyc6IGZpbGU2NiwnMDQtc2IvdHJpYWwvc2hpbnJ5dS50cyc6IGZpbGU2NywnMDQtc2IvdHJpYWwvc2hpbnJ5dS1leC50cyc6IGZpbGU2OCwnMDQtc2IvdHJpYWwvc3VzYW5vLnRzJzogZmlsZTY5LCcwNC1zYi90cmlhbC9zdXNhbm8tZXgudHMnOiBmaWxlNzAsJzA0LXNiL3RyaWFsL3N1emFrdS50cyc6IGZpbGU3MSwnMDQtc2IvdHJpYWwvc3V6YWt1LWV4LnRzJzogZmlsZTcyLCcwNC1zYi90cmlhbC90c3VrdXlvbWkudHMnOiBmaWxlNzMsJzA0LXNiL3RyaWFsL3RzdWt1eW9taS1leC50cyc6IGZpbGU3NCwnMDQtc2IvdHJpYWwveW9qaW1iby50cyc6IGZpbGU3NSwnMDQtc2IvdWx0aW1hdGUvdWx0aW1hX3dlYXBvbl91bHRpbWF0ZS50cyc6IGZpbGU3NiwnMDQtc2IvdWx0aW1hdGUvdW5lbmRpbmdfY29pbF91bHRpbWF0ZS50cyc6IGZpbGU3NywnMDUtc2hiL2FsbGlhbmNlL3RoZV9jb3BpZWRfZmFjdG9yeS50cyc6IGZpbGU3OCwnMDUtc2hiL2FsbGlhbmNlL3RoZV9wdXBwZXRzX2J1bmtlci50cyc6IGZpbGU3OSwnMDUtc2hiL2FsbGlhbmNlL3RoZV90b3dlcl9hdF9wYXJhZGlnbXNfYnJlYWNoLnRzJzogZmlsZTgwLCcwNS1zaGIvZHVuZ2Vvbi9ha2FkYWVtaWFfYW55ZGVyLnRzJzogZmlsZTgxLCcwNS1zaGIvZHVuZ2Vvbi9hbWF1cm90LnRzJzogZmlsZTgyLCcwNS1zaGIvZHVuZ2Vvbi9hbmFtbmVzaXNfYW55ZGVyLnRzJzogZmlsZTgzLCcwNS1zaGIvZHVuZ2Vvbi9kb2huX21oZWcudHMnOiBmaWxlODQsJzA1LXNoYi9kdW5nZW9uL2hlcm9lc19nYXVudGxldC50cyc6IGZpbGU4NSwnMDUtc2hiL2R1bmdlb24vaG9sbWluc3Rlcl9zd2l0Y2gudHMnOiBmaWxlODYsJzA1LXNoYi9kdW5nZW9uL21hbGlrYWhzX3dlbGwudHMnOiBmaWxlODcsJzA1LXNoYi9kdW5nZW9uL21hdG95YXNfcmVsaWN0LnRzJzogZmlsZTg4LCcwNS1zaGIvZHVuZ2Vvbi9tdF9ndWxnLnRzJzogZmlsZTg5LCcwNS1zaGIvZHVuZ2Vvbi9wYWdsdGhhbi50cyc6IGZpbGU5MCwnMDUtc2hiL2R1bmdlb24vcWl0YW5hX3JhdmVsLnRzJzogZmlsZTkxLCcwNS1zaGIvZHVuZ2Vvbi90aGVfZ3JhbmRfY29zbW9zLnRzJzogZmlsZTkyLCcwNS1zaGIvZHVuZ2Vvbi90d2lubmluZy50cyc6IGZpbGU5MywnMDUtc2hiL2V1cmVrYS9kZWx1YnJ1bV9yZWdpbmFlLnRzJzogZmlsZTk0LCcwNS1zaGIvZXVyZWthL2RlbHVicnVtX3JlZ2luYWVfc2F2YWdlLnRzJzogZmlsZTk1LCcwNS1zaGIvcmFpZC9lMTBuLnRzJzogZmlsZTk2LCcwNS1zaGIvcmFpZC9lMTBzLnRzJzogZmlsZTk3LCcwNS1zaGIvcmFpZC9lMTFuLnRzJzogZmlsZTk4LCcwNS1zaGIvcmFpZC9lMTFzLnRzJzogZmlsZTk5LCcwNS1zaGIvcmFpZC9lMTJuLnRzJzogZmlsZTEwMCwnMDUtc2hiL3JhaWQvZTEycy50cyc6IGZpbGUxMDEsJzA1LXNoYi9yYWlkL2Uxbi50cyc6IGZpbGUxMDIsJzA1LXNoYi9yYWlkL2Uxcy50cyc6IGZpbGUxMDMsJzA1LXNoYi9yYWlkL2Uybi50cyc6IGZpbGUxMDQsJzA1LXNoYi9yYWlkL2Uycy50cyc6IGZpbGUxMDUsJzA1LXNoYi9yYWlkL2Uzbi50cyc6IGZpbGUxMDYsJzA1LXNoYi9yYWlkL2Uzcy50cyc6IGZpbGUxMDcsJzA1LXNoYi9yYWlkL2U0bi50cyc6IGZpbGUxMDgsJzA1LXNoYi9yYWlkL2U0cy50cyc6IGZpbGUxMDksJzA1LXNoYi9yYWlkL2U1bi50cyc6IGZpbGUxMTAsJzA1LXNoYi9yYWlkL2U1cy50cyc6IGZpbGUxMTEsJzA1LXNoYi9yYWlkL2U2bi50cyc6IGZpbGUxMTIsJzA1LXNoYi9yYWlkL2U2cy50cyc6IGZpbGUxMTMsJzA1LXNoYi9yYWlkL2U3bi50cyc6IGZpbGUxMTQsJzA1LXNoYi9yYWlkL2U3cy50cyc6IGZpbGUxMTUsJzA1LXNoYi9yYWlkL2U4bi50cyc6IGZpbGUxMTYsJzA1LXNoYi9yYWlkL2U4cy50cyc6IGZpbGUxMTcsJzA1LXNoYi9yYWlkL2U5bi50cyc6IGZpbGUxMTgsJzA1LXNoYi9yYWlkL2U5cy50cyc6IGZpbGUxMTksJzA1LXNoYi90cmlhbC9kaWFtb25kX3dlYXBvbi50cyc6IGZpbGUxMjAsJzA1LXNoYi90cmlhbC9kaWFtb25kX3dlYXBvbi1leC50cyc6IGZpbGUxMjEsJzA1LXNoYi90cmlhbC9lbWVyYWxkX3dlYXBvbi50cyc6IGZpbGUxMjIsJzA1LXNoYi90cmlhbC9lbWVyYWxkX3dlYXBvbi1leC50cyc6IGZpbGUxMjMsJzA1LXNoYi90cmlhbC9oYWRlcy50cyc6IGZpbGUxMjQsJzA1LXNoYi90cmlhbC9oYWRlcy1leC50cyc6IGZpbGUxMjUsJzA1LXNoYi90cmlhbC9pbm5vY2VuY2UudHMnOiBmaWxlMTI2LCcwNS1zaGIvdHJpYWwvaW5ub2NlbmNlLWV4LnRzJzogZmlsZTEyNywnMDUtc2hiL3RyaWFsL2xldmktdW4udHMnOiBmaWxlMTI4LCcwNS1zaGIvdHJpYWwvcnVieV93ZWFwb24udHMnOiBmaWxlMTI5LCcwNS1zaGIvdHJpYWwvcnVieV93ZWFwb24tZXgudHMnOiBmaWxlMTMwLCcwNS1zaGIvdHJpYWwvc2hpdmEtdW4udHMnOiBmaWxlMTMxLCcwNS1zaGIvdHJpYWwvdGl0YW5pYS50cyc6IGZpbGUxMzIsJzA1LXNoYi90cmlhbC90aXRhbmlhLWV4LnRzJzogZmlsZTEzMywnMDUtc2hiL3RyaWFsL3RpdGFuLXVuLnRzJzogZmlsZTEzNCwnMDUtc2hiL3RyaWFsL3ZhcmlzLWV4LnRzJzogZmlsZTEzNSwnMDUtc2hiL3RyaWFsL3dvbC50cyc6IGZpbGUxMzYsJzA1LXNoYi90cmlhbC93b2wtZXgudHMnOiBmaWxlMTM3LCcwNS1zaGIvdWx0aW1hdGUvdGhlX2VwaWNfb2ZfYWxleGFuZGVyLnRzJzogZmlsZTEzOCwnMDYtZXcvZHVuZ2Vvbi9zbWlsZXRvbi50cyc6IGZpbGUxMzksJzA2LWV3L2R1bmdlb24vdGhlX2FpdGlhc2NvcGUudHMnOiBmaWxlMTQwLCcwNi1ldy9kdW5nZW9uL3RoZV90b3dlcl9vZl9iYWJpbC50cyc6IGZpbGUxNDEsJzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX3pvdC50cyc6IGZpbGUxNDIsJzA2LWV3L2R1bmdlb24vdmFuYXNwYXRpLnRzJzogZmlsZTE0MywnMDYtZXcvdHJpYWwvaHlkYWVseW4tZXgudHMnOiBmaWxlMTQ0LCcwNi1ldy90cmlhbC96b2RpYXJrLnRzJzogZmlsZTE0NSx9OyJdLCJuYW1lcyI6WyJOZXRSZWdleGVzIiwiWm9uZUlkIiwidHJpZ2dlclNldCIsInpvbmVJZCIsIk1hdGNoQWxsIiwidHJpZ2dlcnMiLCJpZCIsInR5cGUiLCJuZXRSZWdleCIsImxvc2VzRWZmZWN0IiwiZWZmZWN0SWQiLCJjb25kaXRpb24iLCJfZGF0YSIsIm1hdGNoZXMiLCJ0YXJnZXQiLCJzb3VyY2UiLCJtaXN0YWtlIiwiZGF0YSIsImxvc3RGb29kIiwiaW5Db21iYXQiLCJibGFtZSIsInJlcG9ydElkIiwidGFyZ2V0SWQiLCJ0ZXh0IiwiZW4iLCJkZSIsImZyIiwiamEiLCJjbiIsImtvIiwiZ2FpbnNFZmZlY3QiLCJydW4iLCJhYmlsaXR5IiwiSXNQbGF5ZXJJZCIsInNvdXJjZUlkIiwiTWlkZGxlTGFOb3NjZWEiLCJnYW1lTmFtZUxvZyIsImxpbmUiLCJuZXRSZWdleEZyIiwibmV0UmVnZXhKYSIsIm5ldFJlZ2V4Q24iLCJuZXRSZWdleEtvIiwibWUiLCJhYmlsaXR5RnVsbCIsInN0cmlraW5nRHVtbXlCeUxvY2FsZSIsInN0cmlraW5nRHVtbXlOYW1lcyIsIk9iamVjdCIsInZhbHVlcyIsImluY2x1ZGVzIiwiYm9vdENvdW50IiwiRGFtYWdlRnJvbU1hdGNoZXMiLCJlZmZlY3QiLCJlY2hvIiwic3VwcHJlc3NTZWNvbmRzIiwicG9rZUNvdW50IiwiZGVsYXlTZWNvbmRzIiwiVGhlQm93bE9mRW1iZXJzIiwiZGFtYWdlV2FybiIsInNoYXJlV2FybiIsIlRoZVdob3JsZWF0ZXJFeHRyZW1lIiwiZGFtYWdlRmFpbCIsImdhaW5zRWZmZWN0V2FybiIsImdhaW5zRWZmZWN0RmFpbCIsImRlYXRoUmVhc29uIiwibmFtZSIsIlRoZUFraEFmYWhBbXBoaXRoZWF0cmVFeHRyZW1lIiwic2hhcmVGYWlsIiwic29sb1dhcm4iLCJwYXJzZUZsb2F0IiwiZHVyYXRpb24iLCJUaGVBa2hBZmFoQW1waGl0aGVhdHJlSGFyZCIsInNlZW5EaWFtb25kRHVzdCIsInBsYXllckRhbWFnZUZpZWxkcyIsIlRoZU5hdmVsRXh0cmVtZSIsIlRoZU5hdmVsSGFyZCIsIlRoZU5hdmVsIiwiVGhlV2VlcGluZ0NpdHlPZk1oYWNoIiwiem9tYmllIiwic2hpZWxkIiwiVGhlQWV0aGVyb2NoZW1pY2FsUmVzZWFyY2hGYWNpbGl0eSIsIkJhZWxzYXJzV2FsbCIsIlRoZUZyYWN0YWxDb250aW51dW0iLCJUaGVHcmVhdEd1YmFsTGlicmFyeUhhcmQiLCJoYXNJbXAiLCJTb2htQWxIYXJkIiwiQWxleGFuZGVyVGhlU291bE9mVGhlQ3JlYXRvciIsImFzc2F1bHQiLCJwdXNoIiwiQWxleGFuZGVyVGhlQ3VmZk9mVGhlU29uIiwiVGhlT3Jib25uZU1vbmFzdGVyeSIsInNvbG9GYWlsIiwiVGhlUmlkb3JhbmFMaWdodGhvdXNlIiwiaGVhZE1hcmtlciIsIlRoZVJveWFsQ2l0eU9mUmFiYW5hc3RyZSIsImNvdW50IiwiQWxhTWhpZ28iLCJhYmlsaXR5V2FybiIsImFyZ3MiLCJhYmlsaXR5SWQiLCJjb25zb2xlIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwidHJpZ2dlciIsImZsYWdzIiwic3Vic3RyIiwiQmFyZGFtc01ldHRsZSIsIkNhc3RydW1BYmFuaWEiLCJEb21hQ2FzdGxlIiwiVGhlRHJvd25lZENpdHlPZlNrYWxsYSIsIlRoZUZyYWN0YWxDb250aW51dW1IYXJkIiwiVGhlR2hpbWx5dERhcmsiLCJIZWxsc0xpZCIsIkt1Z2FuZUNhc3RsZSIsIlNoaXN1aU9mVGhlVmlvbGV0VGlkZXMiLCJUaGVTaXJlbnNvbmdTZWEiLCJTYWludE1vY2lhbm5lc0FyYm9yZXR1bUhhcmQiLCJUaGVTd2FsbG93c0NvbXBhc3MiLCJUaGVUZW1wbGVPZlRoZUZpc3QiLCJUaGVCdXJuIiwiQWxwaGFzY2FwZVYyMCIsIkFscGhhc2NhcGVWMjBTYXZhZ2UiLCJBbHBoYXNjYXBlVjMwIiwiQWxwaGFzY2FwZVYzMFNhdmFnZSIsIkFscGhhc2NhcGVWNDAiLCJBbHBoYXNjYXBlVjQwU2F2YWdlIiwidnVsbiIsIkRlbHRhc2NhcGVWMTAiLCJEZWx0YXNjYXBlVjEwU2F2YWdlIiwiRGVsdGFzY2FwZVYyMCIsIkRlbHRhc2NhcGVWMjBTYXZhZ2UiLCJEZWx0YXNjYXBlVjMwIiwic3RhcnRzVXNpbmciLCJjYXB0dXJlIiwibmV0UmVnZXhEZSIsInBoYXNlTnVtYmVyIiwiaW5pdGlhbGl6ZWQiLCJnYW1lQ291bnQiLCJEZWx0YXNjYXBlVjMwU2F2YWdlIiwiRGVsdGFzY2FwZVY0MCIsIkRlbHRhc2NhcGVWNDBTYXZhZ2UiLCJpc0RlY2lzaXZlQmF0dGxlRWxlbWVudCIsImlzTmVvRXhkZWF0aCIsImhhc0JleW9uZERlYXRoIiwiZG91YmxlQXR0YWNrTWF0Y2hlcyIsImFyciIsImxlbmd0aCIsIlNpZ21hc2NhcGVWMTAiLCJoYXNUaHJvdHRsZSIsImxvZyIsIlNpZ21hc2NhcGVWMTBTYXZhZ2UiLCJTaWdtYXNjYXBlVjIwIiwiaGFzRmlyZVJlc2lzdCIsIlNpZ21hc2NhcGVWMjBTYXZhZ2UiLCJTaWdtYXNjYXBlVjMwIiwiU2lnbWFzY2FwZVYzMFNhdmFnZSIsIlNpZ21hc2NhcGVWNDAiLCJTaWdtYXNjYXBlVjQwU2F2YWdlIiwiQWxwaGFzY2FwZVYxMCIsIkFscGhhc2NhcGVWMTBTYXZhZ2UiLCJoYXNIZWFkd2luZCIsImhhc1ByaW1vcmRpYWwiLCJUaGVKYWRlU3RvYSIsIlRoZUphZGVTdG9hRXh0cmVtZSIsIkVtYW5hdGlvbiIsIkVtYW5hdGlvbkV4dHJlbWUiLCJUaGVHcmVhdEh1bnQiLCJUaGVHcmVhdEh1bnRFeHRyZW1lIiwiVGhlV3JlYXRoT2ZTbmFrZXMiLCJUaGVXcmVhdGhPZlNuYWtlc0V4dHJlbWUiLCJUaGVSb3lhbE1lbmFnZXJpZSIsIlRoZU1pbnN0cmVsc0JhbGxhZFNoaW5yeXVzRG9tYWluIiwiVGhlUG9vbE9mVHJpYnV0ZSIsIlRoZVBvb2xPZlRyaWJ1dGVFeHRyZW1lIiwiSGVsbHNLaWVyIiwiSGVsbHNLaWVyRXh0cmVtZSIsIkNhc3RydW1GbHVtaW5pcyIsIlRoZU1pbnN0cmVsc0JhbGxhZFRzdWt1eW9taXNQYWluIiwiS3VnYW5lT2hhc2hpIiwiVGhlV2VhcG9uc1JlZnJhaW5VbHRpbWF0ZSIsImtGbGFnSW5zdGFudERlYXRoIiwiVGhlVW5lbmRpbmdDb2lsT2ZCYWhhbXV0VWx0aW1hdGUiLCJoYXNEb29tIiwiVGhlQ29waWVkRmFjdG9yeSIsIlRoZVB1cHBldHNCdW5rZXIiLCJUaGVUb3dlckF0UGFyYWRpZ21zQnJlYWNoIiwiQWthZGFlbWlhQW55ZGVyIiwiQW1hdXJvdCIsIkFuYW1uZXNpc0FueWRlciIsIkRvaG5NaGVnIiwiVGhlSGVyb2VzR2F1bnRsZXQiLCJIb2xtaW5zdGVyU3dpdGNoIiwiTWFsaWthaHNXZWxsIiwiTWF0b3lhc1JlbGljdCIsIk10R3VsZyIsIlBhZ2x0aGFuIiwiVGhlUWl0YW5hUmF2ZWwiLCJUaGVHcmFuZENvc21vcyIsIlRoZVR3aW5uaW5nIiwiRGVsdWJydW1SZWdpbmFlIiwic2xpY2UiLCJEZWx1YnJ1bVJlZ2luYWVTYXZhZ2UiLCJFZGVuc1Byb21pc2VMaXRhbnkiLCJFZGVuc1Byb21pc2VMaXRhbnlTYXZhZ2UiLCJFZGVuc1Byb21pc2VBbmFtb3JwaG9zaXMiLCJFZGVuc1Byb21pc2VBbmFtb3JwaG9zaXNTYXZhZ2UiLCJFZGVuc1Byb21pc2VFdGVybml0eSIsIlVucmVhY2hhYmxlQ29kZSIsIk91dHB1dHMiLCJmaXJzdEhlYWRtYXJrZXIiLCJwYXJzZUludCIsImdldEhlYWRtYXJrZXJJZCIsImRlY09mZnNldCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJwYWRTdGFydCIsIkVkZW5zUHJvbWlzZUV0ZXJuaXR5U2F2YWdlIiwiZmlyc3RMYXNlck1hcmtlciIsImxhc3RMYXNlck1hcmtlciIsImxhc2VyTmFtZVRvTnVtIiwic2N1bHB0dXJlWVBvc2l0aW9ucyIsInkiLCJ0ZXRoZXIiLCJzY3VscHR1cmVUZXRoZXJOYW1lVG9JZCIsImJsYWRlT2ZGbGFtZUNvdW50IiwibnVtYmVyIiwibmFtZXMiLCJrZXlzIiwid2l0aE51bSIsImZpbHRlciIsIm93bmVycyIsIm1pbmltdW1ZYWxtc0ZvclN0YXR1ZXMiLCJpc1N0YXR1ZVBvc2l0aW9uS25vd24iLCJpc1N0YXR1ZU5vcnRoIiwic2N1bHB0dXJlSWRzIiwib3RoZXJJZCIsInNvdXJjZVkiLCJvdGhlclkiLCJ1bmRlZmluZWQiLCJ5RGlmZiIsIk1hdGgiLCJhYnMiLCJvd25lciIsIm93bmVyTmljayIsIlNob3J0TmFtZSIsInBpbGxhcklkVG9Pd25lciIsInBpbGxhck93bmVyIiwiZmlyZSIsInNtYWxsTGlvbklkVG9Pd25lciIsInNtYWxsTGlvbk93bmVycyIsImhhc1NtYWxsTGlvbiIsImhhc0ZpcmVEZWJ1ZmYiLCJjZW50ZXJZIiwieCIsImRpck9iaiIsImRpck5FIiwiZGlyTlciLCJkaXJTRSIsImRpclNXIiwiYWRkZWRDb21iYXRhbnRGdWxsIiwibm9ydGhCaWdMaW9uIiwic2luZ2xlVGFyZ2V0Iiwic291dGhCaWdMaW9uIiwic2hhcmVkIiwiZmlyZURlYnVmZiIsImxhYmVscyIsImxhbmciLCJvcHRpb25zIiwiUGFyc2VyTGFuZ3VhZ2UiLCJqb2luIiwiRWRlbnNHYXRlUmVzdXJyZWN0aW9uIiwiRWRlbnNHYXRlUmVzdXJyZWN0aW9uU2F2YWdlIiwiRWRlbnNHYXRlRGVzY2VudCIsIkVkZW5zR2F0ZURlc2NlbnRTYXZhZ2UiLCJFZGVuc0dhdGVJbnVuZGF0aW9uIiwiRWRlbnNHYXRlSW51bmRhdGlvblNhdmFnZSIsIkVkZW5zR2F0ZVNlcHVsdHVyZSIsIkVkZW5zR2F0ZVNlcHVsdHVyZVNhdmFnZSIsImZhdWx0TGluZVRhcmdldCIsIkVkZW5zVmVyc2VGdWxtaW5hdGlvbiIsImhhc09yYiIsImNsb3VkTWFya2VycyIsIm5vT3JiIiwic3RyIiwiRWRlbnNWZXJzZUZ1bG1pbmF0aW9uU2F2YWdlIiwiaGF0ZWQiLCJFZGVuc1ZlcnNlRnVyb3IiLCJFZGVuc1ZlcnNlRnVyb3JTYXZhZ2UiLCJ3cm9uZ0J1ZmYiLCJub0J1ZmYiLCJFZGVuc1ZlcnNlSWNvbm9jbGFzbSIsImhhc0FzdHJhbCIsImhhc1VtYnJhbCIsIkVkZW5zVmVyc2VJY29ub2NsYXNtU2F2YWdlIiwiRWRlbnNWZXJzZVJlZnVsZ2VuY2UiLCJFZGVuc1ZlcnNlUmVmdWxnZW5jZVNhdmFnZSIsIkVkZW5zUHJvbWlzZVVtYnJhIiwiRWRlbnNQcm9taXNlVW1icmFTYXZhZ2UiLCJUaGVDbG91ZERlY2siLCJUaGVDbG91ZERlY2tFeHRyZW1lIiwiQ2FzdHJ1bU1hcmludW0iLCJDYXN0cnVtTWFyaW51bUV4dHJlbWUiLCJzcGhlcmVOaXRybyIsInNwaGVyZUNlcnVsZXVtIiwiVGhlRHlpbmdHYXNwIiwiVGhlTWluc3RyZWxzQmFsbGFkSGFkZXNzRWxlZ3kiLCJoYXNEYXJrIiwiVGhlQ3Jvd25PZlRoZUltbWFjdWxhdGUiLCJUaGVDcm93bk9mVGhlSW1tYWN1bGF0ZUV4dHJlbWUiLCJUaGVXaG9ybGVhdGVyVW5yZWFsIiwiQ2luZGVyRHJpZnQiLCJDaW5kZXJEcmlmdEV4dHJlbWUiLCJUaGVBa2hBZmFoQW1waGl0aGVhdHJlVW5yZWFsIiwiVGhlRGFuY2luZ1BsYWd1ZSIsIlRoZURhbmNpbmdQbGFndWVFeHRyZW1lIiwiVGhlTmF2ZWxVbnJlYWwiLCJNZW1vcmlhTWlzZXJhRXh0cmVtZSIsIlRoZVNlYXRPZlNhY3JpZmljZSIsIlRoZVNlYXRPZlNhY3JpZmljZUV4dHJlbWUiLCJUaGVFcGljT2ZBbGV4YW5kZXJVbHRpbWF0ZSIsImphZ2RUZXRoZXIiLCJwYXJ0eSIsImlzVGFuayIsIlNtaWxldG9uIiwiVGhlQWl0aWFzY29wZSIsIlRoZVRvd2VyT2ZCYWJpbCIsIlRoZVRvd2VyT2Zab3QiLCJWYW5hc3BhdGkiLCJUaGVNaW5zdHJlbHNCYWxsYWRIeWRhZWx5bnNDYWxsIiwiVGhlRGFya0luc2lkZSJdLCJzb3VyY2VSb290IjoiIn0=